(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    726013,      13779]
NotebookOptionsPosition[    721500,      13722]
NotebookOutlinePosition[    721843,      13737]
CellTagsIndexPosition[    721800,      13734]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"::", "Package", "::"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Mathematica", " ", "Code", " ", "for", " ", "MLP"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Normal", " ", "random", " ", "variables", " ", "with", " ", "variance", 
    " ", "1"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xrv", ":=", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Random", "[", "]"}], ",", 
         RowBox[{"Random", "[", "]"}]}], "}"}]}], "-", "1"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"gauss", ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{"t", "=", "xrv"}], ";", 
        RowBox[{"t", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"t", ".", "t"}], "\[GreaterEqual]", "1"}], ",", "gauss", 
           ",", 
           RowBox[{
            RowBox[{"t", "[", 
             RowBox[{"[", "1", "]"}], "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"-", "2"}], 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"t", ".", "t"}], "]"}], "/", 
               RowBox[{"t", ".", "t"}]}]}], "]"}]}]}], "]"}]}]}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"noise1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{".5", 
        RowBox[{"{", 
         RowBox[{"gauss", ",", "gauss"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1000"}], "}"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Normal", " ", "noise", " ", "var"}], "=", "0.25"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"noise2", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{".5", 
        RowBox[{"{", 
         RowBox[{"gauss", ",", "gauss"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1000"}], "}"}]}], "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Normal", " ", "noise", " ", "var"}], "=", "0.25"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"trainSize", "=", "64"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"hiddenNeurons", "=", "8"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"iterations", "=", "1000"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Logistic", " ", 
     RowBox[{"function", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "x"}], "]"}]}], ")"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"works", " ", "on", " ", "vectors", " ", "component"}], "-", 
     "wise"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"weight1TwoHidden", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1584917264152108`"}], ",", "0.8851638269350084`", 
         ",", 
         RowBox[{"-", "0.437090407518425`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3787556600698261`"}], ",", "0.48991306808406465`", 
         ",", "1.0532859918231807`"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"weight2TwoHidden", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.6580779583970404`"}], ",", 
       RowBox[{"-", "1.2103699644244454`"}], ",", 
       RowBox[{"-", "1.0814717551591504`"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"weight1FourHidden", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1584917264152108`"}], ",", "0.8851638269350084`", 
         ",", 
         RowBox[{"-", "0.437090407518425`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3787556600698261`"}], ",", "0.48991306808406465`", 
         ",", "1.0532859918231807`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.6906774909754727`", ",", 
         RowBox[{"-", "1.2562396803966913`"}], ",", "0.6055224991776322`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.0453655321496325`"}], ",", 
         RowBox[{"-", "1.3598638998608554`"}], ",", "0.4931203579753838`"}], 
        "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"weight2FourHidden", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.6580779583970404`"}], ",", 
       RowBox[{"-", "1.2103699644244454`"}], ",", 
       RowBox[{"-", "1.0814717551591504`"}], ",", 
       RowBox[{"-", "1.9693993279724473`"}], ",", 
       RowBox[{"-", "0.1479910264811053`"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"weight1EightHidden", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.1584917264152108`"}], ",", "0.8851638269350084`", 
         ",", 
         RowBox[{"-", "0.437090407518425`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3787556600698261`"}], ",", "0.48991306808406465`", 
         ",", "1.0532859918231807`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.6906774909754727`", ",", 
         RowBox[{"-", "1.2562396803966913`"}], ",", "0.6055224991776322`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.0453655321496325`"}], ",", 
         RowBox[{"-", "1.3598638998608554`"}], ",", "0.4931203579753838`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.732356067166775`"}], ",", 
         RowBox[{"-", "0.6110804964565404`"}], ",", "0.14486753509692818`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.562135975007601`"}], ",", 
         RowBox[{"-", "1.8109980467573292`"}], ",", 
         RowBox[{"-", "0.792770320873474`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.7607046180590156`", ",", 
         RowBox[{"-", "1.91335013095563`"}], ",", 
         RowBox[{"-", "0.8165696848122512`"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6747938625105627`", ",", "0.4814378373224244`", ",", 
         RowBox[{"-", "0.3481549880422734`"}]}], "}"}]}], "}"}]}], ";"}], 
   "\n", 
   RowBox[{
    RowBox[{"weight2EightHidden", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.6580779583970404`"}], ",", 
       RowBox[{"-", "1.2103699644244454`"}], ",", 
       RowBox[{"-", "1.0814717551591504`"}], ",", 
       RowBox[{"-", "1.9693993279724473`"}], ",", 
       RowBox[{"-", "0.1479910264811053`"}], ",", 
       RowBox[{"-", "0.26365595624762617`"}], ",", "0.2278507538653769`", ",",
        "1.2868403524242442`", ",", "1.2464864743412627`"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"testset", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
         "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
          "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
          ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",",
          "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
         ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
          ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",",
          "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
         ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0",
          ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
         "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",",
          "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", 
         ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
          ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"testout", "=", 
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ".", "testset"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"testset", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"testset", "+", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Take", "[", 
          RowBox[{"noise2", ",", "64"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"Take", "[", 
         RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"etab16", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"etab2H16", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"etab4H16", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "iterations", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sampleetab16", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"etab32", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "2"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"etab4H32", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "2"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"etab2H32", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "2"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sampleetab32", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "20"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"etab64", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"etab2H64", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"etab4H64", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "4"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sampleetab64", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"iterations", "/", "40"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"and", " ", "an", " ", "offset", " ", 
     RowBox[{"vector", ":"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ones", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"{", "64", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"train16", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.28552913795916557`"}], ",", "0.7195684647840876`", 
         ",", "0.6428144957304299`", ",", 
         RowBox[{"-", "1.2214079369733455`"}], ",", "0.12156358903633763`", 
         ",", 
         RowBox[{"-", "0.02681021984035775`"}], ",", "0.5253360707042003`", 
         ",", "0.023017785419832435`", ",", "1.3647068066067805`", ",", 
         "0.6169169398171841`", ",", 
         RowBox[{"-", "0.05097468069223843`"}], ",", "0.9621930482182198`", 
         ",", "2.0039712581490337`", ",", "1.494941053721349`", ",", 
         "1.8232834908098776`", ",", "1.3095628634378593`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1351850177267172`"}], ",", 
         RowBox[{"-", "0.6461033522630971`"}], ",", "0.3936361253161326`", 
         ",", 
         RowBox[{"-", "0.4818122191520221`"}], ",", "0.8531248252818876`", 
         ",", "0.4283287710031124`", ",", "0.9239675446441595`", ",", 
         "2.3408069389964883`", ",", "0.12617277126971443`", ",", 
         RowBox[{"-", "0.7840018877126417`"}], ",", "0.28585540924776964`", 
         ",", "0.20172296638013348`", ",", "0.9227672145623982`", ",", 
         "1.9034208974172464`", ",", "1.0814599466665706`", ",", 
         "0.7678062251139949`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"train16out", "=", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"train32", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.28552913795916557`"}], ",", "0.7195684647840876`", 
         ",", "0.6428144957304299`", ",", 
         RowBox[{"-", "1.2214079369733455`"}], ",", "0.12156358903633763`", 
         ",", 
         RowBox[{"-", "0.02681021984035775`"}], ",", "0.5253360707042003`", 
         ",", "0.023017785419832435`", ",", "1.3647068066067805`", ",", 
         "0.6169169398171841`", ",", 
         RowBox[{"-", "0.05097468069223843`"}], ",", "0.9621930482182198`", 
         ",", "2.0039712581490337`", ",", "1.494941053721349`", ",", 
         "1.8232834908098776`", ",", "1.3095628634378593`", ",", 
         RowBox[{"-", "1.0147966566702842`"}], ",", 
         RowBox[{"-", "0.9981210089769575`"}], ",", 
         RowBox[{"-", "0.24653774590506272`"}], ",", "0.21248328797595567`", 
         ",", "0.9820948173375194`", ",", 
         RowBox[{"-", "0.2889487200360429`"}], ",", "0.15223140224400994`", 
         ",", 
         RowBox[{"-", "0.061342860161801786`"}], ",", "0.8180663203622411`", 
         ",", "1.4070169662538414`", ",", "1.396608609796169`", ",", 
         "0.19048752447837047`", ",", "1.9050498379614096`", ",", 
         "0.6929348834662405`", ",", "1.6402384757155777`", ",", 
         "1.5483652008732354`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1351850177267172`"}], ",", 
         RowBox[{"-", "0.6461033522630971`"}], ",", "0.3936361253161326`", 
         ",", 
         RowBox[{"-", "0.4818122191520221`"}], ",", "0.8531248252818876`", 
         ",", "0.4283287710031124`", ",", "0.9239675446441595`", ",", 
         "2.3408069389964883`", ",", "0.12617277126971443`", ",", 
         RowBox[{"-", "0.7840018877126417`"}], ",", "0.28585540924776964`", 
         ",", "0.20172296638013348`", ",", "0.9227672145623982`", ",", 
         "1.9034208974172464`", ",", "1.0814599466665706`", ",", 
         "0.7678062251139949`", ",", 
         RowBox[{"-", "0.06267965699616611`"}], ",", 
         RowBox[{"-", "0.09738616455723009`"}], ",", "1.258834235172041`", 
         ",", 
         RowBox[{"-", "0.9181325633482432`"}], ",", 
         RowBox[{"-", "0.25687284722426185`"}], ",", "0.8644818815061412`", 
         ",", "0.6687933835399065`", ",", "1.952064396818376`", ",", 
         RowBox[{"-", "0.03615542602466572`"}], ",", 
         RowBox[{"-", "0.4558139510327045`"}], ",", "0.19052069816031544`", 
         ",", "0.5088150890738556`", ",", "0.6971404022059422`", ",", 
         "1.2709515185765843`", ",", "0.9113841549840859`", ",", 
         "1.0686017159528414`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"train32out", "=", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"train64", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.5433719981429767`", ",", 
         RowBox[{"-", "0.6731427164021281`"}], ",", "0.37153185789053716`", 
         ",", 
         RowBox[{"-", "1.058969581256266`"}], ",", "0.6672108291376684`", ",",
          "0.11137895783055274`", ",", 
         RowBox[{"-", "0.6635579713627339`"}], ",", 
         RowBox[{"-", "0.3493899511348217`"}], ",", "0.845873280519235`", ",", 
         RowBox[{"-", "0.12118815371787672`"}], ",", "0.3795521764112374`", 
         ",", "0.79539445567662`", ",", "1.1887845753731365`", ",", 
         "0.35130148618472756`", ",", "0.7460876379166634`", ",", 
         "1.4107462043004233`", ",", 
         RowBox[{"-", "0.5953328968869244`"}], ",", "0.33644176835114586`", 
         ",", 
         RowBox[{"-", "0.6547935950665994`"}], ",", 
         RowBox[{"-", "0.03874446810555093`"}], ",", 
         RowBox[{"-", "0.305501399532944`"}], ",", 
         RowBox[{"-", "0.6289568257795877`"}], ",", 
         RowBox[{"-", "0.056856151302898617`"}], ",", "0.7150409694313724`", 
         ",", "1.3996496138433414`", ",", "0.8601907066663869`", ",", 
         "0.9396325910129384`", ",", "0.6675299369515415`", ",", 
         "0.6241585864477383`", ",", "0.9905391956388255`", ",", 
         "0.5984006685371764`", ",", "1.4590754949742124`", ",", 
         "0.7951045959030182`", ",", 
         RowBox[{"-", "0.6990109983424261`"}], ",", "0.08979687105517459`", 
         ",", 
         RowBox[{"-", "0.1365215284595569`"}], ",", 
         RowBox[{"-", "0.17890447357986236`"}], ",", "1.4116704522947496`", 
         ",", "0.8778121321059575`", ",", 
         RowBox[{"-", "0.8770816809920003`"}], ",", "0.4197267239049898`", 
         ",", "1.8117711819018791`", ",", "1.100599758986621`", ",", 
         "0.39194862767602534`", ",", "0.36579043561677294`", ",", 
         "1.0147613551109758`", ",", "1.9602570265435388`", ",", 
         "1.274010982484577`", ",", "1.1771652813566844`", ",", 
         "0.2866693496109699`", ",", 
         RowBox[{"-", "0.3570119345547125`"}], ",", "0.4124353637600567`", 
         ",", 
         RowBox[{"-", "0.07429880191779542`"}], ",", 
         RowBox[{"-", "0.5832609038976414`"}], ",", "0.22158070171404576`", 
         ",", 
         RowBox[{"-", "0.6253077508787888`"}], ",", "1.2324122794778272`", 
         ",", "1.1143984424756783`", ",", "1.459758025791613`", ",", 
         "0.5500891339828871`", ",", "2.1543757254234777`", ",", 
         "0.591382203722159`", ",", "1.9228457023015342`", ",", 
         "0.8246576287292029`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "0.38146125195437797`", ",", "0.543341008485442`", ",", 
         "0.3025605630175848`", ",", 
         RowBox[{"-", "0.16559617636346532`"}], ",", "0.9872524603279234`", 
         ",", "0.8457465040463573`", ",", "0.8948242754169144`", ",", 
         "2.214341699033864`", ",", "0.4627749565415458`", ",", 
         "0.23436473124467003`", ",", "0.42646052417658725`", ",", 
         "0.09434381745310697`", ",", "1.3038131701554168`", ",", 
         "1.4145241474788188`", ",", "0.8788862234426948`", ",", 
         "0.9265757308211917`", ",", "0.19593395468737043`", ",", 
         "1.213769012876916`", ",", "0.3684565059977865`", ",", 
         RowBox[{"-", "1.030859256187006`"}], ",", "0.5191739142874872`", ",",
          "0.8081090696860751`", ",", "0.7311396622579358`", ",", 
         "0.6368236945704386`", ",", "0.34661840927912574`", ",", 
         "0.3757281842145653`", ",", "0.2710146886191859`", ",", 
         RowBox[{"-", "0.15407161327056496`"}], ",", "0.7389273729581183`", 
         ",", "1.5121347418031108`", ",", "0.8855052100817292`", ",", 
         "1.534201524091573`", ",", "0.0076004851505857215`", ",", 
         RowBox[{"-", "0.9128527297137113`"}], ",", 
         RowBox[{"-", "1.0016124202945205`"}], ",", 
         RowBox[{"-", "0.1205198696934828`"}], ",", "1.3936887142208818`", 
         ",", "1.0386522174252586`", ",", "1.471947999646745`", ",", 
         "2.0676792085969744`", ",", "0.5716178247606677`", ",", 
         "0.287023036295689`", ",", 
         RowBox[{"-", "0.48524851534478014`"}], ",", "0.2670426595462622`", 
         ",", "1.1841190003570976`", ",", "0.8354844992829809`", ",", 
         "1.5384644107103593`", ",", "1.068335332889014`", ",", 
         RowBox[{"-", "0.5466431712526738`"}], ",", 
         RowBox[{"-", "0.03578862879266151`"}], ",", "0.33974073453398423`", 
         ",", "0.06011233866857057`", ",", "1.4928106110916075`", ",", 
         "0.3538344572599813`", ",", "1.2818698707770761`", ",", 
         "0.8465984915027294`", ",", "0.020535697210430526`", ",", 
         RowBox[{"-", "0.4119587814820964`"}], ",", "0.09839570094047592`", 
         ",", "0.06692907167263022`", ",", "1.5722282806437016`", ",", 
         "1.0524730148386152`", ",", "0.5056129181995667`", ",", 
         "1.4716524601309817`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"train64out", "=", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
       "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
       "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
       "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{"Target", " ", "output"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"trainSize", "\[Equal]", "16"}], ",", 
     RowBox[{
      RowBox[{"trainop", "=", "train16out"}], ";", 
      RowBox[{"train", "=", "train16wnoise"}], ";"}], ",", 
     RowBox[{"0", ";"}]}], "]"}], "\n", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"trainSize", "\[Equal]", "32"}], ",", 
     RowBox[{
      RowBox[{"trainop", "=", "train32out"}], ";", 
      RowBox[{"train", "=", "train32wnoise"}], ";"}], ",", 
     RowBox[{"0", ";"}]}], "]"}], "\n", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"trainSize", "\[Equal]", "64"}], ",", 
     RowBox[{
      RowBox[{"trainop", "=", "train64out"}], ";", 
      RowBox[{"train", "=", "train64wnoise"}], ";"}], ",", 
     RowBox[{"0", ";"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
       "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", 
       "1", ",", "0"}], "}"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Full", " ", "set", " ", "of", " ", "training", " ", "vectors"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Training", " ", "patterns", " ", "are", " ", "3", "*", "16", " ", 
      "matrix"}], ";", 
     RowBox[{"last", " ", "row", " ", "is", " ", 
      RowBox[{"offset", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.310691"}], ",", 
         RowBox[{"-", "0.309003"}], ",", "1.25774", ",", "1.31959", ",", 
         RowBox[{"-", "0.0897083"}], ",", 
         RowBox[{"-", "0.457115"}], ",", "1.42524", ",", "1.43962", ",", 
         RowBox[{"-", "0.21377"}], ",", 
         RowBox[{"-", "0.16744"}], ",", "0.579612", ",", "1.90558", ",", 
         "0.442017", ",", 
         RowBox[{"0", " ", ".204012"}], ",", "1.75664", ",", "0.584128"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.0164278", ",", "0.898471", ",", 
         RowBox[{"-", "0.231735"}], ",", "0.82952", ",", 
         RowBox[{"-", "1.02045"}], ",", "1.84369", ",", "0.111823", ",", 
         "0.28365", ",", "0.0759174", ",", "0.985518", ",", "0.584378", ",", 
         "0.434351", ",", "0.35245", ",", 
         RowBox[{"-", "0.0194183"}], ",", 
         RowBox[{"-", "0.336488"}], ",", "1.45608"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Then", " ", "the", " ", "training", " ", "loop", " ", "of", " ", "1000", 
     " ", 
     RowBox[{"epochs", ":"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------2/16-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1TwoHidden", ".", "train16"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2TwoHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "16"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train16out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab16", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "16"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2TwoHidden", ",", "deltaout"}], "]"}], 
         ",", "2"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2TwoHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "16"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1TwoHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train16", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab16", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab16", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab16", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\[IndentingNewLine]",
    "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1TwoHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2TwoHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", "etab16", "]"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2TwoHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1TwoHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"etab2H16", "=", "etab16"}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------4/16-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1FourHidden", ".", "train16"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2FourHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "16"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train16out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab16", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "16"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2FourHidden", ",", "deltaout"}], "]"}],
          ",", "4"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2FourHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "16"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1FourHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train16", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab16", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab16", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab16", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1FourHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2FourHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", "etab16", "]"}], "\n", 
   RowBox[{
    RowBox[{"etab4H16", "=", "etab16"}], ";"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2FourHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1FourHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------8/16-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1EightHidden", ".", "train16"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2EightHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "16"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train16out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab16", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "16"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2EightHidden", ",", "deltaout"}], 
          "]"}], ",", "8"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2EightHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "16"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1EightHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train16", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab16", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab16", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab16", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1EightHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2EightHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", "etab16", "]"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2EightHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1EightHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"iterations", "=", 
     RowBox[{"iterations", "/", "2"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------2/32-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1TwoHidden", ".", "train32"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2TwoHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "32"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train32out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab32", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "32"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2TwoHidden", ",", "deltaout"}], "]"}], 
         ",", "2"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2TwoHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "32"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1TwoHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train32", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab32", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab32", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab32", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1TwoHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2TwoHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", "etab32", "]"}], "\n", 
   RowBox[{
    RowBox[{"etab2H32", "=", "etab32"}], ";"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2TwoHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1TwoHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------4/32-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1FourHidden", ".", "train32"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2FourHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "32"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train32out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab32", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "32"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2FourHidden", ",", "deltaout"}], "]"}],
          ",", "4"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2FourHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "32"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1FourHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train32", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab32", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab32", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab32", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1FourHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2FourHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", "etab32", "]"}], "\n", 
   RowBox[{
    RowBox[{"etab4H32", "=", "etab32"}], ";"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2FourHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1FourHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------8/32-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1EightHidden", ".", "train32"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2EightHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "32"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train32out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab32", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "32"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2EightHidden", ",", "deltaout"}], 
          "]"}], ",", "8"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2EightHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "32"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1EightHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train32", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab32", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab32", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab32", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1EightHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2EightHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"etab32", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2EightHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1EightHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterations", "=", 
     RowBox[{"iterations", "/", "2"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------2/64-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1TwoHidden", ".", "train64"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2TwoHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train64out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab64", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "64"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2TwoHidden", ",", "deltaout"}], "]"}], 
         ",", "2"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2TwoHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1TwoHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train64", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab64", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab64", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab64", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1TwoHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2TwoHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"etab64", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"etab2H64", "=", "etab64"}], ";"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2TwoHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1TwoHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------4/64-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1FourHidden", ".", "train64"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2FourHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train64out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab64", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "64"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      RowBox[{"ehid", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"Outer", "[", 
          RowBox[{"Times", ",", "weight2FourHidden", ",", "deltaout"}], "]"}],
          ",", "4"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2FourHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1FourHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train64", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab64", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab64", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab64", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1FourHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2FourHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"etab64", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"etab4H64", "=", "etab64"}], ";"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2FourHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1FourHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Print", "[", 
     "\"\<------------------------8/64-----------------------\>\"", "]"}], 
    ";"}], "\n", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"hid", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight1EightHidden", ".", "train64"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "outputs"}], "*)"}], 
      RowBox[{"out", "=", 
       RowBox[{"f", "[", 
        RowBox[{"weight2EightHidden", ".", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"net", " ", "output"}], "*)"}], 
      RowBox[{"e", "=", 
       RowBox[{"train64out", "-", "out"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"output", " ", "error"}], "*)"}], 
      RowBox[{
       RowBox[{"etab64", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"e", ".", "e"}], "/", "64"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"squared", " ", "error", " ", "on", " ", "epoch", " ", "i"}], 
       "*)"}], 
      RowBox[{"deltaout", "=", 
       RowBox[{"e", "*", "out", 
        RowBox[{"(", 
         RowBox[{"1", "-", "out"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"delta", " ", "for", " ", "output", " ", "unit"}], "*)"}], 
      GridBox[{
        {
         RowBox[{"ehid", "=", 
          RowBox[{"Take", "[", 
           RowBox[{
            RowBox[{"Outer", "[", 
             RowBox[{"Times", ",", "weight2EightHidden", ",", "deltaout"}], 
             "]"}], ",", "8"}], "]"}]}]},
        {"\[Placeholder]"},
        {"\[Placeholder]"}
       }], ";", 
      RowBox[{"(*", 
       RowBox[{"backpropagate", ",", 
        RowBox[{"strip", " ", "offset"}]}], "*)"}], 
      RowBox[{"deltahid", "=", 
       RowBox[{"ehid", "*", "hid", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "hid"}], ")"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"get", " ", "delta", " ", "for", " ", "hidden", " ", "layer"}],
        "*)"}], 
      RowBox[{"weight2EightHidden", "+=", 
       RowBox[{"deltaout", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Join", "[", 
          RowBox[{"hid", ",", 
           RowBox[{"{", 
            RowBox[{"Take", "[", 
             RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}], "]"}]}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"update", " ", "output", " ", "weight", " ", "matrix"}], 
       "*)"}], 
      RowBox[{"weight1EightHidden", "+=", 
       RowBox[{"deltahid", ".", 
        RowBox[{"Transpose", "[", "train64", "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"hidden", " ", "weight", " ", "matrix"}], "*)"}], 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"sampleetab64", "[", 
          RowBox[{"[", 
           RowBox[{"i", "/", "10"}], "]"}], "]"}], "=", 
         RowBox[{"etab64", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", "0"}], "]"}]}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mod", "[", 
          RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"etab64", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0"}], "]"}], "*)"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "iterations"}], "}"}]}], "]"}], "\n", 
   RowBox[{
    RowBox[{"hid", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight1EightHidden", ".", "testset"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"hidden", " ", "outputs"}], "*)"}], 
    RowBox[{"out", "=", 
     RowBox[{"f", "[", 
      RowBox[{"weight2EightHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{"hid", ",", 
         RowBox[{"{", 
          RowBox[{"Take", "[", 
           RowBox[{"ones", ",", "64"}], "]"}], "}"}]}], "]"}]}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"net", " ", "output"}], "*)"}], 
    RowBox[{"error", "=", 
     RowBox[{"testout", "-", "out"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"error", ".", "error"}], "/", "64"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{"etab64", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}]}], "]"}], "\n", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"weight2EightHidden", ".", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"weight1EightHidden", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "x", "}"}], ",", 
             RowBox[{"{", "y", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"-", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"-", "1"}], "}"}], "}"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etab2H16", ",", "etab2H32", ",", "etab2H64"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<N = 16\>\"", ",", "\"\<N = 32\>\"", ",", "\"\<N =64\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
        RowBox[{"Dashing", "[", "Large", "]"}], ",", "Default"}], "}"}]}]}], 
    "]"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etab4H16", ",", "etab4H32", ",", "etab4H64"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<N = 16\>\"", ",", "\"\<N = 32\>\"", ",", "\"\<N =64\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
        RowBox[{"Dashing", "[", "Large", "]"}], ",", "Default"}], "}"}]}]}], 
    "]"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etab16", ",", "etab32", ",", "etab64"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<N = 16\>\"", ",", "\"\<N = 32\>\"", ",", "\"\<N =64\>\""}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
        RowBox[{"Dashing", "[", "Large", "]"}], ",", "Default"}], "}"}]}]}], 
    "]"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etab2H16", ",", "etab4H16", ",", "etab16"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2 Hidden Neurons\>\"", ",", "\"\<4 Hidden Neurons\>\"", ",", 
        "\"\<8 Hidden Neurons\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
        RowBox[{"Dashing", "[", "Large", "]"}], ",", "Default"}], "}"}]}]}], 
    "]"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etab2H32", ",", "etab4H32", ",", "etab32"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2 Hidden Neurons\>\"", ",", "\"\<4 Hidden Neurons\>\"", ",", 
        "\"\<8 Hidden Neurons\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
        RowBox[{"Dashing", "[", "Large", "]"}], ",", "Default"}], "}"}]}]}], 
    "]"}], "\n", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etab2H64", ",", "etab4H64", ",", "etab64"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<2 Hidden Neurons\>\"", ",", "\"\<4 Hidden Neurons\>\"", ",", 
        "\"\<8 Hidden Neurons\>\""}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"epoch", " ", "number"}], ",", 
        "\"\<average square error\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Tiny", "]"}], ",", 
        RowBox[{"Dashing", "[", "Large", "]"}], ",", "Default"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.765707692862452*^9, 3.7657077166992245`*^9}, {
  3.765713907083637*^9, 3.765713910778556*^9}, {3.7657166354422364`*^9, 
  3.765716659889245*^9}},ExpressionUUID->"7f5c40c5-df4c-4147-aad5-\
45e4e3a34d2d"],

Cell[BoxData["\<\"------------------------2/16-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.7657077193177586`*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"f344ac2e-2580-4433-8851-a09452b57a30"],

Cell[BoxData["0.3014377530039445`"], "Output",
 CellChangeTimes->{3.7657077193959*^9},
 CellLabel->
  "Out[1162]=",ExpressionUUID->"e195445d-ed6f-43ef-9471-61e4198e3537"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw1l3c01f/jx4WiJUWp+EQp0dSSpHo2tIdE2tnZe8/Lna57VRratLUXaUpb
aWhIpaGtPVQqys/3/N5P/ziPc6/38/V4Pc65zu3qEeLkramhoeGupaHxv9/K
g+HmxprueH6idELY8POjNP73Y+aOSS1Xnn+gIzDcMV3r5Vy3u+f+n93cYXWy
0yTJNoFF7jhd+Ta5Y6zAue7w2a559u10gYvdUaTU2XjWUuAqd7QbM2+nb1OB
NTwQ4C7tmvfyrLDvgQ6/mphPuSQwPLBiytOFprsFdmt8/1bt1T+WCizygOtN
xyebYwTO9UBh+pw9dW4CF3tAd/iEksdTBK7ygPXNFUMtbAXW8ETEnqpmR3tw
3xN7OkUbhxlyv/H1IIe6Edrc98ThkGGrmv4oFvY98XrH0RZHXguc64nPKmnC
oAcCF3ui/9hXd6OuCVzliTxpn23+xQJreEG7q9lHrQKBzbyQ5V2nNWS3wPDC
5jstAr7lCOzmBXX2ziMDVnPfC7MWzPF4q+K+FywcKsr1Jdz3wps7J61zE7jv
hfEfFA7LIrjvjRyT55KHAdz3xln7Ax9jvbjvjQN3f//zXsh9b7yZ5Lxnw2zu
eyPGJWdaR0fueyNpfbOcu5O4743KmW33Xx/LfW+E7d15r2EE933w1+7riSW2
3PfBVUWNveYg7vugtmtl7LW+3PeBze7KM+ctue+DXt9WrXhlzn0fvPz9fXN/
U+77YMfKyLM5nbnvg1s1Fz8O6sD9JYgvvjzuXVvuL8GPLSVaZ1tzfwleWbWS
Hm3O/SXIqlGOuNKU+0vQouzNidom3G/kdZZjU+vPCPtL8DJl1GyHHwJXLcG9
l3MmDfsksIYvzvfUq5z3RmAzX7TTPvF+Z5XA8MX2QpOELg8FdvOF68yBO07d
EVjki3Qnm+2i6wLn+kLlUnbF9zL3ffH3iXdSxFnu++LPW/WonJPc90Pfzlu3
vSvgvh9G3wpzdj7IfT9c2dugW7mb+36IHeivTtrOfT+M3/XwlF0u9/1w0FGd
2nY99/2w2vndHY3V3PfDZO0Dx3WWc98fKbU9HHqouO+PJe8DV86Rc98fq0Zd
LstN474/JAb1ff8mcd8fV0zOvA2M474/ijzMp3yO5L4/hpgabRGHct8fWobV
460CuR+ANgU31z5dwv0AyFbINHd4cj8AJ8RPPics5n4Aqpp4VrjN534AfLwa
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
2DS2KfuLsbMof+ZRbfYXQ5Exu+C7FvuLkeQ9dPIgsrUYMR+utwnXZH8xcnyy
mh5qwv5i1J3+1+uLBvuL4ZOcmdKf7CiG050izZCGU0L/xr+X6uXv/yewmxhx
v/9mfforsK8YFn3a5PQjh4rx8NDFiuB6gWPFyDuyw/5AncAiMUZ+tL3++Y/A
CjHKd2unW5OXifH30oqQsN8CrxFDnhcmOvxL4FwxFqP3yZpagfPE8NOZYTqE
fFCM2fWBe6N/CnxMjM2bO3gc+yFwsRhj6p6M+vNd4BIxSlTzHOzJZWIYuJqG
J9cIfF+MQfcuXCz+JnCVGOENL0ZpkavFMBxlVOXwVeAvYsyN/rNd8UXgX2JM
+N1reelngTUkyFFN2KxH1pXgnueX8pmfBNaXoLLL5X6rPgrcUQKTkuA99z8I
bCaB6+2MKSZkSwk2d7ig5/ZeYGsJcLvo+9Z3AttKoNrW/e+btwJDglpVTs8+
5IkSvKx+GBFaLbCjBFvCxM/y37C/BGPtJoT+fs3+EuzZV246kuwrQYDq6ee0
V+wvQd67DlWXX7K/BH379f/SiiySwLrVY1OnF+wvQaj8XnD2c/aXoP7j7UeP
nrG/BMMrlH7dyLkSfO56zNC3iv0l0PjW/sm+p+wvwYr9bhdrnrC/BJ8aXK4O
IxdLEHg9/0PKY/aXIGr4iD6XHrG/BMm7Dipake9L8PTArSazKtlfgr//eWWv
fcj+Emj+6jOp6gH7S6Ab9a1DT/KvxvfXJ2gE32d/KdZZZDUtqGB/KZwK/vWo
v8f+Uvhkq9zHkjtKcfaFzjFlOftL8btihNXtu+wvRfC9+vxOZGsp/ngazne/
w/5SDLJwMd51m/2lGP1s2Y8vt9hfipdR697akh2l8HzqUCsqY39p4/cT3y5X
brK/FF2yKxa1JftKcWR6wLG5N9hfihe76nptuc7+Uuxv4XH03TX2l2L5s9h5
g8gKKVbtMTZKLGV/KWy+WHy4cJX9pUgbFfugNTm30b//pyezr7C/FNsW+Nbn
lLC/FM09Lw94e5n9pRj27EPyQHKxFFcjTr5IuMT+UpQf6eB28SL7S9F0yIsa
PfJ9KbLEzXLmXGB/KUZ2W+K+5Tz7SxGp+GD34Rz7S9HXLKW3DfmXFHrjdAeJ
zrK/DLNHhM+8Wsz+MjQbkyczJOvLcCZ89e1FZ9hfhu/3rYbsKmJ/Gcq8HPfX
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
5P8DmS9bNQ==
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.10714310737030595`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0.10714310737030595`, 0.15025154119162837`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707719473973*^9},
 CellLabel->
  "Out[1163]=",ExpressionUUID->"8697f28c-4d67-43ee-b86d-aa08aed431f3"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1l39M1GUcx0+Mflhb/5Rt1h8FmNImtVJbOvrQH6RY6JabK7H+gGBrhk50
tcSYuXQ1NovDAkszmAtDmnDiQR4D+iJnt5N5fAkCgRC0JH4cZ5nOZly7H+/n
9ryP7/3z4XXP833u8/5+fj08kbv9tfwEm82WPs9mC9nZYOgzIrbopywly56S
NaY4OYT2q4rPFA46Cwf/ULwmtJzyp+IBZ2jDpOKtoe3OacWRT0BxePtgn4SP
yXLIpcgXiuEfGP6B4R8Y/oHhHxj+geEfGP6Bw8uF3igbUWsq1v03yH+D/DfI
f4P8N8h/g/w3yH+D/DfIf8NSB5gt9IGhDwx9YOgDQx8Y+sDQB4Y+MPSBoQ8M
fTrbbHpcHHFxYl36eszq8TQpnibF06R4mhRPk+JpUjxNiqdJ8TQpnqZl3XAe
ctxYF5gt9IKhFwy9YOgFQy8YesHQC4ZeMPTqbLNxX+A647zkuLEuMFvoBUMv
GHrB0AuGXjD0gqEXDL06x/ry3H3QiKs7zkuOG+sCs4VeMPSCoRcMvWDoBUOv
PmcCYjV35u7zRlxf4brjvOS4sS4wW+gFQy8YesHQC4ZefY4GxGquQi/PAe6b
3Fe47jgvOW6sC8wWesHQC4ZeMPTq94SAWN0boJfnHM8F7pvcV7juOC85bqwL
zBZ6wdALhl79HhQQq3sR9PIc57nHc4H7JvcVrjvOS44b6wKzhV4w9Or3vIBY
3fugl+8pPNd57vFc4L7JfYXrjvOS48a6wGyh1+oeC3187+J7Cs9xnnM8B7hP
ch/hOuM85DixDjBbvpdDH98j57538b2E5zbPNe773Be5b3Bdcd4FKE74fb98
Hj53QpLC503FWewLb7P/EtXlkrXh8wcUvxv+Yziqs1qxvn9UrYOxHtF/Ra2D
sQ4/sK6/1+roulvZyLpPMfwHw3+wfq6PftetmM8Fs8V5/N7AeL+R9/S70gfG
eiQPrql1ZsQZceR4gpHHYDyPvODn8D0Yz3N+6PVbrc5FpVj5beUHryPO+D0w
4oc61PPPQfnmoPxyWPjppjr2KUbcwPrvG0o/6h7xBut55KU886rn0SfwPPdF
5IfeB6/FxZHrRJ+T/uj5M9F9dmXxPSzeD9Zxnl5/drUPz6G/7f5n85kLD9RL
sGyyeTynN+7/kiOLU/cE0qrk/M6hjcu7Rugcr/Tu+Lp5/7J29R5qk0vrlpc0
q3M+zkwv2rHuZxUH//z+Ux1J59Q5efc+9EXD37E+/MN9lT9mp0zIKysdR5Oz
ZuL6/rgU+17O8MtCT0+S1xnLtw3VK1I2FfXJrZsNa9zH6+WmN7d3f9WABK+v
utH+zHfSUTO/OeeyR4ofHtnmcbXLcOqtre4FPtnw1rpSX6VLGscXf//q+pPS
9o29pekxj7SdP7iwaO+MVJbcub7UPyFLW+ufffOuaWkZu33uo+wZuXggr7Gj
yS+rcxclHds2JRWHig8f2+6XjKS/Xnpkdkoyy0t+rbg8rezTC1YGV2X3yN2u
O5klbzhl9L3yp9IT+uVCsPtAV85JOV6WuGtn35DU1n34qaf0SynIKLjUWNKh
rCdhX+K/XRclq+Edn9HtkrzWgLdpKF96Pzh6NrXTK0+2GJ7JZWdlSyAx7ZPV
bqnaPDtv10yr9DxanvzZok6VV94raYfXvjglz+ftuZ19wq/q9oVTo/c8F4zN
06LKxK/efn06br58W3eooa39dGy+PP5g+e7qGikYH+7u7O+k/9vdsnHTkiNL
fvtJ1dNYRf7VphMuqU2oeX/F/Xvj6qv/v/X7Dt7wyP+26rOv
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
9P2VKwUG+j498QtxcW6/e3acRZOQp6lFpZhzLvzX1DhkZWN/Y0zuwm/eB/Y2
9Sxbe46cJ/WZa23fsb4N9Lm6/2GtVyl8dQ+9YqWoT5tUHA5cp6n35RdxznT8
lPeLezbVO0T8hz33nxw3Mo9nzBfMr4v7V/11E3NHv0+Lrf9i851qPT+1hnBF
OCVcDz4JD+a/L/DPs/71xN/W9Y/cU7dS8MjWnstC7wV3GJ/c7S4xXsDdqOT/
y9ppu8D68C7wvMo8eA/L2jCmVtR4Vc/uE2Nwf8ljBf93Iz++y+M8K86M+9xY
239Sccf/9hx7VQrbrfz/cLnP33PMe8edra/PL82THL/2ea13kJpSz8+tF7nO
d0wN/7F2/L74zPryvGfof0NvYf2oCzVZ4Ji8FpkX57hQDBuZO3F5L+bpE1u+
TXxn+ca+ba2auedf7yH9ge/4Q94P5pMV+tMk/Sx1D5q+wjrfvx+9d019v542
R+pMnnPcM1scS/TH8z9ScW/fEAPxu4bdd6HX8bvInaiyhsnxxz4nF75bf3lG
S8SG/9+9Q/hvIjbeGzD/IB7ifpfyt3yZ2GZat1nqZY7/A5F1mLs=
         "]], PolygonBox[CompressedData["
1:eJwtkEkOQVEQRV9hwlQXfd9F30RvE5ZgAWzKCqzACoQYGrACiSETTqk/OKnz
X+W/d6sKm91663POxSEAI3HuRT1AHa9ADvdTVzCFD99BaOFtuOIhiOE9uONt
SOMduOF5SImh/oABnoUnfoKq2Jv6tp4N8QU4CFO61L7Yv5opiY/hjB/1TO+G
t7OzGt4Q67282eLyv+6fWbNHxWa5wEQsg2bZQwZvivUikMBLXpYvzPGyWM95
WWdiPZ1ZZy+K7UZ3prtbiu1Sd6S7+gFf6SKl
         "]]}]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
Qe9kTNrBju7/1f9X/1/9/2H9/wBFPpZF
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077195708847`*^9},
 CellLabel->
  "Out[1164]=",ExpressionUUID->"cd0cb5e9-f961-44eb-a418-7fff0446eeba"],

Cell[BoxData["\<\"------------------------4/16-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.765707719572152*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"1fcc4726-92be-4777-becc-ba94fef7267f"],

Cell[BoxData["0.2443664848282467`"], "Output",
 CellChangeTimes->{3.765707719665914*^9},
 CellLabel->
  "Out[1169]=",ExpressionUUID->"85f6ab82-9caf-4b75-bc73-8eaa0b73fe4f"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw113dczX//x/FUyEjZ2UXISNkheaJooKSljPYu7T1Op07nnLYQXxXZmSWr
CFGRnRGZRSK7Idl+/X6/1+v657rdb5/eXp49btd1fS81xw3mLrIyMjI1cjIy
//vvqyf8/GyQPgO6LeqXkvOvLpD5v3/NxK+JiRZqYvYsDFrXrBI8nz0bvbzW
v//YfoWsA5f638ZRhew52L2qS8MoH/Zc+Dxo/Hp3EnseHm/5GLn1YyVZF8Pz
a554F7DnI+j3p95rgth6iCw4+M9hHnsBxi4IcJbKswH5PcIxd+5U/L8FwLlN
ao9n5ZJlFuKo6b6ZF7z5+0I4qitlWunx90W45jN0p2w//r4Iztrehllvy+n7
Ygy1rTcZfZEsWAzLm7e/WW/j7/oYJr483iGQv+vDrp9X1D1T/m4Ax+P+8l81
+bsBenyPsFmhyN+XwH+h3l+9z5fp+xJ8KpsvtKomyyyF3SyzhNYT/H0pnF9X
aJVs4++GuGJW8KQlhr8bYs4TFW07V/5uhKEXZIyHmfJ3Ixx2275Ofg5/N8bW
ovfPRqrzd2PM2lx81UiZv5vAcO+RmMg/l+i7CUxCkvplfyDLLMOliR9Utz3h
78vQ4LVw5frr/H05PvhcXlJ/lr8vR3njv+e9jvD3FTij+Wvmg1z+vgLZ/VYs
1czg76aoX9RypVc8fzeFMCOm1iWEv5thxF+lcdM8yTCDQ8J5E/d1/PNmMLQo
WSGzilxmhoS4trutS/n9SgyPkrujM5/fr8Q0K/sjN6bx+5WQ3ao0dJ8Gv1+J
fnPlhlwcye/NYeq5/F3/gfzeHAsCZHrt6MXvzeEoVzLDRpbfm+ObhZb5/B9l
9H4V3oW9izFsJmMVVCuD5YPfkgWrcP5uqPWFF+SyVZAb7jFI9SG/t8C8MD2F
rFv83gKjM7oNH17J7y0QqXPf/Vgpv7eAl73pFKOT/N4SxS4XapoO83tLRG2M
a5Pu4feWUE6XN5qQze8tcbZP36vlmfzeClVDAzOskvi9FcQ/636/iOP3VnCs
7J5jG87vrfA+5KzOVT9+bw3fGPlno935vTUulI2t9lrP762x9cPiPXlW/N4a
954VTyhbzu9tsNH6Rew1fX5vAyfjub1K5/F7Gywa1hqxdRq/t4GyvN9Vuwn8
fjV8DSZN7aHK71fjw+kkvbxB/H41Ygvqi9UU+X3nzw8U56fJ8Xtb5K2zyKtu
u0jvbXHeonCFfT1ZYItBWxvy79wkl9ni7ijdZaNLyDJ2iD10U2XNPn5vh4Rs
gzFxG/m9HZ6+uLB/SzS/t8OlLWXfcj34/RqUXL3nv8OS36+BYo8HQdkL+f0a
OFcsM/1Pk9+vwQbddzo5Q/j9WvQYp2OY35Xfr8WgTRc9L7VcoPdrYeDsu+7D
c3LZWrwY4HpkwnWyzDocvaK0L/Y0GevgMtN9bfNufr8Om4vdj8ak8/t1cD+5
QUszit+vh+cRCf668/v1UHYL7PLVkt+vR8kfIxvlxfx+PawHHmi10Ob39hi9
UcuwfARZ1R7/9rjkrunFf549omSPdRv94/z/294e59oCvAa8JQvsof5zlXRG
DTnPHnX5qzqE5eQye+g0dWjIFJHr7THPbpX/kTyyjAOSKpu7StLJqg7oopPd
ZVMMGQ7w8P7nesuH7zvgtYr6mNlr+b4DiscVK1Uv4/sO6L13VvtWXb7vAAW5
lylpk/m+A95VZQhPDOf7jvCb6xjSTZHvO0L+5Zy/iX9K6b4jDNvHHZjxmWzv
iICne7/1qSMLHKH8/rzXwGpyniPEJ/sKll4ilzkiV+FS/t4icr0j9pUutJ68
lyzjhAcWw38+30JWdcJDry1/isV83wl6R/VvlobzfSdM7Zd9p8mL7zvBpnW1
n+46vt/582t+DzpjxvedMKHXgMk2i/m+E1KnZ6uMmsX3naFkoLuk1wS+74zs
/Rmjhg/n+87oWG2tvFKJ7zvjx9q9ooOyfN8ZdRt7fFb/do7uO+PktZKSy+/I
Zc7QLNpvK3xOrndG3/7b9Z3ukmVcYNFs/Mm5kqzqAoc/vjcTS8hwgdf1Kruq
o2R7FxgoTB88YTdZ4ALTWQej8rP4vgv6dl3Re0ky33dBS8EGwy4Cvu+CMUlJ
px4H8X1XvG8zenLbg++7oneTeEH9Or7vigHLTPwULfi+KxwnVP6wNOL7rjBq
WeZVosf3XWH83s5q9gy+74q3L8Ur7kzg+664Pzf6nWAU33dDsM/3CyYD+b4b
nitedNfqxffdMMN9m3BSF77vhqnlBocWdJyl+24YYxUR6/WJnOeGwr/39hxr
IJd1fr9066zCE3K9G4aNuOQRXk2WcUed3n1rmatkVXe4DmzRzD1PhjsEqyqz
TE+S7d3h6VigN/gw33fHUJOz99t28X13dGzf1LVxG993h5mhUPQ+ne+7Q2v7
2m7yYr7vAbnBCbpTY/i+B/ZH3XvuH8z3PVBXsX1XpTff94CaTjYmO/N9D+zM
aA/aZ8f3PZCqNe6n9iq+74FHLr9SbhvzfQ9suZvyIXoR3/dE4t1pNXpz+b4n
1JVievadxvc9YaWqtfzrBL7vCf2FU+yb1Pi+J+6Mi+/+aQjf98Tvd8sUZPvx
fU9c7H1WY3xPvu+JadtktNfI8n0vrLKwepP3s4TueyFgyLsB7a1keKHHvEci
mw9key+M7q0hf6OBLPDC7agKu2XPyHleuFe9YfWzB+QyL3T4ll2PuEWu7/xe
pRIz/gpZxhsi27xFry7wfW+4XtZtOnSG73tj95ekBXGFfN8bT91qh7gc5Pve
+LV7uJHVbr7vjTdRrTstsvm+NwJLN7as38z3vdGloKpvWCrf90FEbfuDnES+
74Os012Ub8fyfR+kbbXZ1iuc7/ugXvh6sWUA3/fBlBnd3x3y4vs+mD1+87re
LnzfB9KT1yPD1/F9H5jqmam0WvN9X4R4T+wdspLv+6IltESrqwnf98XMhCK7
nfp83xeR3YZ66Ovxfd/O//3Qm/p1Nt/3ReKe46nHpvJ9X+zcbmATOInv+2Lj
W3mvRWP5/gbIuk7JGzaK729AwCmte39V+P4GXGvb+fRDP76/ARbCuVtf9eb7
G9Cl5nHdq258fwNWmwRkfJTh+xsQ0l8x4d/PYrq/AT6DyrcMayfL+OHy5zN5
+EJW9sOypgEC33dkVT9o9pRX2tdA1vbDw4mHNV4/J8MPkj7j8yfVks38sC0j
0T3yHtneD+q1lfr3b5L9/LB/27XB06+SBX4wWG9buv0SOcMPpz+NUuxZSs7z
w4E9Oa8Fp8mFftjZoTHiXyG5zA89unzJSDhMrvaD7oA3Q/ru571+iAq4vXFv
HrnZD+5Kmvf0snm/P274LD1Zt4X3+6N8y6i+4gze74+4cX6XZiTzfn90SczP
bRLxfn/8034XvVvA+/0RNEVmrmMk7/fHuXyXg+NDeL8/BhXq7Gn14/3+iJmg
+/eyF+/3x9BP9zO2ufJ+f2ipyE4NdOD9/mja4nzSfA3v94dBw7TmWda83x8n
++qWjDLn/f5o793Y0Hs57/fHAI3x+n+X8v4ATP6WdrRtEe8PQGPAvLaP83l/
ALbHPn/7Tof3B2BkyZm176fz/gA8ObRj3OcpvD8Atk4/+rdP4P0B2Ol7+dtf
dd4f0PmfF+nOXqq8v/N+U+CLocN4fwC0MhbGTx7E+wPw9MeytejL+wNgeSN9
nlVv3h+ArdP3f/TpzvsDcF35vp5YlvcH4NBmeZndf87Q/gCUuD3+c/47WSYQ
0Sb7uz5tIysHImNe1Ovvn8mqgWjqpeU2+D1ZOxAmwjW2sxrJCIRiU2CSZT3Z
LBDblS6UBz0l2wdi2DWXe5sekv0CkXdRICy6SxYE4uEZlbzqm+SMQCSMn9nx
6So5LxBRwxtX9SwnFwbivZuRcOwFclkgrGV3rlhQQq4OhEa2kcj6JLk+EJsM
XrT6FPD+QHRMn+IsPMT7gzDHf+X+zft4fxCuiI8n7s3j/UHoJz/g/vFs3h+E
1rK9q0uzeH8QSt7/ayrfyPuDkLV/nllVCu8PwgqTlnXXxLw/CBKVJY1XhLw/
CMNt206URfP+IFi/WZ5zOoz3ByG0cZlffiDvD8Ka++myWb68P6jz//84jYv1
4P1BwJyrBU7OvD8IF318Axev5/1BaLpXsWSkLe8PhunXz//aLHh/MKbduh5c
Ycr7g2E+/UtsujHvD0YODn2zMOD9wci8+LdoAHh/MEbuyku7PZf3ByNd1Owk
nMn7gxHt8k1RW5v3B0PF08790UTeH4xu3Z1Mw8by/mBYejXs7KfK+4MRaT9/
9v6hvD8YV4+vaps2kPcH48JsYVGxEu8Phnjf5lWze/L+YKyYff7UMXneH4J5
jsnFI/+dpv0hcDzwap74B1k1BB8OtYxqaiNrh2BQ0QSDhZ/JCEH3g7NSMpvI
ZiG4ebej5ukrsn0IinXD5UY8J/uFwEvjc7vlI7IgBOZuR9IS75IzQtCnUaPg
2A1yXgiWu7Tr3K4kF4bAKfOiYuNFclkIBmxYqdRWQq4OwSfdTaO+nyDXhyDg
dZrq16Pk5hCMeh/09c0BskwoRnXsjq7exftDIf/z8I7CbN4fitN1DnPFW3h/
KD69rJ9ukc77QzHIJcd3sJT3h+Kznc/taiHvD0WQ+u7ZgijeH4rZt5XSx4bw
/lDsPaN+tmwD7w9FmPfvHSs9eH8oao4Gqdc68v5Q9JMunmaxhveHYpxDn+OV
lrw/FLk34pImm/L+UCxT8zwoMeT9nXvybv54vJD3h6HfPxkP1Xm8PwzT9G80
2s3g/WEQ3Ay2T9Hk/WE4YfLh+vFxvD8Mcw9Xq9wcxfvDkL1jx4KnKrw/DD2u
nZ1V15f3h+GMaUbHo568PwwNJw9EV8rx/jCEPj5/5cDvU7Q/DGpyT+7FtJML
wyC66rjX+DO5LAxXz09Fr7fk6jAMf7LvaFkduT4MeTYnv3nWkpvDgFHfx/e8
S5YJh6XgotmOa2TlcKw1Vokff5msGo7x/Z/c33eWrB2OpoJjtkNOkBGOilsq
04SHyWbh6LErLLR+D9k+HJp7+5jMyCH7hWOfw+870ZvJgnD0W7p48vkUckY4
dsRdkrQm8P5wVL6Z3HdkNO8Px9bPvb4uCOb94Th95YijjQ/vD0eeeOhGNxfe
H45zW5VP+6zl/eGwMvrY08uS90fg2OWcG+uX8/6Izn+i2zhrmQHvj0Bbxb4U
7fm8PwI9l/bpqziT90dgWTB6vJrM+yNwbfSz0gJ13h+BM4GZwSHDeX8ElF/2
ip01gPdHwGnirXHNvXh/5/0Vw0r3yPH+CNjvfpG+8tdJ2h+Bo6qirz9ayWUR
WKDwen7ue3J1BG6+Vrk07xW5PgIyQzwf1DwmN0dgvtz4O153yTKR8KsR9/hb
RVaOROPs1GcpZWTVSPS7U7dLpZisHYnkcwUndhWQEYkFkzZ7axwgm0XiUV+v
8Ud3kO0jsWLknAXaWWS/SBTJ9lQqSiULIjF29N2WaSJyRiRaio0XnYgi50Vi
ysbnttODeH8kBlpFbznhxfsjcTEr1WSGE++PhIeksuaULe/v9NYBKTrmvD8S
Dx6IK0uNeH8UDi3Xrl20kPdHoca655AbOrw/Cil1jU8ttXl/FHpeNA1sGM/7
o7B2QpR20CjeH4V0rWlOCoN5fxQ+uxavzuvD+6MQf+qyvW433h8FdSOH8md/
TtD+KKiWNl+PayfnRWG7R6+Lkz6RCzvft0Y2PnlNLovC8jZtYfozcnUURr+b
+sjoAbk+ClX6W9R73iQ3R2Fmfmh+dTlZJhpyJl935J4jK0djctzIRf4nyKrR
uL3u9zWTw2TtaOQGCL0195ARDWRkrB2UTTaLhv2eL7e7bSLbR2NavFnz3ySy
XzTUL5h8+SskC6Kxy8Kxo1sk74/GmdX/pg4O5P2d3hBxRcuL90fDavCwJ2ZO
vD8ableGZ0TY8f5oiEpP9Di6ivdHozGpn2uTCe+PRpa+3+XJ+rw/BgrLleZG
6PL+GLwp0X9TPYP3x6CrnuCFtibvj8HNTAud7WN5fwyGWAm6K47k/THoa96x
VjqI98cga+xHEyUl3h+DcYuf1O3ozvtjOv/3OmOcjgzvj4Gq5dxJT78X0f4Y
LDTy6RC3kAtjYGc2dZPee3JZDMIWK3b994pcHYMbTX3Nrz0l18fg4erG6NwH
5OYY+EXfToq8RZaJxcO0snCnK2TlWCw67GpseZGsGovu9lq/zIrJ2rFYOd1G
anWcjFjYjP7R7HKIbBaLPCVlzdg9ZPtYjBiRMnt3DtkvFmafbHrc2UIWxOLW
VY/tXdPJGbFQz614aSDh/bH4+SalJj2O98diokMfr4YI3h+Lqf9dzUIQ7+/8
+60MWnbAh/fHQvHU4NjBbrw/Fr5ru6lttOf9AhSPbh4zwJasIEDu2Xdheav4
9yHAGLUQ5VnLySoCbLiR/uTBEv79CLBjz/ErUSBrCJBxs65ccy7/vgQI0yws
ezudrCPAzgrzw4c0+fcngOal//xDxpMNBch26tLFRI1/nwLo7juzRGMY2UaA
2P17tPoM5N+vAN6vvfN/9yG7C1AyU5jbpsC/bwHS01V/tcqSwwQ4mLn66M/f
x+n3L8Dql0PyenaQJQJ0X6B1cXQLOUOA0+Ervi36QN4mgOHIIVO9Gsl5Anh9
H22XXUfOF6BgXcf6+4/JhQIUmoyc1P8BuVgAGKjl294mlwkwuV/G5YNV5CoB
Tizo6ipTTq4WwCJ0Ysy68+RaAVT3l34rP0OuF+B3e/o57SJykwBm2zcV7z1C
bhbA2q/m8agD5O8CHAkS9dq9iywTB90+P+ZMyiErxKG39rGV57LIynEIN1+x
wHwjWSUOl/SPf/mSTFaNw41HdaabE8kacZB1GrR8QRxZOw591a8+aI4k68TB
MiLnQX4IGXH48jdirps/2TAOQyLiv07yJpvFofj0gJZvrmSbONTMuDWyyoFs
H4c351K8d64hu8ch6VbwtShrsl8cBD8+q9ubk8Pi8KL/Xl+j5dw/DrXLxVk6
htw/DqOm3UvRXMz945An6rZIQ4/7x2G04pf9GnO4fxwKdfKOTJnB/eOw8lSY
/lwt7h+HsW/U7E0mcv9OG2S0OIzl/nEIOSL3IVqV+8dhqLT7gp3DuH8cfDsC
6isHcf84+F93v9zSl/vHYUqMde1oRe4fhxmDfgxcrcD941DfZL5hsxz3j8Mp
61O1D/4WUn8h3gafWzL0J1lBiORc42PO7WRlIfp83Sh/spmsIsTZFz0WKHwk
qwpR6Ra4yuEtWUOI8s2PZl98RdYWomtB4iu1F2QdIQJjBhtLH5MhxLlQV5f2
B2RDIXRebJ7kWk02E8LzSffNT2+QbYQIF7llWV4l2wth9T534oPLZHchTP7U
GFpfIPsJ4ZoU8e5FCTlMCMNhM7t6nSILhJhZ83Hzr0KyRIh808qNGUfIGZ3f
nUe0T8gnbxNi+PfU4qt7yHlC2Jc11XjsJOcLIZKZvVQ5m1woxBv94m7nssjF
QjxTednHM5NcJsT6ktW2I9LIVUIUVPxueCAlVwsx523N/gwRuVaIjETVHWZx
5HohKjyXVA6IJjcJsc71xeDnYeRmIZr+HNp4MIj8vbN3n/+mRPhx/3jIhl54
v8Kb+8fj6jmby+PduX88jE7cOC7vzP3jcUUz71Tjeu4fD89dwuvX7bh/PJIf
Lfx0wpr7x2N7zq2hu1Zx/3gEBMw0yzTl/vE4bHAgSWzC/eNhNs73qmAp949H
mVyLXMxi7h+PQ97H58cu4P7xeGhuHJAwj/vHY+F9352ps7l/PCpl313ePp37
x2PqxW1PDmtx/3jsFAW8LpvE/eMhXB7z4vF47h8PNY+HV76N4f7xcPTanz1Y
lfvHY0j/iXa6w7l/PJR0j8i5qHD/eJysEW3aOID7x+NR3fAel5W5fzw0fRoc
v/Xm/vH4e9hq55Qe3D8e8u1/Sj27cv94LK/3OHuoC/ePR59LrpOf/yqg/vH4
UtWe6/2V3ByP7D+3r8h9In+PxzaNZXt3N5JlEhCtene60QuyQgJK9K4HdDwk
Kyeg/uWhdUfvkFUScOj3h6+eVWTVBGQf7zld+xJZIwHzfiUO+lNC1k5Ajv2r
nLtFZJ0EbDm9o/zoYTISIPtJV7JxL9kwAeZN85qicslmCVBzG/xyQxbZJgEV
bUv8PNPJ9glIe6m7yVtCdk9AjaXL0pA4sl8CDNaMTRJHkMMSsL/bE5u8QLIg
ASe2Pios8yZLElBd7J7e5ELOSID07K2WwevJ2xJQVTevZoUNOS8BPU88m5W6
kpyfgPcut/rfNyYXdv595470UNUnFydge8fd6cHzyWUJeOH43O/uLHJVAsyu
jRsxU5tcnYB7KaKZeRPItQmwKL10ut8Ycn0C/p7YlJsynPsn4HHlnjeKg7h/
AgrfS9OylLh/Ak5H3No4rgf3F6Hk0+uP52W5vwjD98zMWfP7GPUXQVrYP0f2
G1lFBKXiS00FX8iqIpyu8ItxfkfWEGG3JlarNpC1RciMnR/c8IysI4K7t/Pt
ow/JEMG7bId9bDXZUNT5z6cV422uk81EGDMve5ROBdlGhM3ejxaPukC2F+Hn
xGEZisVkdxFqX3/7J1tE9hNhqPm7tH+HyWEi2KSs15HbTxaIsHrSqQ7FPLJE
hBSXGVWjtpMzRFg3Y9A+nc3kbSIoRgmlNmnkPBFGzc7wi5WQ80Vo3GtgeVRI
Luz8+0dum/YqilwswpmhvnIjQ8llInRcyb5s70+uEiGw7o3nIS9ytQhpw7t2
/HQh14rw+FaOg7k9uV4ElWEG+wptyU0iXF2SWDrQktzc+ftofbwrzpT8XYRn
rodNvxqRZRLx8ZF1mY8+WSERbcenfP6kx/0TYfTK/37QHO6fCPEYK0/ZGdw/
EUJjuaNZU7h/Ipo3bd4ydQL3T4RVm8rI+2O4f+fPO25C5Ejun4itU399mzCE
+yeizFp3Xl1/7p+IyIrZ3bP7cP9E9DxebrG2B/dPhH7r4RHj5Ll/IvYbF9m1
/z1K/RORUZqmcOMHOSwROs++jDjwlSxIBEZHbpF+IUsS4Tr/lnvAe3JGIs46
R2x0aCRvS8TMg316WNeT8xIxZWmfa+ZPyfmJcOtov27xkFyYiAsL5imsvUsu
TkRE+bIIr5vkss7fd2bmUMFVclUiyiN8X22/TK5ORIy57o1z58m1iYg1Nr/9
qphcnwjbOV0alU6SmxLh0rRZYXEBuTkR0vUW06IOkb93ftcW2p3bR5YRI61s
TbTMLrKCGF8zR240ySEri5Ge8Tc9ZytZRYwOU+3Atkyyqhiz1ryebpZG1hCj
MMLwRpGUrC1G4xfxtGEisk7nn1d+w1EqIEOMBLl5ln8iyYZi5Hf9JRsaSjYT
ozlfy+VbANlGjBVbfgVF+pLtxfgvQjCpmyfZXQzrFXVxWS7cX4w7Eh3/yQ7c
Xwx/+yOtV9dwfzG+yNv9c7fh/mLsrnXOULLg/mIsOvh+xzlT7i+GzVtFdR8T
7i9G2bNmFfWl3F+MEa9Oh9Qv4v5iKG1KmLVbj/uLEdRFsNJjLvcX49Lb6rKZ
s7i/GH2f5EV3n8b9xRgTMizuhSb3FyMz07fi7ATuL8YB7+vIGcv9O/fVOHwR
qnF/MTav9bzmO4L7i7FMMLxq/RDuL0GPWydeWw7k/hJUK29QWdmX+0sQEJ2x
ZqUi95fgd/XaQ1Y9uL8EOpGqv+y7cn8Jblwea+jXhftL0P/dhaSEP0eovwSj
li8szf1BRufPp3Z7eK6dbChBwyHvuy9ayGYSaI59eKDbZ7KNBC9HHDKf/p5s
L8GbIIsbzm/I7hJ4vDHolf2K7CeB8/ivvR6+IIdJENjlyZWBT8kCCQp9Qmfa
PiJLJCg7tnLlnvvkDAmUPNv6t9whb5NgadnHkMU3yXkS3HS+H7i9ipwvwbmT
i+S/VZALJbh786ma1SVysQSlOwyunD1PLpNgc1fND2POkqskuPZYP2njaXK1
BPLyS3LlTpBrJdia/mVERAG5XoLBpd26tR8mN0lg0cfaNCif3CxBiH1RW8de
8ncJ6luaP8buIstIcT+4ZUbvHWQFKVrU/qvM2U5WluLKufvbpm4lq0jRum9T
/vVNZFUpoj/e/eyWQdaQosYszaVHKllbimaLO90KpNxfit5Ldt+0SeT+nX/e
kmHHu8VzfynMV1seK47l/lLIuwVc8I3i/tLO//7LfqoRzv2l+Pjw3783wdxf
ioi6h2MPBnB/Kc7prVu6YQP3l+Llsyfr5nhzfynaT21z7e7B/aWIqXtv89iF
+0uxL3WSdoEj95fi9uDSN5L13F+K0X/kQ13XcH8pDJuCny5dzf2l6CgS9dG0
4v5StLkX9Ry0ivtLUW0cd13WjPtLMaU6xrBtGfeXovygXuxbI+4vRf1lO4+6
JdxfiuOLwro8Xcz9peiaOn/RE3B/KRQWrxn3fD73l2LN4pT8hrncPwnyh1LK
P83m/kn4dWdMwK8Z3D8JG41HFfSexv2T4PR+VbCaFvdPQntJ7sU5k7l/Ekx+
10ksJ3D/JMhO6nozaBz3T8KSr3/jt47h/kmw1Lly+Lwq909Ct+52em9HcP8k
tOZUzBowjPsnYb193wx9Fe6fhLrnVgZhA7l/Et5XHF9Z0I/7d95/bVD4Ton7
d/556nprxity/yT4S26auffk/knoPnqi9Eh37p8E8/5bZb7Kc/8k+Ipti/Rk
uX8S1I5d/i/l32Hqn4Tjp9WLnv8mFyah6Pqzb1N/kouTUKqwwknaQS5LwvmY
V60NX8lVnX++eq9dC1vJ1UkIrlngsfsLuTYJHib/lnT7RK5PQvHgOzN93pOb
khCSO2/qo7fk5iT86Fk7Q7+R/D0JPqv0dE++IsskY5qG0uLx9WSFZExubdHP
fU5WTob8jc3zBz0lqyRDLeSIRmYtWTUZd1Z/7dL3IVkjGc2hUyoz75O1kzHa
bYzv4LtknWT0MNn9fcdtMpJhcUtgP+Em2TAZYwZl7zp9jWyWjOCK+2eWXCXb
JOPim/47H1eQ7ZMxrM141YbLZPdknLzoW929jOyXjIaIyH57zpPDkmG5J3Dg
wnNkQTKcZOxrXhaTJcko/890heg0OSMZdwusoyadJG9LhveJTXYPjpPzOvfO
H9sUW8D9k9GmMGPklKPcPxl48+nHi0PcPxnJZxJDM/O5fzI8XHU2Ge7n/sk4
93SRUZe93D8Z+zs+bCndxf2TMV4aGxyxk/sno9LA9PXcXO6fDINLRS/+bOf+
yRjp0t2hfBv3T8Zi90K35Czun4KdVwZ9sdzM/VNwQudg2+hM7p+C8ZOe+bem
c/8UuJ6e4FqRyv1ToJDV99a2ZO6fgnjVIXs2SLl/55+nd+O1oZj7p2CJU3Ga
uoj7pyBSGJIrG8/9UxDWY5dig4D7p+BbTe3Tyhjun4IHmhXyh6O4fwo2nu4j
yozg/p0/7+2xOiqM+6cgIScpxj2E+6dg6SPNFqsg7p+CKZ/6H1sawP1T8LBB
tmiuH/dPgdrnyh9avtw/BdecNIXjvbl/CrRL+hiqeXL/FDSF6BuOcOf+KXCc
eix2mCv3T8FrgfaHYc7cPwW/vp8Uj3Tk/ilwUp1oPsae+6fgmXv80onruH8K
GseVOE9fw/1TsFVatV/PlvunICrzRM9lNtw/BWLFuFQ7K+6fgnaJ7mQfC+6f
isnLvzUIzLl/Kmotyo9nmXH/VFTrn888toL7p2KSs2xC1TLunwrHzaeEr425
fypmGv1NljXi/qnoF6eQO3op90+F0nn5E/oG3D8VOj/G33BfzP1TcWLv4Vdp
C7l/599v+61vpxdw/1S8GFwt/3I+90+FUfGPHoq63D8VSz23yM2by/1T8Z9H
62dPHe6fCovZztdyZnH/VLhnLsqonsH9U6Hu9w7dpnP/VOR/La6dP5X7p6LY
a6BlqBb3T4X+QrcTRZrcv/Pv+3Noy5dJ3D8VFZN39dKayP1T8TrcV8ZPg/un
IlP062bROO6fikdfKnw71Ll/Ko4uN2mYP4b7p+KvWn+NRDXun4qYh3vnVo/i
/qm4dTJFZfhI7p+KsDrbix7DuX8qRprsmVwylPunIevMn7U9h3D/NCge7Lpy
7WDunwYjB1u5ooHcPw0qj3cEKAzg/mnYUBKeY9+P+6fhmsWWmLPK3D8Nd/N2
DhqkxP3T4K9l7BioyP3TsF/DeP29Xtw/DR8W2/Sa3pP7p2HvJW3nLQrcPw1z
XTa5/ejG/dMw1Hdx//VduX8aemV2d7kix/3TkPbtoK2WLPdPw/2J31v+k+H+
aUhSK9fo9u8Q9U9DxcS634F/yBlp6Pg0xrvhF3lbGi46eQdZ/CTnpcGgOqv/
1e/k/DR8Kk1YOq+DXJiGg61D+xxvJxenQTNooYvGV3JZ58+HNhjvaiVXpSHC
8UvpsBZydRoay6xKtn4h16ahdlEfvYGfyfVpmHJK0WjzR3JTGmb/Nq0d8IHc
nAbDPvffZb0jf0/DkM9bI4c2kWXSId23O3nnG7JCOtoW/Bw8rpGsnI7mivyR
xxrIKunQmH4ud/Yrsmo6LkQs3HS5nqyRjmlhK/6sqCNrp2P5l47Hz56TddJR
LbIa7/2MjHS4XxA1/H5yaMH/AE/zgWo=
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0, 0.1848311131560737}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707719728406*^9},
 CellLabel->
  "Out[1170]=",ExpressionUUID->"fd0a8c4b-ab22-42a2-8a9a-583c2a7d90df"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1mk1uJMcRhQn5JJZ1DaF3lrzVEQxo5b+r2DxCb2dH2NzMZlAgCAwEA3JT
pkFxNGST6mlxSLXqBJY0Xfwi8b7sIggEXmVUZr6MyIjI7PrtH//2xZcfHR0d
ffqbo6MP0n/Hn/zh1/+TReKh8PXpX379/0rtq8L75uvLwt9ODwr//+cPfzeF
/7F//67w7z7A4+8L/2v/+rvCn+0HfCh8te//sfCf9hP8sfD0Nwo3noflUBi+
2b4qDF8wfMHwBcMXDF8wfMHwBcMXDN+02yjc7HiYZ5PJdxDfQXwH8R3EdxDf
QXwH8R3EdxDfQXwH8e399LAdG09L+ILhC4YvGL5g+ILhC4YvGL5g+ILhm/tu
FG778LCfDh2vbG8y7buSfVey70r2Xcm+K9l3JfuuZN+V7LuSffs4c3gfDp3d
zAtsCV8wfMHwBcMXDF8wfMHwBcM34+Yo3OLo4TgzdH5pu5kX2BK+YPiC4QuG
Lxi+YPiC4Zt5YVzM5YnDcXTo9p390nYzL7AlfMHwBcMXDF8wfMHwzbw3Luby
IHwdNx1XvO/sl7abeYEt4QuGLxi+YPiC4Zt5fVzM5Xn4Oi84bjqueN/ZL203
8wJbwhcMXzB8wfDNumVczNUx8HXec15w3HRc8b6zX9pu5gW2hC8YvmD4Zl02
LubqNPg6rzvvOS84bjqueN/ZL2038wJbwhcM36w7x8VcHQpf1y3O6857zguO
m44r3nf2S9vNvMCW8M26elzM1dnwdV3musV53XnPecFx03HF+85+abuZF9gS
vnPnCPgerjtdl7lucV533nNecNx0XPG+s1/abuY1dnKa77LkxOdl4Wm654Wn
977u9JHog9EH7187/qbTR6IPRh/8+X7gq9l5WfI+mPfBf95P5LuOl+cJtqQ/
MP1l+7rwZP/7woxHP4wHtqT/fL4uTP+pv+n6px/WEWxJ/2D6T71N4cmft4X/
vuf3vhuPftMu604mn7X4rGs8MOOBP96v81M3nu0AtmQ8MOOB6R888dt1/dsO
uW5N5vo1fa+r9cCWrEeu01VnF6+b3wNbwt/9ed2tB7ZE3+sIRg9smfHA9z5+
vlSc8r3JUnGJc6jHGbv+Mw4dHWUcGjte2DHH3XXjph+3fsD04/Vy3Pe6+Xny
GLv5+Tl4Ws8Xz3rHz/2dFp70XhWexFnhw3IoPPX/U6fH88PyZeVx8vXh/Hai
PND0na9yXqsu39GecX7Q/cR5ve/8l3qXXT6kPeN640W/SPqlP3DOb6X6pOVL
2tnf2f9Jl88YJ9et3btk3L3u8il61EfOr7RTLznf0p77rN0fOR/6XiTj7k2X
f33Odj72udT5mfbML+1+x/nS9xa0M77ztc/Bzt8+Nzqf+5zlvEN75okb+WXL
t753oD3Xp+V7n2Od/33ucz3gc5LzkO9TnK99T0B7nsNbfZD3D9vunGI/dH73
udx1QZ73t919gPO77ebzMPp5rt52z7Gvz+O2u/O/193nUfR57rqC59jL52HX
Cz7vua7weZI8N813Xfki75l2z+PdV3ueY3eL3+/H/7HayXfkQfIb2HXBX/cN
/+7yHXGJdvoFZ78XHUZvP/2f/7fwOOjRDp74vynMPDMun9Z76IOn7m8LT/p3
XTvv0Q6extl07bxHO3jyx23hyZ4PnT79oG+MHhjJPOjXknEmP3nsJOvHulP/
4A9p7xeqj5aqj5aqs1qdc3iccZG41XN+fri/8XldXsufv5mpM5aLffMn/yl9
3ocX7WDnYeIjeHK3/5Y++TDrmfPKO/TPuLwPdl7N30nOn+PDt+Ltuu5EddoL
8ervHVgn5oM+4+W8W97M+6Gvn+P3226d6RceaadB83lV+jz3PQZ2YH7oMz6Y
+Jl40+VRMPEUffwm68plZ5esQwfd47yS3fp7krw3f1v6zB/M/BJvuzyd5+h3
pY+/YEew7cj88Nuc7+ua59w9TNaB69Jn/mDmB57y4Q/CT13eBv9zr/e+9HPf
3Gvf9HU4fg/Gb5n33D1P/n51X/rwAcMn299Xf2DnfdcNYPI5/aW9NoXn6nr2
DRg/h8fcvRL9wQ/9rLvuiy/tab9N4cP7blt4ru73uQS/Zl6H5fvSz7pzU/P1
PuG56/Y852w7v6XfuXHRS/lU/WUduS3/zvlcqb680u8rb+u9OT/L+a1Ln3Hn
5oUeEn+lP/wVjL+in/ltV9jnEJ+D0o/aPmCcuXnw3HU2mH6Qk/+dVR2Zeeqk
6k7asy5o9y6Z585KOk9k3XlW8ZZ9TF2MdFym/qOd+RDXcp4X9RxePEc6Lk56
t9We93ntnjrHu9N4x6q3L2sdeI7M+8HLqntpxw7pR6eqx1vdxLrSnvHju3qO
zPvz667OznvoK8Vz+n0o/awH1vKH266OyvPTbT3P929L5j69qbo+7fZV2SnP
ay0f5vccF9We323c13Nk/i58X+On3k5xZ1ft+A12Tz9s9w/kC/wgz2Hf1/v5
XvMj7Mr72BU/yO8R3uic1X5X8T2Kz2X4Q+avh2pnvTNuXRbOfdDujcgf2JV2
xkk/3FY7/pH3KI+a17Xy8pvSy7z1VO/lOfKm7Mz8sDPrl/G4+UF+Z7CrftNP
dsoru5J57jqt+o24Q31DO/WrJfuC/M8+pT9L/JR8y/t5fr6o8S2xc97fXNR5
Kev1F2UX+ud99CwzXr0rfd5n3mDsxnrwPnqW6JPX837kdeVpMHZn/dKP151E
P+uGteqOO+Xt2+qfdQWzT9MfWv1uiT79+1zIuoLZd3nO26hu29T6Zbx419Wh
7LOs41r/PM9z4KPWsdWbriPRz/PEQ82P53lOa/eRvE+/rvPQz/V71P3Ric79
3PNc6B7wZeUx9nHmsXPVK2fKY+cVZ2lnPxBXyB/MF3sRVzPPPMi+T7q3fuzy
R34/dqf4e684eKc8utM9dIuTWU8uhU+KJ+uW9WP7zoI6hX3MOtFvrvOy7EF8
wh75+1b7jgJ99mnWs5vuHIs9WWfs6XMiGPuy7hnv+u9qyHvMA94+V+X3E9e1
7rlO/Xc1+XvTRfHGnj4H5e8UO8Xj/jsa6qm0b/udzd/B5O9Fb1Qn9d+t4M/M
I++ld1r3nX432ZV//wKWXDWN
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3AfUJUXRxvGZe4kSFgQk5xyXqOQcDChBsoDkqHxkBAWWqGSQpCKSBRUQ
QbIoYMKIEUUwIIggKIoSRJSvftvPnJdztk/X1K3pqel37tS/qvvuonv937aH
jLquW3y6rhtXv0XfdStX+2PJ81ebqdrM1R4r3buqrVZtm2pPlW6aat+uk5+u
4z+V/Kfqa5hurmpz1mDTV/+2anN3TZ6h2jzpZ6w2b/q3VFsmn9HNF51rL53z
fbZgtVmqzVrtvXWtt1dbo9oidTxbtdmrLRB/2W1Xn/25+jmq7VDyM/yq9p3y
+bk6frbkv/TNxyVdZ9yutVS1Zd/ky3Lpzcc61ZavtkK1D9c4H6q2qM/HzY/J
+Xz++LJCer7vXNf6S/WLVdu15OerX6La92qMF+v4ryXvXf0/ql+92i4lP+dv
U23FjLFQtX/0zcc16MZtjt5ebc3MI9/XSs/3tdPza934ZLx/+VtXvwEfa5yX
6vhvJb8j826sh8q3w6r9tT7bo9oLpVu12rdKd28dP+1+Sj6g+mOq7Vm6v1e/
WrXHS794tRlK94Pqj6n2SskfHbVrbF5tkXHze4tq78w98P1d6fn+7vTm/j3p
3cd+NdY/q1+/2o88xNX+Vd3Pq5+l2n9KfqNsNqx+q2qHlfyaZ6faQSW/XP0m
1T5U8ivVb1rtkJJfrX6zageW/FL1G1ebftR83MHfY9x83bHaTvGbvzun5+8u
6fk786hdf3fPVp27dfUfrPbL0n+82qRqH6lrvVG67asdXfL/PL/VHq7PTqw2
qnZE6V8v3bbVHqnjudxz6c4aNT/29zcfNz/8Pf7Tt+fCvcw5av7uV+3I0v+3
+ve7x/jN35+VzSnV3lLt0WrzuW7Zzjtq/h7i2anx96j+/6odX5+Nq+1V8pTq
p622T8knVD9Ntb1L/mj1fbXdSj7Z+6HaviWfWv30ffPnhzX+6yW/WPJPPC/V
/l3y5HHz7yOe+dJ9tdp7qy09atc/odqvSz632tzmssaYsdqHS//7Ol7GvdTx
qjXOoaU7sdrZdTxLtSNLfqw+/2S1BaqdUbqZqh1e+jOrn7naESVfVP0c1U4u
+dzqZ612VMlP1TmrVputjlcZNR8/Xu2MasdWO8446T9a7fyym1Tt6JI/Wf3s
1Y4v+c++C9Xe6m81aj6eW22N8nlK9edVe6L0n6m2XLX7q61Ytr8v/cXVz1nt
lJKfLP1nq02u9un44fqf8n6rdrrvU/Vz983PT1X7ROw+E9uzPOujds3PVXu6
5CurrW7MOm+eaueU/q91vEm1eet4zfLz/NJdUe3Z0l1bba1ql9Vn81X7ZOk3
r+OLqr+m2oxlP0O19Uu3aX2+drVLSv83369q89fx9XV8aXz8Qtfuh49fTH9Z
tefL9vPVNqx2Q2zZ/a6OL6m25KjN/UHVDnY/Ne4C1S73vRw1f2+udkvJX672
pZKvqs8XqnZVyVdXv3C1q0t+sT7fptoidby1eyzdbdXWqfu4rvqvVruj2ue7
5vud6fl1V3r38d18Rnd3dO7pOznfZ5+vayxW7aaSX/Kd9Q6t4x34WbqvV7uu
jhetdqMxql+i2leMVf2S1W4t+dWy363aUnW866j5+M1q3652e6730Jt8+V76
e6q9VvZf852v9uNc8xvV9hw1+UfV/lXyXdXeX+2musbS1b5W+lfq+J5qO1f7
X7X9Pbe+56N2/Z9V+1LJX/Rslfzl+mzZag+U/J/S7eV7W8fr9M3XX1T7Zfw2
T7/KPPL91+n5/mj671f7Sp27fLUflrxB3+7ht/5mJa/QN/8fyXjG+l3XbB6u
9t98x/ap9kK191RbsM65vW/fu5+WzUbVr9S3e1klrIQ/Hi/5rjcxEibCHlP5
qG/sgWmwAZ7AKQvkeGAj/IGdMBSWektsscj0+RyvDPzkHKyzYMbCMEvGhk+L
VFu4a3GajJHuDRctmvPFefEeSxkHX+EjbIRPcBR2WizXZ4s/MBWGWjy+LJux
BmZaNve2fI6x0uT4MbDR8vF9xRzjqJXiM77CSxgFH+EeXLRzuGiVrjESjsIk
mApDYQ9ctEb85C/eeHv8WzPHAxutFT/WyTE/1s3xwFJTzwkfrdc1HtogvuEj
XLRh1xgJ/2zUNZ7CWPgEF+E6LLF3Yh32EPfEaeyBizaLn7ho8/jp2hhji26C
jRxjqa1yXWyFVbDFmn3joi27CX5yDj7CQ+/rJljKZzgKN+EizIOLtukmOAYf
YCRchBkwkviMT8RqbIRb8BXm2rVrfIWptu0m2AijYKcdci/f6huPfSD343OM
gt0wE2bAS7jJfY7CIe4RI+EljIGPcNEeXWMkbLNn1zgHR+ETfNWFT/iCKzAS
hsJGmARH7RcfcNT+8QkPHRQ/8RGeEVOwDT76UNe4CB/xb1L4hD/4DiPhDzyF
pfAJdsJIh3WNnaYLb2Ck6cMnGGmG8AammjZ8gqkxN5a4s2/52pNd46Vjcl9z
J/7x89ywx6ldYyWMhEnwEj76WNdYCVdhEryErdzDAmES/mMljDSla7yEkU7q
Gi9hKox0UZjkgq6x1qzhE/yCo7ACbsJMmAQrYRAsMjCTY7yErU7rWjzHS/gE
O2Gls7vGTZgJk+Al3MTX5cIw/MRIc4VD1g0fXdg1BsEe1+aauGLgJj2ewFPY
CbvgKOx0cdd4iD1/cBEO+mzXmAg/YQy8sWBiNIbCTpflPo2Nb7ATzuLrWmES
84OdcNBVXWMi/IRDMBOGuijnY4zPx18sMXDQDfkMi2GwK7sJfmKHmcj8wUnu
3/OApzASFhL3cBIOOSh/G38rrHR3xhLH8RIuwU546ZausdMiYRLchJkwCV7C
TdfGbwxyezfBTHd0E8x0Z3y9O8c4DfPcEzuxGxPgpcXDHlgJJ93XtTwBq/AN
L2Gqe7uWQ+AlPIOXlgp7YCWc9GB8Mva3usZXmOr++PTdXNuzNFe+U/x7KJ9h
JiyCQ1wfV+ANXIOfMAlmwiruBUNhJ/Y7h7f4hotw00+6xlD4CXvgJtzqWcFZ
2Am3YDDc9IOS31f9uv0EQ+GnX8Q//PRIN8FPjgd+coz7sNNvusZL+OnxrjEV
dnos9/9IxuUvfsJXmIn8cDfBlK5jvJv7du+vj9q9uS98gp0wyTOl2z5c8s7q
V8077dHqt478bvG/b7Wnp6rfNvI91d/dN976c/Xvj+y8pzP+Il2TF632z9Lv
3jdWOHDUxnHdQ723R03/bOl27Bv3HOz9P2qs83zpduqb/LVci8136/O/9Y1X
7su5GOWF6j8Q+es5F6/8vfrdIs8/blyBe14u3Qf7djxNjXlw3+Lx/fEZQ/y7
+r36xhmHj9r4+OP7Jb8a+bXq94n9f6vft2/M8UDGxwcn4PO+xeAjSz5i1Gy+
Ed+M/7++2bA/uj4/atRY4SOj5gPm+LEYF/54MNfl8zdzXRxwXH1+7KgxxLRi
YPR9yQf0bczpzH/fbI4v+WOjxhkKlNtnbtf0/k4MmLHkQ/tm8+mSPzVq+pOr
P2nUTY33s1Z/eN+4ZErmEyv8ouTZwg3f6Zs/uGF29xj5u33zB0O8tfTHRH6o
b9fFHz+o/ri+xe853GP0C/OhbzH71PiAG34lFoQhTq/+tFFjiLeN2jh8/kR8
wA2/KXnBMMT3+uYDblhIXI78/b5d17UWKf0p8efMks8YNZ542PX6xgG/Ld1S
4YDzzHPf5EX50zf7c0o+e9T444Lqzx81Vrgw18UBf/CuCBN8u29/R/O8bOk+
0Tf7JUbtusb5Yd/mBDesUPqzIq8ohveNIX7cNx9ww0rieOQ/lrzyqPm/WvUX
9I0PLi75olGTf9S3ezfOpfEBN/yp5DXCED/l76g98/Pn3s3/ZfEHo8iD1JbV
Wtcr/aV9e9f/pG9+4pt1Sn9J5J/2zU82l8c33HBVnlWx/y8lbxCeuKL6z40m
eEKvBvL30r0vMfW56jcatXM3rf4zfeOM63JdcX2zkj8b+Wd98xM3XFP6q0fN
/vqcK66/q+QrIn+h5BtGjVG2rP7KPrySMfnwnmqT+/aO/rl761uMv7lsbhq1
GP+Lvp0rvm5bumv7xP5cS8z+Z8nbjZq8ffXXx/7lkncZtXh8W/W3jlos34lv
fZNvL/mavtn8sm/ji8cfKP2XIt9Z8h2jFsvvzvhi6r9L3mPU5Ef6NqYYuXvp
buyb/d6jFpvoxaZ9Ry2m/qpvNmLwAaW7JfK9uS6bd47anJjzZ0pee9Sen/sy
prj3jZK/Pmqx8zd9i2fqAw9kTDWFO6ptGPmbpX9w1OoLW1XbuG/yFvlbjBIz
Mf/siZUrR//r/M3UJDbrW/wX963biKfWd/AAPbYRO8VT6zib5LmX+8vH18jz
v2Xf4i6fp64N9C1OiSPyzPXy/K6VZ1hbO8/1tZGvyzXXzXXNy3p9Ywx+8U98
/23ueaPMhTlR5zR36/eNPfAGJsFUK2V+/pDrbJpr/b5vDGQOvppzjfG7vq0b
udfN+zbObzOe48czr1tkPvn2zsgrR34yc/KuzOfqmR/yHzL/9W9qLYjeHE/O
mP5uq8Tmj/m7bJm5vTVzsnzO2zJjPhGfJ+Vv9N78nTbLPa6T+doqz8mTkZ/o
GtNgGzUoPPT+yNhpm8jyx63zLKldsX9ryW+M2hqPz+6JvefkmYyjloVpcM7i
YaHtMqbriteLdi1mkxfrGuvgHzWlZ2K/WMbcMTLu2iFjPhv7xcNgO+S6WEsN
aJWw1s45F2upB60avlIPWi3ctUvG4fMHcu4Lkdljv13jG2bCWqvH592GMSMb
86+xIftefDDfhX9GVvPBY+pBG3WN2dSANu4ay+2Zc425V2xw1x651kvRs8dm
e8cfvu0T/cuR1ZHw3t6RMdy+kV+JrL6E5dR61Hmw3H7xk88YT73otchsMNkB
kV0LO6kLvR5ZbQfvHRh/rLuxV1/CfgfFB3x4YM7FtAflXByorqSmhOEw1Xbx
+cOx+W9kNvjwkNiI4+pNak3HZZyp99g1ZmNzfOzV1N7I+OpUr8bGmLjlsNwj
djk8Y+IzshoUDjwy9rhRjWnPrnHjEfETN7LZKz4fFRv+HBM9hjsqMp5Uw1K/
wpNHx2c8d0z0eFLdSs3q5Mj8x3nHRu9lc1zk6SLvm/s9NuNgTrUqdSqs87HI
M0ZWj8KZalLqUafH3r1jzuPj8x/79s75edf4U03q8Ph8Ys7FkOpWalYzRc8G
D6tzqXFh5inx2b2cFJuZI7PBsWph6mBnRt4393hKbDCk2tPJXWO+U2KPM8/I
mFj2tOhnjcw3PHp65HPis9ofNlYXUxO7ILL5wbKfiH72yGplGNi1Tuoaf54Z
39zLWdHLSXCgmhVexJCnxOdz4v8csSfj4bNjg4HV706N/+dFP1dkevyHCdW4
cP65uS8sfXbuHT+rqamnXRxZ/RCP4lW1OJz8yfj56cjucZ74r86GgS+Kn5iH
rNY3W8YxPja+OP5g44vj86TM+dGZh0tyrnu5NPZymRPy3GJQLHpV1/hZDQ5X
XBGZzzhZDU797ZrI/MS+n4l+gcjqcpj5soyJmS/LdefLta7sGs9dHputRq2e
pZaFn9X1pq67Rb4842NddbOFc+7VXePdK2KPd3GyehrOVy9TK8PVV+VaC8aG
/c25rnGsPYntf8j41+RcDIpFH+gaV6uFqYNh8usyDha/Nv4vGVkt7rbY8wcf
X59zMfcNka3J+rtcGP/ZqKHh+esi/yesruaG59XL7u8an38xvt0Z+db48KXY
4O8bY4PV1bDUr/4XPn+wa8z/hfiP4W+Kb3j95tgvkTn5Sv5eZPOE4b+c8V9N
jqD+iLdvz3ziTByutobB1LlwJm4nq1npfTZw662xwZZqZLhxg8i4VO8zzKm+
ZL0NU60fPXu1KPpF8/fl08C8d8Q3zInPsJm84Pb4KY+4K2NuGxln2oulDjZt
13rchtm2iTwwIFbDadtFxl/itlgoDmIcLIJDcBN+wkEYDW9hrZ0j46k9Yo9l
cA2+wSk4SJ6Ai8Q3cU5c2j02+GenjI/N1ow9HsE12AJX4Bc8gSUOiowR1K+s
IeGWw+K/GC4mi80DO5DF6AMzJpYR/8V1Mf3IyGL11plznN8D8HFbuz00/m+X
OX8qc+j96j3r3Szeen95d50QWXwTk8U88W5KZHFMrBOrxKkzIosb4phYIo6c
GVms8J3z3fZdPC3X9W6/Mnrfd+9+McC7Vmzxvvauviiy9+7psREjvJu9o4d3
sHei9+FlkYd34dT3VNfeVWTfL+8S30/fuy9E9v3GCHIwnCDXkZfWv6nfRd9J
ebR3hu+z7/JNkX2n7TN8tJ+o/XrWPed3RZYr4RFcgjvkKY/G5saM/0DXcqvH
3jTOYzlXbvV4ZHmSnPOJruVV8sNJ8VkuNzn3gnvkrmzkY2pDd2Uc3zvjyLvk
otvk2aA/Jn5ip/Myz+KgWrJnaq48h7h2u3wf5UV/zrNn34Dvsl5de/j+kuVB
28fe91Hd2nq9tf+p6/L9RF5F9v16m30F42Y3b/XzjNuaupq29X65z3M5HnKv
56NX27bmbb17mnGTN8yYz+Ve7BVkN6zLy8eGfIs8rNHLzYa8iuw9INdRU96o
a3Voflm/5+eLua+ptee+rbvTqeMPeRhZfjQu+9G42amlW4OX46iLvxKfx9nr
aC/CS7EbcriXY2+9mb215hdyvnPtYyRvFJ/ldd5Rci852JCfkTfJ+5CNd+PC
dd2Fxm29X03e2v+m0b+e+309n8nh1MvZyl/+kr+B+ff3fzrPwL6xN468TY43
7G+Ua3nXTTdu6/7uSb1dQUOONu24yeZT77Mh5+tjo65v3X3Ys0jeo2v56Th6
9VRr5NbH7Vekl+t5Z6rRy1nkZ/K9IbcjD3sJPP9ysoPjs3f1YuXbouO2t0At
X2/fgPFmyJhsyPZJ6H0mj7ReyR9r36/FP77Jn+RUYtD047bPwD1aIyDLd+yB
ZL9rbMzdzPmcnfhi3WDSaGIfJPnQzOc0mWu546wZU43fGPYxvJ7znWv/J3nP
ruWFckjvCrFSfjjkjmQx5dj4L46o69u3IGdZsq65xLgdH5lxxD5rCvY37Bub
uTKH++U5EWfp2A155Ntib41i7syhXHieyPZbkuWPy9h7PG57GqxRLDCa2GdJ
nhKb+XLv1hDY2ich71R/l1vp54usdyxPlS8vmDHlZ3JL+ZzYKv8c8k6yGCq2
yjPF3OXrusuN2z6Jx+Kf/FRslVuKmyfFXpw9LeOLiSfHRoy2tmAM+yqsZdh7
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
558XHbvb8n1fN/aH5t7Mv/ii1uTz/wf8vYbt
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
Mq4G3JttmTeE9aa+x3uOtSLI2O/X3ttkOEzVbs5bO4Qcqtapl56E7rhmCKur
kGG/yEmVs3cQ28TD+sruNsFHeu/0YpsSQqf1Ag7eGYZ6r3eYFrkZzmXVaydG
yNhLdjZZxRnCZbkVZU/n8/Fj+WB0whuCO3/vnWejXYbajfykR1J8BGUqCv7a
24hF8dsXbfQuQ7Da0R+ph5qIu97zrH+mBHgZzSF/GcaiFQcNy4vb0GZR+feL
JZHzm648tE8bxPWJP919zURucWVJuj0vRvo393gb12Ho7v/+jfykHTUHJm2t
JcloSU650ms+iD3NDW0E+uPs5erq/LtkOB+dd97EZAhU/zX+YwTPChx7FSsv
34Tcoluy2a/LkPt8e4yZAR92iR63x3lNGByzqCqfLQNr9Y8v1r3NkGP8c8se
JOOSrdvwj44hXD2Uxs0NpqPqtfiTYJta5L+UWCe1iQNjbgrz8J8WwmfHrP2e
kxHldr8q1XMIpl3n7nta8cEn+ShltjXDVOgk2exAOTIi5q1nEzz4vfm4kvj5
WnS+u5l1gpjz8s+1zo928+ETOs0K7G2BaHGs1j5qOSwEi66XrGfgji7l0OvC
KhjOaAQdfsRG6sHmAlPxNpSeeyXnf4KMgTHo5vAG8W9MMT6DxYBgbv233yYV
WLrV9NwSQTbue/yYFpJphxWpoLF8DRm56XlKrpcH4f2BWvSknoeRjFsNUjZ1
6Dm4Ehp8KtY+/O+MDZHTclnGfX9F2hC46vDioQ0VoKUH7Ddp4eEEZdfAxXX1
MCpI+PVaphTv46UfdUXx4fjnRuUh53ZYKFolbPtYgYTXWf6eCY0w6PE0X1RX
ijjFrou7fFnotgyXSFPuQGUP1e7BJAmDjBkH3nyCswxSArlowur+O6/nHadA
1PaJR0TLMLosYifdNDthUTKuoveZhFPyZ06IJTEhT3JK6ie4b8OKgiIRqwbi
rp5snd1aCjvld7s62Tysqn+uXn6Zhm+fUvyvXylF0sdJh4mxJkRwiqft5Ivh
f8JyOmrzMFRilsZ+KGrBsZHRxKWFZMTEBHnqhwwhab9mSziRq+2TDj4YO0vH
JmOjHeuJXE0Nj8piVvLwolDMnHS/FmLKhxSq6qjI9Ol0iBnkw/3t79q6Yz2Q
pO2Ypr+vwszKkrVDe/kQ75vuXzXTguS77Ttm68shyHLY+TS8DQ+CcjS8nci4
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
Ic5HePg/W9+/Ow==
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707719822098*^9},
 CellLabel->
  "Out[1172]=",ExpressionUUID->"e93656c5-9e10-4f19-ba87-1bf05a720e00"],

Cell[BoxData["\<\"------------------------8/16-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.765707719822098*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"d5100ad5-be58-4967-8013-441cd6036c65"],

Cell[BoxData["0.23982891815712093`"], "Output",
 CellChangeTimes->{3.765707719947064*^9},
 CellLabel->
  "Out[1176]=",ExpressionUUID->"bb926d9a-118a-4dea-aaf3-30645c683bba"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw113dcDX68x/FjRGSEKCFlpMzMNOidVWYhFYXTVFqnfdqnMzqnzjmVnQZl
lpkRyTp+RiURoShklOzICOF27/18/ePxfHzP53zOx+svBu5BK7w6czicu104
nP/9+9y0K2abA2bCJj0u/9Xnm1ac//tjhlnnjo0IrSsnm2P5B8EaRQx7t8DB
rltulL0oI1vi1Z6GWr1C9vlZSB3az+/4HPY+G/GxXOHvqezdCm02B7TybpaS
gQ1Fi7eFXqXPC4DrslObyu3YuzX+Wd0L45uxd2vUTpuwwq7iBr3PgY/WvFHd
8ujzgjlwdU3wyl7C3ucivBe2ufdj73NRVtrVZfaT6/Q+DxayttaQdPq8YB4M
Vzsc50Sx9/lYuKPO5oUWe5+PqIucb/mD2PsCXLBOPhi6jSxYgMKnJd0tTlyj
dxsITiSf69SPvdvAb0psd+uF7N0WpiXTex+QkwW2+PL87i/d51fpfSFUZ1oD
onqw94XgTny5yS+avS+CPCViULWCLFiEHQ8SK8cMYu+LcU1Yu3uUNntfjCCf
OW/jiv6j9yXo8q5l36MCsmAJ+kz3PDh4DXtfikEKg9urFrD3pRh1adGKk2rs
fRnmh59YLP5whd47HPW0LPIcmWOHU50T1eS72bsdHm57n3ArnL3bQ/6fRv+7
LmTYI27s1npnc/Z5exi9/v3X0oCsske8+YUZS7ux+eV4FOjqE/9RRfPLEdp5
SsaBWrJgOTixG3Yt+I+sWo4B535qcAvJnBX4tqnvc58sNr8CT24ZRygVbH4F
JP6q0iY+m1+ByPKul7z82fxKjJH82NGyms2vhLfFFoe5dmx+Jb44Frx7NovN
r8S7wCHLc6exeQd0ez99h8koNu8AK8f5U/oNZfMOGPNjR2lULzbvgA/Rva5Y
qbH5VXg+UGJZ9f4yza9C/YDyFZXPyIJVuKg74HXwVbJqFSY29rqbdZbMccQK
34DFAdls3hH7Inf/S9vE5h0RN/G33C+SzTuiePrD7esD2LwT3sblvB7twOad
0KNXTVHlIjbvhKHNC2Lcp7B5J2y/u9k135jNO+PW97u3Pvdj8864lD0p/kYP
Nu8MtaHl7458uUTzzvCKtJR0e0fmrEbOJgNO2H0yVsNpQNLYpZVkwWoca9Ee
M+Esm1+NdaOzxeJCNr8GOafrRFcz2fwa/DRYbZa1lc2vwaJlowMME9j8GqRY
KC6Ioti8C1r3N++x9WTzLuis9146dT2bd4H5mff84YvYvAu2RGSa7ZnP5l1R
t2tyY54Jm3dFk9pLWdl4Nu+Kxj0/PUu12bwr6u+/U9utxebXosna7WTSv4s0
vxZHJszaM/QPWbAW5h++2N1/TVatxQeZrM/0JjJnHR419+PkVbH5ddAZ8at3
zR02vw6z1IJW1J5j8+swRHfv97fMnPX4nc9PWr+Xza+H+4P+R5bvY/PrMU/D
Q3Ogks2vR8Teo/6vUtk8F8VFVn3uRpD1uXhz9MCV8Cj2fVz46Tq89OaSuVxk
3Hh6odqDfT8XSv7EvwcXknO52LZ7RlDFUraPi6E1fNmGKeQGLkznRE+eYMr2
u0E5Mpkfr8v2u8HE3aX/3eFsvxt+LyldeqcT2++GgUdTd2Z2Z/vd8LUmUGXb
fIH2u0EjfblhzEeyyg3ZQ/Y8b6okN7gh1y0jNuQ+meOOw4/lopMnyfruWNZp
VYLyHBnu0DlyY+Tl7WSuO8K66sS8zCEL3DHaZlj9mGi23x0x2qv3bk5k+93x
7D+33xpr2X53XBp6i3fBk+33gOkL7UdyK7bfAzeGS4OENmy/B+SxpxbeMGD7
PfCqr9n9LmPZfg9sUwa8eNiF7fdAiNuxby692H4PZA16rfGg8Tzt94DV9MWZ
eR/JHE/cv1PxX3UpWd8TbzK/fWiqIsMT32wOPnxeQOZ6Isav8zuzU2SBJ07s
KwjvqSDneiIrf26X/dvIKk8sq+pdtyqQ7fdE/ayaZ5P4bL8Xbk6XcG7as/1e
OGm6WLdhDdvvBY0l42b7TWX7vbD3jfGTc7PYfi/k1RrethzE9ntBszHOQ6XP
9nvhT3aMifXPEtrvhWUn76/63oXt98YneyUvup7e9b1xr/et7utek+GN20Mv
2b+9TOZ648TDgqyfN8kCb9h9eeS2eS851xvH57n1rzhGVnlD/ZNerzAp2++N
SdIZy+5vJnM2YOkF7bR0P7Z/A9KtXXprR7L9GzB3b2J7sx3bvwECWUnDVhe2
fwPcD62fHD+N7d8Ao/KfBnZg+zegTnPlHfvBbP8G2K3e9XbBaLbfBzazgk3d
/p6j/T54YObRO64n2++DRaYjpMdf0jvXB9pzh/f/8oks8IG+4eAdFuXkXB+s
nDxm2oEHZJUPRK3j2rseJzf4QPKpyn3neTLHF6ZdD/bQ2Mb2+yKkPGtuRR4Z
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
ObKb7leYSVl/OaZoKGqSJKy/HNdnZ5o8FLH+cryTat4bI2T95TDf0PNsjID1
l6Pp0tHHd+NZfzkeF4+dOTaO9ZfD59j5m+IY1l+OPn33K59Hsf5y6NpOjwWf
9Zfj2eFrm/IiWH85/FYXlXcNZ/3lGDwqdPjGUNZfjryY0NS7way/HFdXTu9v
wWP95VD1sj5wIJD1l8PBxWiBVgDrL8fMyUkfRH6svxxn9v/d8c2X9ZdjyNPZ
1r4+rL8cFd/bXz31Zv3l6PH+R7yjF+svh5boR88qD9ZfjrCpt8SL3Vl/OWw0
7ZrLuKy/HEdPuE22Xc/6yxGt99GlfC3rL8eKM00eS1xZfzladRfMv7uG9Zej
Urdvu9Nq1l+BfllLxA1OrL8CjxP7Pd7oyPoroJ7H//ndgfVXICp331PxSta/
4/3NZYnWCtZfAd+09rf77Vl/BYZYbe1pZsf6K/BodFlD5VLWX4H1Txt8PZew
/gqIXSfuaV/E+iuwqrZ70vaFrL8CTecq+k2xZf0VWC55Zn1nAevfsf/G8f6B
81l/BYb/OS7oM4/1VyAmeY2scA7rr8DYDBNDB2vWX4HnfUocf1qx/gr0jZIM
yp3N+iuw8esYd9tZrL8C3fVmzfhiwforYPnPOy3HnPVXoOTX0o2LzFh/BY6f
y73aZsr6d3zfYK2M/BmsvwIROh6vVk9n/RUIv7Zsf69prL8Ce8bsqlFNYf0V
KJ+hx4+YzPorYHw5TzTBhPVXwMCh04/Giay/Akazh9zZPYH1V2KAT7W6y3jW
X4nZywbkaY9j/ZUIeV++9YEx66/EjSPvGrYasf5KTHcMEa4aw/orMe+3a4S2
IeuvhM6b4+cej2L9lZi/PWzh7pGsf8f3bTo3wmsE66/E4pDNc8YbsP5KJF3X
PvB1OOuvxIx/3osu6bH+Srzz2TM+eRjrr8TIfp8XrhrK+isx6Xz87hFDWH8l
rtyOGft5MOuvRI7NsGaVDuvf4f3ZDzZps/5K2NebtngMYv2V0J07ebrpQNZf
CRvJnTwNLdZfidGb10593p/1V0JbOfb12X6svxL9LyWXpGmy/kqkJN475NOX
9VdihRm3aE4f1l8JkeXmmmG9WX8lwsoq+vzSYP2V6Ps51LmmJ+uvhPmmbyeK
erD+SrRaXNbZps76K5E1fm5KeHfWPxX1pj+6OHVj/VMhvuAgMlNj/VNhurVW
bVhX1j8VPl27JHfqwvqnYsFxp56vO7H+qdgsXiut5LD+qcg/uevP6X+51D8V
STvyN+b8JSMVN09o3Er6Q7ZNxflNLsOD28n2qfC9OdHd9TfZORXPX+httv1F
5qaiekHZkek/yT6pWDXz5vGRbWRex+9R3cjo/4PMT8XkPHevzt/JglRYzJ8/
oPUrWZaK1Sd1cl+1ktM7Ph+d3KPmCzkjFWMOL1h68zM5NxWqK518L7WQ81NR
tzNwzalP5MJUyNbPHV7wkVycinGCmUW7P5BVqbiVpa674z25rOO+cN7itHfk
qlT4NU20kb0l16ZCu6KrhvANuSEVTT9Ob41tJjenIsyo64vI1+SWVAS2FLeE
NpHbUvHrSNYlXiOZk4aGsIiFga/I6mm43mNgmv9LsmYaksvmKf1ekHXSoJ95
39rvOVk/DTUvtx7yayAbpWEU3+m6/zOySRq6Sz+lBT5l/dPwRDlZPfgJ65+G
KNvWcWH1uVb/A4N7a1Y=
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1000.}, {0, 0.21050699450563767`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.76570772000955*^9},
 CellLabel->
  "Out[1177]=",ExpressionUUID->"354d9da9-8d0a-4dd3-b6d3-b6c22ccfbdeb"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
1LoYD3+Z/v28SvtV4lHa02+dCi8rzkYe/5Z+76JK5x0cV+M/WBfrocz8xkr3
9mXFs8jDm3uKdbJu6uFFPWXmBdeKh68rrsz3wqruHXhl+03tA/WUme9Frq92
3yNpLzcV3yOPntJOz+tdwD5z77Bv+V65q/7UU3IuUu6p2n2u837nXf9c8thF
foe80DvljdrfVul3OuPTjp2g17T3yb/l75mmd8tcnifzJ28l3ytP01d7xg99
zZfvuNvyR+iV9sxPTePmPDdlJ/TPd+C98jF+p75TnNFXe/qFx6qnZD/zO85N
4bT7p9IbfoP9TLt6p7imr3bnYajP9+9d2SF8sRN4pJ3uqj1/tze9w3n3YgeZ
t36o9vzd0F7rnvBoBx9rHfl7k+eSZ5zMb+yLJ3Kp1+k9m9/zPtb4vF+Tx778
itcHxk8cqv/vPeSSe4j4mnuU94VL7oGx29dNf5eca9ZLPetyybnDH9M/3+fX
Nb/LvJ+38iNnem+cKT/0qvoj5zLv0+9LnvURJ+V+vS1+9EfOZdrxYxPnOQ4z
pj982Ecw54D1II9+/I5mH8Gc89T/Q/XzOwJ5+CBPf+rBnPN8p/Y1ruN65KlH
nn2hnf3z+Oxbvmufa/15LzyWfK7jWXHoU83vd13eL5NfZH3IZxw/5YuR53yP
++nfWV3WOc7zM31Xd143f+91VevI+O2sieeYj3sg/fhKcd2Uh8681U2Tl8Zf
5e/Vr3V+HstPoQ/sOfMNm9pP2hk/v+9MeWu/G9gP7Bd/m99ldk18kr8b/k72
PPl1+me8sSmerCv9+lZ+7EH+davvDg+ytw/6/jGV+T44FV6WntC78xTp3y5r
/vze0Dd5BOyFfUAv+Ef05jgG3hmXtb9rQ1+5fr9bp98x5bv9SfdJ+zulfGdP
efz/AskH8CQ=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3Af0JUWxBvCZexEQBckIiLK4IEmCknPOGZYclyg5JwUXEHxIjg8JEpUk
iGQQJAfJKCCYQUHBJ0EFVARf/ba/e9Zztrfr9lR31/Sd6fq+6rr/MeP322Tf
Qdd1J0zedcOq9++77pWqtX27/qvmbqYqB1T777um859qn67KH0resRqmqHrm
KrN0TZ6yyuKl/4mqZ6uydMlTV/2ZKouW/PGqP13lyyVPVfWsVaat8T5W9YxV
5it5yarXqLJk6Xyy6tmrLNG38earcljJf4z+R6V/TpWpqxxc7a9W2/TuoWz7
dLX9iW2DZuPcVRbr25zzVtmn5BWqLF9lnv+6jy/1zcYvVFm25GmqnqPKISW/
VvUMVZbqm13zV1m55pqr5lij2o6s8nq1zVVlp5JXrfLZkpcpnTmrXrjKV6vt
jao/X+Wokv9c9dgqlw3anEtUWbFv97pUla+X/H+x/y9ds3XxKn2NeWH1maHK
cn2zccEqOw/b/VnHZfq29gtUGVN6ixi7yjHVvkrf9MdXvVqVL5Y8WfW9pPRm
q3Jctb1pPar8T8nvZN6V+zbeMlW+UfJbvk/PUclvW+MqK/VtbZausnWNtV/V
R3s+avz56/NfS/5syduUPE3pnlTlb9W2QpW108/4K5XOilU+V3ofr3qhqv9e
7V+seqWqN6xyWvV9r+pVq5xV8j+qXt3zWPpXlt7YKqdW+7vVtkqVNUtevcpy
Ja+VNTbfGdX2ftWrVTm/5A+r3qTKriWvXWXdkm8ctD5bVPnKsNm6ZZVz6/q/
ql6/yv+W/EHVG1T5ROlcb92rLF5lzWrbvMqnqn25+vxvz1jVG1W9Q5VPVvsS
9fmfJe82bLbpc0GN+VHVm1a53rtTZbeS7y7drareo8ql1db3bfzpq+/qdW1g
Xavemr1Vpqn2W+rzUlVmKnld717pTFfyHSWvUOWK+jyssl3pf7fqyapsb10G
7V53r3Jx7wHsunFVrVPtO3btO76o2v5T9WZVfmAf6Jv+tVVPWWWXkq+zD1TZ
teS9vON9s3+3qtfpm50/tG9U2afkq6ueosrOJR9ZZU/9qsxYNt9rTatcVdcn
rzK+a+vhe1mnyt6ls793yLtX8mul+/Uq65e8XpVNS76p+n2qyoGls319nrbk
g0qeva4/WJ/HVbnVGlU5rNq/FTu+WuW2apuhylElr1v19FUOL/nEKkdEb90a
Z50qG9c456f/SVXmqLaHrWmVb6ePa3NX+17VNkuN9XjVj1WZUO131OeZqhxj
DartG573Kmd3TT6+ynne1Yy1y6Dd96lVNq4xN6qyY7XtXmOsV+Wb1T5Xte1a
bTPW5zurzFzlWHtFtT9d7eOrHF7lYs9dlXvsw1XOKHlea1vXZq3P+1V9WrV9
p2t7vr3R3r1A6RxS12anM2y2Xl7lith9jmcs9blVrvT+5D7Glv7P2Fvlbnty
lVOq/apct2bXdG1NL6gyf+m/VLoHVrnPvlflompfsNqPqLY56vOD9uMql9pD
qv2oav9cfb45NrHlC9X+fLXvU+Vrg2bvjVUOHDadmzyTmd/cs1T7/Z4pz0l9
/l7u4/bYSneR0jmurs9Vc/2m6l9XubbaH6nPc1b5fsmvVNuxVX5Q8uPV9vkq
N/g+B23O+6s8VOWWrs3zRF0fW+WHJX+5xj+x9Oauz49WGVPlOs9M5rdOD8R2
93rmoI33bJWn+b8qd5X8aOzW7yep76yyRI1/Kv/kO6j6x9X2pO+62s+qz/NV
+yPeh/T/UrX/qdqPr/JsXZu3yr3V/nBsvy3lyqzRT3N/bIQvYAJ+9qXY8ViV
F9LfPD9Pzd7Fa643Sv+kKj/jd6o8Ue1LVfub1Xa6/bTKF/t2v1OWvEDf7N+4
6qeq/nWVFzOe+Z7PWpvveX6yyjMlr9+39ue6hpFgENgFdoKRpusaXoKP4BAY
CYaCpeAj+ALOgJHgEBho4b7hrmm7hpHowFEwEhwCM+1Z8mZ9Wye4CBaCsZaN
f4exfts3fMBHwyowEhwCG30u48NKMNKcXcNR8BEcAivBSXAIjASHmHup4JDZ
YjfsAYfASPPkfuAuuGhM13wo/8tPwWxwiPuESeAa48IsMBIsAh/BILALjLRQ
12yFo2CkRbuGl2AkOARGWjx2LBcc4v7hKBgJDvl61gEOWSY4xH4EJy2ce4ev
4CP2wRfwAH8Bx8FJcAh8BIOYA16CkZbtGjZaMfbDSjDSSl3DPzASHALjwLJw
CBwFI63cNbwEI8EhfV3fpW+4EaaCQdgKa8FHcAgcBQP4DtbqG0Zar2u6fBws
AhuR2QpHwUdwCKwEJ8Eh8A+MtHHXxtMProCNNoz9sBKMBIvAHhMxeNd8FB/H
Z8FaMBJcxG/xV/wgfMTvWkMYafOMDyNtkfle7RtG2qZreAlG2rZr2GiHzAt3
wTk7dQ1HwUdwCKwEJ22f+zYXLLJEcBUcAmfBbDt2DdfAJft2DSPtHn24pQ8O
gZcGwSEw0h4ZFzbaM3bCPx8LDoFtuuAQGApGgkPgJRhp767hNPgHDoFF4ThY
CK7aL7bBGLAAPwvLwUiHdA3nTBkcAi99PDgEjoKRDu0aXlonOAT2gZGsPxwN
Z8MhbIc74A/YiMxOuAtuPLhreAmmOqBrWAsG/1rXMCAcBTOtE3x0XNf8G4w0
oWt4CUY6pmsYalywCKwEIx2f+T0bcMj6wSHGhKNgpBNin+vwCpyGH1gjmAoe
Oblr2ASO4fftzfZoez98BAOd2TXcAivBJLASvGM+NsEYZ2UOmAG2gIPgn3PS
xv9cGXv5c34dTtLXvcBgcNdpuXZ1+sBj8NLpXcNJ+npHYCR455Ku4Rd4CX6C
YWClC7uGiQ4eNBwywkAjTKS+PLayC56AxeAfOAeOuiz3dWJsch+wGBx2Ue7j
mtgKb8AY/Diua6/FaY8ItoMTYB36xoefYD02w0vw0Q2xC3aAIeAsOApWOSo4
CQ6BkW6M/TAUDDbCOTDJj7qGzWCx7+f+4ACY4Ljgn7u7hmFgJZgEVroj9wMj
wUXwB7wDG93XNSwE+9yb7+b2jOv+78hnmApeuidrak5YCr6EW0/LvcEg9+ca
X/9g13gDjPRYxvIsPtJNwkk+w1Hw0eNdw0pwEhwC/8BHT2dcPhwOgY1gEPcC
K8FIsAh+Ysw7cw/mgUPgLLgNDnl70LANXEL3pbwb9OCk57tJOMln2IgO+2El
GOkXXcNGsM9TuVf9YJt/9g1LwUnwEpz0q2rft+oN+oaD/tM3bARX7V1lob7h
mF9WfXj89/TV96C+4aGXqn4x8ofVPs2g6Z9b9YF9wyUzlXxo3/DEL/rW97V8
Vw/HxpkHbXz4RlBqxmCan1fbIn3DYZ/KmOTzSv7fQdO/wHs6aLjnM57b2HlR
5oVLhjXm7MEov6q2I/qGP7yv3jnv3hwlH532z5Y8oW/4A86E035X8qyD1tdc
F3vGBk0HdoFP4KiDaq6D885cGnvgiV/3bXy4YZ5qPz7yb/o2FwzxhWr/ZuTf
9Q3/wR/zVvuJka8o+fJBwxML8Nd9k1+u+ti+4YkFq/3kyN8r+buDhiEW9gz3
Tb4qNsAHU5W9iwYrvNI3G2CLL1Xb6ZF/3zcbYIUve24j/6FvNsCIi9ljI19T
8tWD5i+XrPqc+M5rYxvcMHXNu/SgyRvar+LD/s9eG995XbV/f9Bww/JVf7tv
8g9iG3wwrZhSsMIf+2YbzLFStV0Y+U99s40vX9l3F/n1vtkGB6wyaPOSf1jy
DYOGLV7r27rBNzdX202DhjPW8F30Tb615PP6hiFmKHvWCp54o282wxNrV9v3
It9e8m2DhkXWq/rKvsl3xmY+e+YaZ4P47z/3zWbrs0zmYs+qJV/WNzs3slZZ
t0NLvrdvfuvTNc4mg4Y/3uybzXDDrNW+2aDJd1X9o0HDLrNV++aR76n6x4OG
V7awJn2T78u9wCufKf2tBk1+q2/3An9sW203Rn4g3y/MsV3JN0d+u282wx87
VPstkR/KXPDH52r8nQZN/qv3oJ+EOdTiHo9kLrh2ztLfedDkn1T96KDhj92q
vr1v8jH25L75sL/0bQ2tz9/6ZgMc8BVrEvkpe/ug4ZK9q76rb/IzGZMvn6fm
FYAn/7TqZwcNHxxgDfsmP5cxYYj5Sv+gQZP/3rcxfV9PZH1glBfSl989rOT7
I79Y8s8Hze8eWfUDfZN/ke+dL/9qyQ9F/lXJvxw033901Q/3Tf5txoQnFip7
Jgya/G7fxrQ+n6/2PQbNnper/t2g+fJvVP1Y3+TfZy6+/NWS/zBo/nvR6nvC
oLW/17d5+exvVdtTfdP5Y74L/vi0kp/pm99dsvqeMWh+dLGSTx40nff7Ni+d
b/peMibfwF8413g97fr+q2/+DC9/z3tQZSPvVObiO5+rsmHkt6r9p33zxe+X
/ELVm/TNt/GJ1dSdHR044K8lvzNofvMD+1mVTUv+R9/ukc5f+IpB87/4v7iA
mMDWfeO0+OwWfYsR4Neb942TzxL/Qsa18dzt+sYf6eP2eL3YgRiE+MOWfZNn
i7xExtwusr70vhxbzLVoxhHjE48w3lZ9ixcYZ4fYiTuLTYgJfjL2k3F2GFT8
wvVt+ibDptv2Dae6vn3GnD86y6XvjpEXzLxLZk301/ezqVeI7F6sxbwZc6V+
0vkKeenYvHI/6dyCvEzmWiX38jHnOIP22birxuYP+iY7Q/l33z6LF+yc2lkD
WZxBDAFPJjtTWK7GXHbY4gD/9uwPmm92fc3ofNg3n71WPuPbxtgqsvj+u/z2
oPFDe5768Ox5YtP2PQX3sReeE1ncdck8K9YDxoLvHky9QeSv9A0Hwovz5/mH
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
Tg6KbL8V39T2/00UHuc=
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
ofrGv6tHXJhQ/TR189KeJgT19LouI/xBNOG8k5F+Pw5+lV9XJ1iHTufnotc3
0TFSSNq1P3oAQaa991LvcpDy3k8p1ISK53ddNjC+tqO0z8QrYPk4Wp3LlJl2
VPRGeVfutmjHzMYlp27McmDo+PBAeDcVVx+1GnkP0EA52LdLdTEH7/1Ph4km
c2G18rPWmelqOM8tDv/9h4SUsQMvzzrxcOL97kp2/Qgq5K7e5ZEacbq0RLeB
8G1XzUytkcxeKDZYz1mfq8XzW8UbTQNpRK67HUAa6sFGl08fg3o4GLb/1CQV
Q+Sy6HfWUp0tWLdQPv9WNAeJ8pJqTXNU5F5aL6WjSUX6wvqrmjQ2zkklL3Vy
I/pq5kNzgGItUkNMl5y7wEKkp+OKw4cYOFz7TNFGdwjHL/dNxL5ho0Ra3t7o
HpH3bqdfaOfvhOLruCwhiXG4tt/mE6ZTodngcNtjJx0iK8dLRlZwwNj+vteC
4JPqDlHF4EkKAp5b/3hG8Inj6viQXmLeo0+717x9VIV2lf3dzRUkJHyymT31
j+DPysiBd0+Y4JWJ7Vh0rQmL7xsImBH16gzc7rBdth+Of++Z/J6txdDCZDX9
fVTwb8+J+v6qHZvqzKdbF41DfkNNwBxx3+410wox66g413c/oofKhsitt9p3
FtNw4+lh1yXbmyCRUGNnR9xrT3rm9bZ5OvQvkL684FSh8vd5m8aJMRzXb6Ym
PWJA9Ufxt3GCowIHzbc8O8/G+uPPbrXspCJmRDwwYW0H4ugRwROK4yA3bc+l
TlFxvTJ2+YVmKlYUxoTu6WdDsX3XoALBz4IvDz94XkdBgRJlp6YvCWLCOy44
EjqY5ltpWt6qQvkjuuFUKQm1eQP08h4qNg/c/TzAoOF/FZqJP1Tt+8dV9haF
EFkS5WlBWR5KfciSVCotKFlKUokUyhpfpUVKkihCSpYeUUQaMfZ97MMMw8ww
Y8yUNtmi3/n9A+fc57ru63O936/XWQr3rdOixLyMdovH+rWjPj1TN62tDtEx
BYEi7lw4O8/WYQkVQUl6On88y1CVpKbaOsZGu6OQgTKrC/WxAYodrDJ0Fxe4
2fYOYw2nwX53NB+6acp6eZuqEaFxdyAsgoylflYHLJP5EJo2jS9CLZTZreGu
DDKyX5HWnU8Q4Hf4yHiIUh+0WxOH4sXqECuyMKlFVID3Qn4zEWlEbmkb2r/X
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
/B94FESJ
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077201501417`*^9},
 CellLabel->
  "Out[1178]=",ExpressionUUID->"f56e97ff-2770-42a4-ba47-554f7db451ec"],

Cell[BoxData["\<\"------------------------2/32-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.7657077201501417`*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"f7cd848c-8b1a-4412-b76c-ef95f7ac1d42"],

Cell[BoxData["0.27497400340391276`"], "Output",
 CellChangeTimes->{3.765707720212663*^9},
 CellLabel->
  "Out[1183]=",ExpressionUUID->"c04bae86-f047-4519-a683-385700504655"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
1veDksu0uBh1OSmNjTSKcUbVu2PLe/8PfxIqjQ==
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.1052203714701565},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0.1052203714701565, 0.10722154764407017`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707720259493*^9},
 CellLabel->
  "Out[1184]=",ExpressionUUID->"fac95e39-3b6b-4f68-a21c-30a712206c0d"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1lw9MlHUYx+9MKHLQwmYbhYM4HMlWOhJoWQ+5oXA2dWQJc2Mm1MQQGThj
pkRZEwxSr9mmW9H4I1r+4a+mYMVbAqMFdDo2g+bU448c9ye2NNNVctz3d3u/
x93cnn3el/e953PP73l+P6M3b894e47BYIg2GgzT8ey2oQf/BsXg/fw+c0Hx
v/9Nf64pPmRKt5jSbyiOmUaLTXGb5/FRxaumb5tuKb7qeb9d8bvTf37WoXjm
41bsub3tF/G8Jr3ZG62KkT8Y+YORPxj5g5E/GPmDkT8Y+YORPxj56/PVVNT7
aOSjkY9GPhr5aOSjkY9GPhr5aOSjkY9GPlrAurAXmCN8wfAFwxcMXzB8wfAF
wxcMXzB8wfAFw1fPBgOvO64be+nv+6K+vlaqr5Xqa6X6Wqm+Vqqvleprpfpa
qb5Wqq9V+XJf8brkurEXmCN8wfAFwxcMXzB8wfAFwxcMX/2ccxP75t7sc0Tz
W5dcN/YCc4QvGL5g+ILhC4YvGL5g+OrnuFsCzfXZ56Tm13e8Lrlu7AXmCF8w
fMHwBcMXDF8wfPX7lFsC7Vuz7wOa31zhvuN1yXVjLzBH+ILhC4YvGL5g+Or3
YbcE2pfhy/sCz02eK9x3vC65buwF5ghfMHzB8AXDN9A5A368z/E+wHOS5wj3
Ga9DrhN7gDnCDww/MPwCnZvgx/s272s893ku8tzgvuJ1x3VhDzBH+AU698GH
zx28L/O+xXOd5x7PBe4bXldcB84bzJHPrfDhcxOfK3jf5X2J5zbPNe577gte
R2D4BDpnI//Zz3l8DuJzAu+jvM/wHOY55aa+dlMf4P1d3jzavdcHFHteZ7ni
zatGMe7PPO9U9/UeNSrie+CP5/Xv6fKL+vcOyDOe75+UfM+DI+r7wbg/87uM
yUHP8xMq4jr+DtfB+nyddF5zqufB+jngVHmi7vrfr9nvvfDH78K/E/LhdQ5f
9A08kA/76Neby3vdoiKuIyI/3Mfz+vpayMMlf+23Dxb/3eN3jjcF384+veWw
VNpPbHwr9Qq9X5PQpqcaXn7jgnqu64/BVbuP+/4/VBZ8v/3L53vU9xcV9idE
brJJ/NItTeZhl1+f3ry9uDLWMSax+asrV3ZN+s2d0ejyqs4ddrFduFpZt2Fc
vbfjhU/m3avvlfVRJVMnzzdK9XDQ2FDkgOwLKel9KLlW2p990nz0wPcq3mn4
LXXfqEsi/szZOlBiE+fwgjkZBpfUmae++2FoRD7LSE2yxDtka0hLePqRccla
+7Oju3RC7MWhZZPdD9axZaRt4tS4mAyd+ZkVLglLbNz90Yv9svG18uqInHrp
yM2NGgl3StCd8rz3ksZkV2Kh8YlCu4oHUjqaln1+S1or1gyWxjrVOlkeNbg/
N+yM5NVkF9x95JK8GrXD3NdzTjK0iqbk+Zfl3rn543tXVEja8NctxhVfSUTK
xZ7cx7tkV2xcxLLLjbKwLmvN03N/kqB1aZEr13aqPv20OmzJkfPN8tiN+OvZ
H2pyOOxYWuvpg2rd1lddN4Sfccme9saYpJs2CfngnYVT2U46Dzjl2pIFpxpN
o9JS9nDf3G8cqq9+PZ6UNmmelJc+drZ1GydkXd+GUPP7dtlcvfdEzCa7nCx4
ZXlIkW+/eFOCsxZ96+tfm219xBdO3zxGXzQ39G+fWOqb1zmlvUUFd52y57mi
qvuJvv6Fx+vGithD/7Sqfo7LLCtPOVar+ulRR/fF7J2XJG9nUO281S1+cy0q
c3FKgvFHSY4rTqhd5Jsz/wPJ+sCu
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
0fv/ASovOI4=
         "]], PolygonBox[CompressedData["
1:eJw10E9ugXEQxvEZJELfVpUGbQVJXcgRHKAuwAmcwAVcwAG6r1i0FpVIWolF
t6rqX0N9J/Oz+GSewTtm3lqz1XiKiUgJCeRUZELtYYtL+jdqAUer9FPqAHss
cIEhHvhuR+2Lz1D6rPqsd9yQN9Qu2vjH0n6HEdKEP+oLPhCnL+JZ/D9L5Arm
5DGuyNfqs23mJsy02R2skVLfzW74wQERZiirm4UbEuQavsINeXIGr+RH/IYd
R2HGN+7pP8V3TJJX1Lr4M5H6juPw2er8DsVvqKrfaLfajDvyrfq7tR1slxPg
hTYL
         "]]}]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
65GGk28eEzSHX963f0mCtyt08cIeNlreL6q/8IeAst/qBZeYNM+njJ5485dj
V1+eilM2A2fbkzM9Z0kIvHQvfrmsFuJnWnNef2NCf1lbo7IjBetreUJ/J5uw
JYe132EbGyW9L8xe0TmHOZovsWZxD+6LPr3+8WMpptINNfiSSSwwi3kWdm4Q
o7fOGMVrVqGgR/NqqP4AEh6+yuUv40Kmwi4mdbQRPbNvzxQa1kFRMPzNaele
6Mvp1ci8GYZV7bu+1fSe7lbenyhzuhgZfmuHRfIIUPcGEE/Pja3eUjHwkYnl
02H9kfTc0rpXnhu4QUKtTbKykcPAd029Yzq6BDZUtgvzeNN5w1zL0/0SA0rd
As9cdhAQ3HWXNeNDYrtfaV5QGgNBl8XkjPcQcMnJtuzyo3kb1fSyPY6Jm5E/
X9mcJyAQ46QwQ/Oh7tYR6i7Nh+uTAYu8aD4IfO+TTs0i0ZXRElAlWoo32u1+
2qcYUEgev31ugIQVn+WmDcuqMeI7avj2HBM8TDeXa1oUDsoVsCa8G6BkhYil
O4tRx0gnm2mudmUM+fjld+Dt1nNJya4cpF2a9TrlTvPzX+cCvnv9oNay5ETv
VGBYJu5PaiEXn4MPrieuc2GSaRTOs7kOGuc8shfvbUWR+Kq983MHUW0ytViZ
h/a3tuvu2fR88oyDraYZDEzaHdbW2kvAaP21bS3XSFhkaz1sXMLAr3dP7ilv
JvDAQT6u3ZOE61vF00WVBBh5HW+OriXgrPQluoHuL1zhym9P9+//+pdvA91P
5ybH5JskQi5GvWP2MPDUtrjaWY9A6oPYA+a0PhNDstZKBLKwVEJ79XZanyKT
z3xvJpKYY3IYrjdKkFBx28twDX1uj4RUXWmfuvqWnSd5owKfft1N2DTJQL3Y
9Kn6VRT8n3k3zV2k9XJspUHfRRakljcF3ntGQcETKt9NWmHi9E08SKwES8bP
DpW0UFjf801w2ateRCdIcmO/l4GdRwTpqY1CzGxRfszNIRhsNy8rkKhBm8DW
eIPqHljLs9KY57loLlRMdH3QjtcjoSb/ZVRjlaqV2PbIOgxr6TWLmI9g1FXV
UNidxHrzu+KjHgR4/PovbhEgYB8Tpky4krj90CTsjiGBvU/i6oZ5CERI3295
RffzTn5+nu5PYPC6/6zOEgIrbMPOBPxH+8ifebM/tRlY9WKHlbc8AUKQxZGg
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
1rTko/9vULJJZ8//6v+r/6/+v/r/u/r/ARiIOWA=
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077203220177`*^9},
 CellLabel->
  "Out[1186]=",ExpressionUUID->"09e5e763-6d92-4776-9dea-3329541627b8"],

Cell[BoxData["\<\"------------------------4/32-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.765707720341571*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"f76e1545-fc3a-4c6e-8117-40a27ffd8a66"],

Cell[BoxData["0.30253490784485115`"], "Output",
 CellChangeTimes->{3.7657077203983755`*^9},
 CellLabel->
  "Out[1190]=",ExpressionUUID->"a9878462-7c4b-4655-8819-21f3dcd24ed3"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJw91nk41fn/xnFpLymElEpR0oqyFHGnIirZCxGOfT2Hs3AcMu2FSU3ak5ZJ
DZPQvq8avi2aFtNEGVFKIypK69fvd5372z9d9/XudZ6fx3+NCknwCFNVUVGp
66ai8n9/285WbNuz3wLtuR3zo8vK7FX+/48l1hzYPWtFHrcVsrz3WmyP57bG
T2VqT80cuadDqJE18Lgh9wyoXzv+28Oe3Da4UFrUltdcqty2GLVp5DLPB9wz
sWD4oV8jL3HbIbnjrJa4iNsemd4/DTHexQ24O2e7OmQqdwaQtLHiw1YF32dB
q7p8/Ld4vs/CSYszp5eE8N0BmZoH1+X48N0BQaNHTNs6n++zcbRmRdvSWXyf
jbx5+7VfWPF9DnTSikzNpvB9DgT1He7+xnyfi392e4kjDfg+F9ljmt+fHMp3
R9woq3fQ0eG7IxR65b/kavHdCbfSO6JeavDdCWV7Lb92H8z3eShIqZjQwJ0x
DzM/rNoYoc93Z/g3Vc48xZ3hjOqLB3SdxvHdBUOHq4uKR/PdBWPU94+dRY/K
fPwte7Thyv++fz4ObffeO2Ii3xfgg5d1zY7/ff8CnCl2fD6K/15lIYauW9Zt
XW++L4Sp/e6iWQP57oqrf2Vu395Ronx3RYXlLcW+r8qtsgh7InPXShv5vgjz
hns8eP2K726Ycr9E7cED5YYbHot2VlRV89+7obFXmF/zdeW+7IbJ1RsSc8p5
746Xv63pKD/Be3dMW3k5zeok792Rpzn5aXAB792x09BlzbVDvPeA8BeLzrId
vPfA8l5fzCdv570H4sUvrU9m8d4D5R8Wm4o28N4TYfJFckEG7z1hXjmo29o0
3nviuu1429Ni3nuiMHRAYbSI917Q+WjcUhLFey8cfn61p244773wzqlhpOsy
3nthdGnDh9X+vPfGgUORReu9ee+NHektZcXuvPfGuVF5H5ct4L03tM/+67ph
Hu990LRpn0/lbN774N6hzYK+4L0PSmuPXrxkw3sfrLz4u/0Ia94vRoiF9N60
abxfjIR5WwSnTXm/GLWuGa76k3i/GFcSDHzLTXi/BLUmEX9HjOX9EmhubD5j
acj7Jfiz/EF7HwPeL0HbiB7mnfq890XPn8e2tenx3heC0gmuP3R474sn8/YV
6QzmvS9mqSa222rw3g9OznN6x6nz3g8OPcrXHO7Pez9U6Yk+vunDez90dr48
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
ZfqTsCfYPG/VRfqT4NVwf2HvC/QnIeTRoaKsc/QnwS/9btngs/QnoXJH4tK9
p+lPwlfPk3snnqI/CTvMrknPn6C/q9d2/W/X4/Qn4bmg+frzUvqT8HhazOTU
EvqTICtOH6R9jP4kGEvCQ0uO0p+E6gnRhm6/05+E2tGPHdsK6U/C1pZ+f2z5
jX4x/L4sy59xhH4xKnQdKuoL6BfjdoeRbfYh+sXo9tuad9N/pV8M9cGtjU0H
6Bej3bN94M799Hf9voll9MJ99IvxxD2wRTWffjEs68ZsPZtHvxh9s939xXvo
F+NptzIr0930iyEZYTKmZSf9Ypyyzh9+dAf9YvyyWHOYcDv9YrRErtWdto1+
MT4kag/4nEu/BC8u17Vf2UK/BBX99W9l/kK/BO15fTYs3ky/BG+TO0zGbKJf
gqjIOYc+bKRfgq9jgjpv/Ey/BNLo8uE7sumX4GO37urxWfRLYFhz7PqcTPol
EOjJbYdvoF+CJdpDhB/X0S/B03hPv/tr6ZcgZkCPjmNr6Jeg3lDDLmc1/RJs
NhNNEq2iXwKFyvhLnivpl6J2n1uL1Qr6pciN7Hty+E/0S/HzP2s1embQL0Va
pfrXf9Ppl+JQr1bhX2n0SzFpc1bMdQX9UsiSvF6WpNIvhXNh+bN8Of1SzDIU
uW1KoV+KJztbp61Mpl8K619a10ll9EshnD5hXoyUfiluLIqKD5bQL0WC9oqP
S8T0S7Fjkv8z9yT6pbi/qmnUgkT6ZWiymHjOSUS/DBFxlgVzhPTLELVgTL1D
Av0yBFcaRTrE0y9DR268xew4+mXwbXd2nBtLvww5v/bfNi+Gfhkmn9E2WhhN
vwwKafUrjyj6ZTgx7XaDbyT9MqhNz9AIiaBfhobNa2JjwumX4fzHFe8kYfTL
kJxnlP9TKP0yZA81TvxZQL8MXpYeYbtD6E/G8dsp0sJg+pPxn4K0/eeC6E/G
BzfnF7eW0Z8M8w/37Z4F0p+MLdMMjrwLoD8Z8b1sR/fmDkrG5nUo0F9KfzJs
at0tpvrTn4zR3fdWuPjRnwzZ0eBggS/9yXg/6mmnYgn9yajsLcjZtpj+ZLS5
OI8u86E/Gc6t74vuetOfjM9v707614v+ZPQb6LW/P7dKCtpOq/SZ4El/Cg48
XrZ0vgf9Kcg61WNPrDv9Kei4nXnzZzf6U3CqYOfjkkX0p6D2zLOqh670p2CE
vWbh54X0p0BP612YAXdGChb97PTDcQH9KZgc8lwcP5/+FGyW5F3f6kJ/Cgqu
+L655Ex/CoZO+f7q1Tz6U3ApSXFuMHddCpJabwXCif4UlG18ey/WkX457A42
a+6cS78cIX/cHfnHHPrlyLlQ0tExm3450hYczR3LDTl2jHn12ceBfjm+Xsky
WjeLfjmuzakcdBb0y1G79PGFN/b0y+Fi/MnEgDtHjgsaMZ5edvTL8eKCwnr9
TPrluN+QVn3Rln45tGxuTG63oV8Ofe9i24ncdXI4Z+X9EMygX44RDZ8lu6fT
nwr1VrO8h9b0p+LqmZPSgdwGqbhW0O27sxX9qVgRmmO+2pL+VNTeaNS8YkF/
KkxOrN/zbRr9qRDp9r03g1uYCueT7YXJU+lPRV+TFxNPmdOfiviLEo8OM/pT
sTZ8zjBL7mNdv7+nY7XUlP5UPPCy2HRqCv2puPnP7zadk+lPRVGjxiob7tZU
bLTRjUqfRL8C1g2yV1cm0q9A47u27r24DRTwlDudcplAvwIucjvVnPH0K7Ds
dv7zhyb0KzBU19ZPnztIgRWl/4QKxtHf9fv54aqFxvQroJVywOz9WPoVaPAR
t9lw5yvwpfI0Vo+hX4H2Ss8Rd43oV+Dtvgnr9birFBj/j0lGqCH9Csx2t1E9
Npp+BaKfL1L/Oor+NJgd8Dswj3tQGnwPu1/ONaA/DeP6Tg59PpL+NDTeas42
40YaNj9db5sxgv40tP7om3B3OP1paDgvNBrJLUzDq8Ab/gn69Kfha53G4MvD
6E/DT89DFmhw56ehOP9md8FQ+tPwpc59+gk9+tPQ/lb7TW/uqq7v3TR+mP8Q
+tMQ0X74xlFd+tOgf6zotSq3Sjq+FnmuX6xDfzoaxlzML9KmPx2129VNVblN
07HwYpTlksH0pyNleUfpUS3602H2b+3BntxB6ciwnN8/QJP+dDzcG9N4XIP+
dGjJ480HcOd0fY/e6rawQfSn48rd+lGXBtKfjr1Pz18dwn05HTVil/uJ6vSn
4/CB6x63B9CfDunicIzjbk2HtVvsrpVq9C/HJz1twbP+9C/Hop77ttpwGyxH
iIGHxfZ+9C9H2ZRYu/a+9C+HXcG0Eo+u/V+bAkYn
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.059710314801204985`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0.059710314801204985`, 0.07695640902110042}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077204608254`*^9},
 CellLabel->
  "Out[1191]=",ExpressionUUID->"8a9b3f30-c598-42c3-a7f0-a1c4a2e5c9cc"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJylmstuG8kVhoXkSZL4PbTLZZtHCJBVbq+S6BG01U5IvBECDBqGBgYRgKET
BrJCyxRN07IzFJ8gM2O2v1P4v1IjiwgGyj+rqrv+Otc61T/61R9++esfnJyc
zH54cvK59d/Zs198/+/yNPFQ+Pb5777/N1P/ovCx+3ZZ+PX4Q+H/fvv5767w
n47z7wv/5DM8e1f4L8fp7wv/7PjCh8I3x+d/Kvyb4wK/KTz+HYQbz6fboTB8
s39RGL5g+ILhC4YvGL5g+ILhC4YvGL4pt4Nwk+PTPFubfAfxHcR3EN9BfAfx
HcR3EN9BfAfxHcR3EN9eT5+WY+PpFr5g+ILhC4YvGL5g+ILhC4YvGL5g+Kbd
HYSbHT6tp0PHK/tbm/JdSL4LyXch+S4k34Xku5B8F5LvQvJdSL69n3naDodO
buYFdgtfMHzB8AXDFwxfMHzB8AXDN/3mQbj50af9zNDppeVmXmC38AXDFwxf
MHzB8AXDFwzfjAuH06k48bQfHTq7s15abuYFdgtfMHzB8AXDFwxfMHwz7h1O
p+IgfO037Vdsd9ZLy828wG7hC4YvGL5g+ILhm3H9cDoV5+HruGC/ab9iu7Ne
Wm7mBXYLXzB8wfAFwzfzlsPpVB4DX8c9xwX7TfsV25310nIzL7Bb+ILhC4Zv
5mWH06k8Db6O6457jgv2m/YrtjvrpeVmXmC38AXDN/POw+lUHgpf5y2O6457
jgv2m/YrtjvrpeVmXmC38M28+nA6lWfD13mZ8xbHdcc9xwX7TfsV25310nIz
L7Bb+E6dI+D7dN7pvMx5i+O6457jgv2m/YrtznppuZnXoWvH9Z5Xe2zO/lH4
58f/3BT+7fF5227euA9XNR48jl8VHvnuCv/xOP9jN3/cpuuaDx7714WZD/7x
cf3/6eaPfOc1HzzKY1N4nLcvzH7QMh/MfDD78/S8m5oPZj6Y+WD2K+ffFC/m
g5kPZj6Y/QKzX2CvM9e3rvlg5qdc9pM83TJ+ah/+X17oJxaNnvl36zG/o0c5
ft7hfM6i+rF/2xPj074ua/05fi37W9X41GfODRu9f6/1Hjq7pYVv7sO8MPqc
45ey33Vh1uN993vAaYfX9T4w7wNn3n9dfP0823P6g5vC6Y/n8sdz+c/+ucjf
dg/meclrP7kunmf7p+V5YOKF35t+dNnZO7yRH/08H8zzwfaLPN/PSX/Q2lz/
Wv5vXfs95Xd5n/1g4q38/EF+6LbzL5lvb9Tf2vRDvd/O8+eueGT/pnsO2C3P
x9/xfPvl7N/IP24L89ycf1P+k+fbz2f/RnFkW5jng3mP/XPGXfzuvtYDTj3e
S+9av/UGzPoYz/py/rbGZ37RxtOf/mYvHi1/tN+D5+j/Zp1/pz/rHOeqA/T7
xvvSr8/kfxfKx+4KZ93hqtafcXAhHoeuP/34ssPp7w7yh8uSO/qHHNO/rasf
Pcy6wEb+alt2nXZ2V3LNOsJO5+xdjUcvGA9mfNrXXek748GMB5PPP52/tPND
6uNd4awb7HWu3nd6y/ORM3ICZ1xzHdL50KDxg/KFWRcnHeem9MBxxXqUetLr
jfXE/Vkv3Cge3nRxMOttm8k47Lg5pZfut54mXpVcWX/WSzaFmZ94VedE5mf9
YVOY+YlXda5kPpjxeZ7fFT7SeP7PL/NeFj7Sf/b3wrTj89bd7+N+v65+8Pi+
Tdc/7t+b6gd7HP1Tz51qR3t/37W8Z7TnDzUezDgw4/98bD9WP5j+nx7365vq
B492dPbF3i6+tK8KH1//7b+6caM5PK9+cM5vLeNoR/3995d594XZv/F1b6sf
nO9r80b92BaGJ5j9Ao/yeijMfoHHff9U+mN+ox/7qvC4vhc1Hkw/+gv+/fE/
fyuMPv+vfYKn29EOd4Xhx77BB4z8GU8/+wbO/dzXfHDqb4sv1i9anpf69FiY
ffB+g9FnMOPZ74wLTR7WQzD9qVfLwtg1mPEpl6X0ai19vpdebQrz3JTTpjD2
gPwznt/XeDDjUy9uJeeN7OVdZz/oE+PBGXd2JQ/rGxj9AKdfbfVqsPWC8dYv
MP2MZ13WT/rd5r3RecWzEbf8ZRx/pfxjUH3F9xatXunxY/9M9Y+Z6vzXqoO3
eiZ6nutt917PIs9p5948z7R7ItfRfA4F81zfI7nu5nsX5xGuwznvBfM832M4
j3D90PdbeZ5dl7+nP8+j6/Jf8OW8lOc96nHb0ts8p10pXx7kN57Lni3foewJ
f5b3AfPqJ56M3Xt913AvP3pffof1G9sPOC7yXt6X58AL+f3zbn/Aab8X9R5w
nt+b/yeesg5j4gLyzLhyX9hxgH5j+1Uw41gX+5jrvOnymezfdvMzv7yTfm/F
e9utE7+X9Z6WXyLXvPff1XOcH+Evea/9LZg8C5z3N83vogfIgXwKPwZmvWDe
D3ZcBrMPjsuZH627uDwVJ9k/MDxZD/6E/XD+wzk66yeP5adyXw5dXsR+sd6T
+DvI3hZlL+lPLqWHz1UPaPaFv6EfjN/BvyA//A/vB/M8MM8DIwdw1gcWnZ3y
e/qzZWGeB06/1DB6gpzBxE9j9h09y31cFs7427DtEz3JOkOr1+b3Cq/LHrP+
/KA4+VD2luf7nfKv9934PM/vys9nPeuT4tuj7POgelbLv6zXaQ+b8vesh7hB
vCWe5ncvvl++rP3CP+T9TPMnxNf0e9d6/1B5Ae/P7zSuyu79PuJRxreZ8rFr
fZd1LT/1svIW7CLvv2e1PvpzvbPu3iXz1fZdmOMl/ZnvzPV9wbzkx3wwdsJ+
8n7kB0Y/GO97JtfpkK/jXOKPnR3lPcUHnauWJadc910XN6fuZRjvusv4/HbP
kHWvVcUJxmc+vtb5afqexnms71l8b+a6ZdYRW93L906+58p6QaujMY79zPh0
JnvZlf1mPLwqf0R8yvPUufBl+TXG47eJX1nfvq7x9GcdfSi/Rz/PI17l9zLz
8nuOd+g7cSHj1bbsjfyCfteVmZ/xa1d6zH7R73s/53V5T9ff47kO5Dqyz/3o
u8/p9LsOTlykze+8NjWf/vRj7RwLhnfu44XOb6v6nfWib2Dkn+t/UfaR/u6u
MHrAuvg97WChuvR9hzN/fae4Nu/8ePJ6pbx3VW3mCyvlKa1eBc/8HvRN7b/X
jX9Keax1fn1b7818p93j571JO9f43IUfz/vmD6qTtXwqv4d8rXz9Vrh9Z5Tx
eS8/vNe+P+p8cqjx9Ge951H54V7njb30+FH5UDt/8T70jfwh/crL6qelH4z8
kCs489bb4pX3Umv5jXZvZZz1+Xe677jrzlMZV32/0e4zbIf5PVGrh+CfGZ9+
pdlJxo+3XZ4BD+Ja1hsvChOP4En8y3Pki+LF+LSj1o88s47fsM9fGU821Z/r
fVX88KOsz9j3VOwP7/e9iutqxsgl86Z77Z/7rxV3+J6A+Ph1vSf9cvs+a5xP
XJl3eSi8028RV9/IHlbKf97I37Y6j/NK4g98wPAZ5fVXfU/C93u70r+sBw+K
my/0ve+85JPn8fbdl+8pfO+b+tryy/xurdW9WH/mATv57buS3zh+XfLBXlnP
yHNZ8ki/1eIoeQzrzrr6fflb3s9++7uKxJf13LTXbelj+utZ+fPMD3c6T+3K
L2d97VX5HfxVfm+0rHyM/cm40r6LyrrgvuQ8FQecl/iewnUhMDyzPt2+02Q8
2PeiUzzBaZ8Pp98B2MMpLw==
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3Hncd0P5B/DzPUcihEKW7DvJliVLj12W7Etkp7JvJS22x1IJjzVlf+xr
doWyxROltCKUH5JQUSiF9Lve93zul/6Ye67vda6ZM+ecmWs+n2tm7vl3O2CL
/fuu65Z/d9cNle9RP7446rpnSr608mcrr0vdu+ri7PX7DyXPPGq276t0WMlz
VZqm5C9XPkulqUo+vPIPVpq25F9WnXNX/qFKn6uCP6nffyx56crnLZv3lPxA
ydNXPlel95TNDJV/sNLxlb6k7kofKNtZK71Lm8p+/pLnq7TAqLVl/krLlv5P
lc9W6ajSL1jp/SV/q+p8T107un7fUPJ7u9amxer3HPJKH6nrL6QNz5T+yErP
lXxM5YtWmr3kQ6rsNJV+7D1V/qvKX/QsJc9T+VKVlhi1tixTafu6vlz9/kjJ
3yibyfX7w/V728r/XLqFtTltX8Czls2jde2vJU9X+XFlu2SlR/rWxpUqHVu/
F/fsJR/qWSr9vK7fXPnipVtZqt8vVb5kpY+W/HLe/2tVbqlKH6r01UpLj1qb
P1bpw57Ddy/75Uv/t5L3rTovrt9fq99fr7RspeVLf1/p7x1a20+q/PKy+Uhd
e7pv919f3yj9+ys9UboJqds7maZ+TyzbhSodUdefqd+vlP6Cks+v9Fj9/l7l
Hy3dxyv9vewWqbRwpRUqvVq61Sp9otLqafsOlTaO7vAqO2ul31c9B1R+ZeUr
VblrKv9o5f8omxlKPr7k10o+smyeq9+vl3x7yRtU/slK+1T6VOpera7/s/L1
Kv2xb+3attJ2XbPf0Duv+taufAvfuuRVKm1U8o5p1yaV5qj6n6/yW5Z8Vcmr
lc2qlWYs3QmV/6v0O8V2U2Ot9B8r/b9LnlDym5VvU2neod17z0p3lLx95Xv5
Xmmve17nvVfZN0r+S9+e6bOVJpb9X+v3W9qZsfWVSvulnPs/X+VONM4rzVa2
61b+dulnKXkdz1npY1XP6pV2K/3apf9v5Z+utGrpVqm0c8n/6Fu7vqjflu6f
9bsftefz3fSL9Uo3GrW2rcsZlfyZyu4v+x9VWqPkUyp/X11bs66dXvJ/Srdr
2r53vtXheYb9fY+y26DSwSXfWOXWL3k9Y7jkk/ioSsdUPQtUeqV0G9fvd49a
Ozeq31OXfGjeyz55r1/y3Ut/kL4dnfttWPp3lf4LJf+r5I1K/nzJR1XdL9Tv
1ev3CalLuaF0F6hHvy6bt42H0l9T8ial+wSfVLpJ/Cr/WvLJfKkxWDb/rd+b
lnx8yX2lzUr+dpX/etf85cWlu6jSG2W3Of9a6Wulv6Jrdmd5xXX92MpPr/S1
kher9Fbfrh2ffnFO19p9YqV56topVc9W/HrJW1Q+XaVvVrnpKz+Zryl5iUon
lXx26lD+1Lq+daXTSr680rfSjm1G7f4XVbqk0hmVvlnp0uRnepa00bUHKt1a
6bZKV+Y53OfqtPXcSvNX206verev9F19nq/lZ0o+rfIZKp1R6VOVLjT2S79d
yRcYN6PWlhsqfS9t9c5uSju08buVLsu1q3J/974xz3Fx2nhF2jjeVrY/MW8M
rb0L1n2/Wfd7r+9d8s6VX+uZK9+l0nUlL1z6b5W8q35c5W6r3zuVvNuotfHu
Sj/MvbXxnrTd74+X/fqVTin53ly/udKP8gyeb0qlW/L7/ui0/cdp9+2VDql7
fqDSWnXPcyrtOWr37Up3tjGrD5f8bT6s0l6j1o5fVNq09J+u33eU/Mu0T3u/
nHncvLz3qLXjN5V+leva+3Dap72PJNfGs/iGSneW/Gh0+sVvk2v7ZO+r0s9L
3qLeweaV9tcPjJVKPyv94tW280u3n7E6au39v0oXGsej1hZYBq6Adc4red9K
Pyn5O6XYo+TdKz2VZ/V8cBNsNLO6lB01HGX8GPf801OjhmPgKDgC3jBnwzxw
BwwEH8FDc3YNX8FRH+gaboGJYCP4CnaCSWAgWAamgdFgtlm7hl9go/lKnrrK
btU3PAMTzd+1Z4ORzMOwx9LBZfDQK6M2R5tzzb0w1UJdw0jwzhJdw0Xw06Jd
w0OLpexZda9vV/pG3/AR/AeHwCwwxrxdwzSwg/vCbM93DQvt2TfcCVPCVDCL
Z9Ne9vAD/ANjwRP/GDWMBM/ANTAVfAJf/aVruAs+goXgCdgKllqxa3gJntLu
lYORVukallo53wV2gpFWLfn1UcNBy+be5i5zGCy0zKjNUycEV6ycZ3UdRoGV
JqT9cBRMuFbJ+wZr/b1r2AdWgidgIlgK3oCF4CltOrnkSfpz37AljAZzwFlw
ERxyQPDOa7k37AEbmUs3SbvNrSuOGsbQxk1ix0fyh9/pGn7aIvUfGOwEA2kf
7AFPrBbctHXXMBRsBJ/APtulPTAVrPTxtAM+gatODOYxP7o/3AF/wERwEPwA
x8FrW6Z9O6a8eRWO2rVrmAo+gkMOCl6CeSYE48Ak8A4MBFfATp9N+2GnPfM8
BwcvvZn2mff3zj3N8+PYat9ceyw4UL+Cd/bLM5xW8qmVPt83LLTGqGGS04OX
DuwadoKhYIkvBFPBV/ARzAR7rB0sBEusG4x0SNdwCGxzVNewEzz1hbQVHsKX
vhjMA79p61dyTRv5If4IHiLvn2c6LHYn9Q37wTpwFKw0Ud8LJoE94By46Ziu
YSj4B57YMNjpuK7hKJjqqyVPCu6CjbQPxvh67gcjjOPQb+QajAMXnZx2nRg7
+AgmgjHgpBPzPDC0d68/w1SwkrlvHE9ckvvBHfAHvAMXuQ5DwUOn5d5nxQ5+
gj2OTbvOzrVDg4fhXXjnnP9p3zmxg4XgI5jkL6OGl+Cki4KzxrBO5ujzuzZf
w1YXpH3wBZzh/jAFbHFGnsNvmAp+ujBtvSJl3BvWgDn+Omr4B+Y5NfgNDjsl
eBJuPCu2ysNJsMm5eY6rU9eJ1bYTKu3TN7wEW8EqcBTMdH3uDT+M4yP5LWk3
PHJD7nFr7DzDTbk2jpNcgxnM7z/tGl7acdRwCNx0W9rz8qjhINjp9OAo+Mm7
uTn1wlRwFOwBU8FQd6ZdsMSU3BveuCdl7s3vG6K7O229P2XcH76AM94eNcwD
3+w1NJwGl50W/Alf3hpb5eEF+Ah+gBvUc3vekbbc1zVsA0/BJxcFO8zcvYOB
xjGR/DdpI9zxi9zj0dh5hl/l2jg2cu2MYDYYbmLfMA38A9f8Ns92dHARvLR5
8NITxkvp9xk1vLbd0LAU/nJMuAy8tXnfcI34DAz1VNrwafyo0kyj1lZ6WOuS
UbOHVeYcNdwyW54dTpmpa1gOPnuya/gTvoTrnq58jpT5fLXlwWCXLc1ZkW/O
eDH+tw72ma/ST0term+YZnrjdGiY5nhzcbDItKV7d/DZjJWv0DcM8YWSf9E3
/a/7pld2O1yjb3EbdcMh8NIMQ6sTFtkb7ogMo7CBT35rvk7ZL5f947nXg8Zj
5vGvlP53wSjvG1o95v7lSn4y8qdSDywxc+lnGpr9fqVbJfo/mJP6Fm/Z35w1
NHm2odmYa2cpeYe+4Yln6/5Xpg3mcjoxjT+M2jfzDn8KL4xa2V2q3Bp9840/
4ycyl/8xz0J+tq6v3jcsMefQypq/Zy/5A0PDEw/xK9HvBVNUmtu3r3RD5ved
Ug95Z/N+3+buP6cN5D9Fr84PwthDwwQvlW7N4IO/m3/T5j+lfnPxLyu/KfIZ
Q+NAY3GHlDU3z1P6uYc2N78OD2Q+fq7SdbHfMe/c8x4Np6Xs/CXPNzT718zX
meN3HBquXa7Mrhg1Gb79daXvZj5euGwWGjK/iodk3l1waPWYj3fP/Iv7H1f6
N6N/sdLNmUc/k7GJqyw6tPrNnb+p9L3YPFzptugXH1q95s7PVb5W3/DNbnl2
bfjQ0Mqa//7MD2bue4k/jt8+s2y2jP6JSvdEbz5WN+7/+8qnxG++f9S4lVd3
WP3ZuG/1/y1l2Sw1tPg1P8Nvsn9fcuXxOL/xOtxT3BmHEqPmh/Ayvgs3Jc9i
XIza76lig1/xVxdHP0t8Ef3UJX9p1Op3r2fj12aNzF+Jpf8per5u6mrvV0aN
76hvtrThwzBq+vw8o8YBxdjvL90yfeLmuY4bfjB2nmXP6NV/xKjxQ9xQLmYu
Tu35F8z7Oa9v5XHJ9fTJvn2buVNmnvhNXHL+vMMF8o5/m286Q66pc4G8n4Xy
ni8bNb5Hf37f7ieefvmo8Ut+8pPR4ZLjnJP+3KFxTBwNn8Ihl47fxKH4Ue9j
sbSfn2eDY2oPnjhf/NUi+RZLR4+L7VD1X9S39l1R8m/65qd/PGpjz7gjL5V7
vZp201/YN78vns9f4oni0v9MWTzxJ6PmP8lXjVqb8allccahldmp8iv6xiGn
pD3kq/nvvo2z5Yfm63FFWBdHwo9WKN1HwuUeSD1kflqsnK9ecWh2OOFlfZsn
1LPS0Hw3XnfNqHFWfO9rfftmvt97+9Zu167q23ygnmn7Nn/7VldWPf/Xt3nG
nGIdAL/+Tt98n/q1Ubvh83/lfngfzL5qnuXFvvlM+mv75t9xudWGNo/wM9f3
zddPyLPhmRtmfvFONusal6MXE//o0OYM9isPbV5Rp7l3qfSx9/fNX4st39M1
jHF35WuY60eNm4mH8/+424ShzU3426x9mzPYsL0x+jWHNn/gCTf1LYaGj/GX
eBfOtQ4OODQ9h8FP4lY39G0eVdb1tYZW5iDccWi8bN2h3QsP/HfZbtA3buU3
zjaxqnwhshj4JUO7Rn/LqNVxVNfmB7Fvc8S/R+2aNrgnfoVbyfEunOvFyEd0
jfN8IvqF6v53jhoO/0rag1/w5WLQ/PkR8Sv4zuF98+N40dx9myfIGwxtrsGF
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
regXyjO5lzaaL82bC6ePTZuyeIe4Kg61V2TrQbCYOvFC/ALO069gMbL44fFp
M6yEC8yQ9vu+ZOP61ZRXFkaFn3wXud/6izkCxjKnqJv9cfkWsPKd8QPKjOGp
vtmbU3znmVLnWbH37cS4YItdMk+RxdOMfViHH+AnxLP4GfkskcWjYK89MpfR
m5vwZnEt3BlPgavMO2IoYinGON+lLP+zfuz5Fv6E/VSpz/34KtxHe4wdud/G
ijkXXhTzx+NgL/OXuYw8bcbTnCnLVlyJr8JTYC9j6o38Jm+ZdvJROBF+ZXzx
bcrye8qxN+bMiX6b18Th7ZeaI/OjsvwtrIJLGBPmKbh3HPuQvxMfCHvxV/gR
jGVeU4d2GNPw1aLpq/fk94z5br6lWKXr9Maysa8eY/O5fG/fmm9YIM8Fhy+Y
Nvwn5ZXV3sUzBrV7yYzrKXke8r190z/eNS6EE8FKOA8/IyYxpW+86ff8TN94
2a+7Nu6XSP14Gr24jHrY828PpE4+wbv/YN7/lnnP1mqspdrXZZ+Y+dI6K/8s
hrBMvoW13WVj8+fYkLeJHp8ynpeP3jqrNVz706zt2t9mb9uL0ZPtfVo94+uh
vu3hV3762Nu3Z03Xmqx1CfskrMOu0LU5wR4y84K1XfvM7DGbObL7Xh57MfOH
+7b/Xl32hlmTXadra6P2WtkP9lTf9rK7Zk1x1eitq7KxF8v+MPp1uzZmxEzF
S6/Ls7CxPmpt1H4ta5/WTO2Vsn46IbI10wmxsVa6ZvT2SrHnEzhsenur7I1Z
J37gb33bey3mbc107ZR9PffVBj7IdfFw8VBl7XeyTmrPk/1O80RWvzVTe57s
37JWun5s3hXZPijrqR+PbF11vchTR29vlb3TYtTHdG1vEvnorq2z+172+1kz
tZ/JXiZrrPYz2ctkrXPD1Llw9Oqcamh7jr3r7w5tD5/9hTiOfS34jngpGccR
q7RPBSeic828SSfOy2+YNzeLvTUbazfW8Z2jsc9huq6dzbH3Ap6k2zLjZenI
9kKY9zdJG+BRe0HhYftCrZlZL7Nf0zrcIl0bK8bM8xlH26ZvW1fcJuPIWZWx
dbuu7Q+yFmYPg778qfR/sTv1z9e1+38ibVBuu9zLfobt+3fW9MjiDPNmXIsN
itHtkO9izrduDSfgUNaDxvvyzulX+NeOGR/66S7pq/r+ThnLOBS9vm+9TP1i
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
+tRrrlHH7KmHb50tevWpxxqEfI7UOU2+qe+vv+v3+rB9qrgxXuxMgzOWe2Zc
zBMbMTyyceo6O+PFfl2/ncc8Nnpl+RPnGQ7JGBf74xPoFojeOTVn8M7NfedP
nfwAG2NZroyxLj7DH/FF1g6ceZjYtRieWJ7rxqczhKfEd9HzOXzYQpFdV9a6
w0lpw4nxGc4W8htiP85L8Bt0ZDEh+WLR2wfj7OhOqWPJPIv1Duco1C2WIwYk
huM6vZiA2I8zD1yGPfrOS9uz/9nYixeN7TEf2v94wU+WS39eOtfoxTvFqZfO
PZfMfZVbJn3SPL5c+sbYPvTIY+eXh1b33UP7nyb2evu/K/acrxg9WSxoTBfZ
Nbb2hIv30OMg4j3iRON7KMj4iPe9SL6X/RTiR7t3bX+E2BAuIJ5Ej9eI8dDj
I/vlPYszi1nBHPq8/dTO5IrVGD9k8689587u7hzdx2Jj7Wy16CdEr5xznM5w
ir3QuWaNzHrZhNjYuyHeJNYktkS25uU+6hTLsndDXAnfEVsi41ZiTsYXTiQZ
b7jVPUOTjTuy/yFi77a9IuumzfiOOJEY0flpq3Yqz/bwvJtV837ErpS1Z+qU
2PNpR6Qe62bG8NwZaxvk2dmKV9vHI3ZkXWzj3Muav30AOIhk3zU+JfbAZvtw
L3pcCWezX9leZetuG6R+/wfD3mjXfzi0/8XA7ofRW9OXbxpZfRulTmv+9Lje
dUPbl+x8I+4j/rVf9M49irfLt4i8dfTOQk6MPa5Et3WeV5xH7Mz+Xnbqth/Y
u9H+rWJj3/DjqXOblFVm6+GdctsO7+wlJtvjZD/AJyPbb2xPMF7m+nax3z7y
+NlM+4zFgvC47aO3lmzv65Lh3PbHrtk1nX2xYhr+7xM9Xm4vj7jV5K7FUXaI
jX2G7NXHdufUYx+Q+JrYmtiYGJl9FvYoibXt0rW4Gtl6tzgcezEQ+yDUA7/b
iyTWdnTXYmBiauIGYm/04gDibeJu1ojtV2Ij5mZP05i+azFg+3XEgcXbPIv1
XDE2cbfTw7Nxb3zcHiKxNnE2cTUyjm8/kb2tuLN8r8hyv3FtPAwfw5vE3sTp
zs772TfPZW+O+4r12XPEBmf3v7CUxePk+6eeSZFfif/kW/nJsf8lMLS9K+KS
B2a8j+XRi+2w52t9A3q2xsjBGQtiFAdnTNmX5XuJZ+Li1pmmi4y3499bRD/O
xennDDY4JDI9Ge7Df+E8GA/Pts4Kj8FUh0aGj3C/VWNDD6vCdcq+mHnK+hys
hJtaf8KL4Tdrq+Mcl4yffjI2ePTvUnbVyO4Fl+Ed1hoPyRyHh8Nf+OgR//Mt
jsj7xw3hSBgShmI/jqPoYTOxaHthcTG8jLxFcMgxuRfsD5/BZuumDTgTjEYP
u4pP7psxqJ3KwjXiiNZgxBLHeMnQsMRGkfEPWAiWgpdgja/FZmw9c2hYSFl6
mOUj+S5wnVi3Pak4CD5CPqprPMC66TFd4z7kzcKf1InviJ9Yo4Lbnacji404
I6bNuL+1whOjFzshW3MSmz0hemtKk/LO5SenrDNx1n5w1X1i7/viiJ4XbjRW
JsXefgn25laxB/Wom8/kS/lD+yVOTZ14MD7MZzij6n80mDOtJZ2RMSU/PfL6
sTk5OIEefqBT3l44/Wly+oD4tnULaxbm0TNTv7MP9GJl1ivEx8XG1ed+fNf5
0bORnxWZzxk7J9m1ONw5/zNmyXik5BqOxva8jB1xIP93ZoOMHfEgOnE19X8j
vvO0vB/jTtlHUu6CjLUn8ptsP8a5qf/5PDvuAOvBh877wRaXpF/pP2IKuLfk
f2Tg33A4G3jvrej1MbpLU1bdF+bdGhuXpX/qt2zUgWvR4wLyy2OjvotTZx89
W33yivRD/eHqPLv+qx+LRdlv6VngWP3qyvQ3fY392NnooeExZ+TsAYA3YAlj
Qv3if/yD9ntP9mSyh+VgGthm/NwVGZ55Jtj1leAEdf4sWAV2ofN/osQt+Vt9
St8SH3UG2DV8XcxM7Ix/uzFlcAec9MbI/j/SLf9jc1PqXDzXFks9ZLFVfp6N
OvDTW6LXZvei4/fEsHBHcTX/20g8Uu43v/rHXKOX3xb9R2O3cvwwPVvxMP9j
CH/Uj29PWedz/H+f7aJjx9/KfxD5Lymv7LV5h76RmJay/neh/5vk/yXhKb75
3cM7XIasX+OGd8YeHofFfX86MSx+6ZrofV/j6/qMX9/2h8M72JXs+1u78n+j
nFOeEHmN+Lq7ck+6+6KfElm5B9Jm+jXyDOrYJLJnYavM+NrLA7EXP/X/Vvyv
FfFU/4eFDvabkvrvyLN5LvdRFsb4cezHcHvqIdOpC8b4f2kZV9Y=
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1:eJwUWgk0lF8flqUQUiGVtAlJKqJCnmhXSSgVSYsWW1KWEKXsS0j5t5AkZCkV
JVtmxhj7jBn7bjCLmZKUlOJ7v3Oc47ju3LnvM8/vWc6ZlWevWDmJioiI1ImJ
iBA/Ii+j1opc8BPCxmnWYMCbNsjIHh+n+VZh1HM4K5ssQJHvmovpo7VoVThg
Z5pPhrDaOdM0WQDp/CtldxyqUP+st4sySMLztQUr/mYIoF3wdlZULA0t7VZ6
Y8pkdOdbc98LBFjdEzml+J2O5W59pLg4CiKV3SpWpguxe17f8cKGDjjmPCkN
OkSDCrlBWaNTCPU3LnJfdg1gh0H1fo/sWmxOVt3v1CLE46g2050JbGjN1F42
yqrDn4Xb9De3C9G+eqeyf8MApl5Rz1xaUIcMD7b6SDexbhlw/fydfmQpBZ1V
WlQL/UNv+bx+IQykJqIHW3uhQFM4NmZag6nKBK3CQSG+nJVFjUUPes7czM/N
rQaXlm6qyBSivt7/ZvGqbjA+nln8cUs1jotPlytQhBiqYhcxTndBc30gBQIa
HHXnnDhQLARz9rNrmV86cWVrkLt3OQ1rJU7K2K0QQiG/j/JkGQuJmVeKWHmV
KJc6din2tQDf65yPrvWvRnRckqaNGRmxh6MNLB8KkKsUyw4LoUJLLmcBo4wE
0fP209vTBdDdlKTbvJWGwySFreNSZMz9uzNE/bcA/vvdU7TrGCjVouUs6KTg
s7TLD1Xief0OueV57u6DUdfs8TmuNXjdoxtscEOAL0dfr89LHEZASOHHP7ca
wZSwmpxaMYLIgVO9OnEcRL8IXFmsy8Bw1hP2xrUChD8pI6nRh+FiuP7Z47FG
tKu+kSjZL8SRhK3Zdl8G4Xd+e8KBgXpoq8f4VrYJcbTVu0BeOIA8ZZG0t2vr
YP33xZ11vUJs/eE9231dP1aLTvosa67Bf1ticzTYQoSr5FPPafaiRar2wp2Z
arw4dffk6j4hzq4WTTte3w292GP/TP2qsUzy7C7/eiGGo+0vjXd0Ibb5x8+1
S6vBeKT7kNkngNy6kX/0wEbImQQ5px6mIDdb5IvZYwF4LbU7R0Sq8Nj+U915
FgmlrCNVjCgBPnzQWuu1vRLLWxYscr9LQupmjQSJRwK4nwlz0e6kYqCmVyGl
noTO5/S7/gSf9xdM9OgJ6Ng56BJtf4/g8760Ua0uIahdha8a/vXjjbt93v7r
tSjcukpH4igXP4ICFssmcjG7PnHvrQAmXv/QHF3izcabft7W3EwuEk09TtJe
teOk4O/Z9PeDmCu/oruqjotNglz1zrRWFJ8w9dlVw4XqnKHTW3y5mP4zb4NQ
mYlpHdnj6WsE8DOwSyhtGsbGCB+rRxONENqc1H8eIURBnnJgsO0gbpYcedBy
vB5e1ruV44j5ytnhkL1BcwBq3v4JsYm1+LchRXOCwPloZ/Ffml0fvGyuXAu/
XoO7596xZIm5UOiLpp3P7sG+sJlT0fRqJLwTFW0tEMBoo+WFy6jBIo5VfOZ5
MixU5XnaBJ577YTi19dWIkRG0v7rLRJW+Y7/FxYsQNlLvySzpRTIWLbMzT1C
AkVaPG9ZtABm9SVX2/dUwuEV/eqCUBIKXn86HF0rgEKWouH4cB2m+Rnax7rI
+CZ1O0+MuOfGy2PLQ/v7oLnQ5q98Zg3Uh91CjJOHcMDPsXkBgdPTxpqMupAW
1Af8IN9zb8eqTJ5IxZVhKB7bHdKcOgjhH+YizdhW2F/W5qlkDsHr6eaW1UuH
8Vtp24zq2y5IrWNKnb7JQXLUkvAInQGcztTzzXMexJzoGZY/8blUu7DMM2Za
USidfXatLB+kZ5IHX2lx4fCht9RXrAmhi01FNAcFYG4Il+L2DGF5wnnPE6UN
6A46z3hJ6Jj+PdEXj26xYVp1rar6cR3+PgqKpBB6teDZ9N+fMf2YWlhxaNXy
Whw9dOPELoK3ksqLyUqzqvD569R9V4K30b7z/+y+LQCfdOXKzDgZoY/KxRrN
SfiUFDaP5y9AesIbhz0HyVi8Y92Ez3oS3n1RdBYj8H+wa9mr5XMpmHtuJrjD
goTlb559Nc8m1g1v/hv5ScMtPc3fEuvIsCnW3dzySojer+mmtEWdYC4+8irW
mYa2vVlv1kUMQ8l/qse2iouTue/V2U7NKLbe7Wau1wz/5TtVHVYPYjPv/fEj
q7jIjbi/XOUpA9Mfuuto5d1wjTZZFUHnw3MHV2XFJANb8PGxfW0veA/2qZi8
5+PqUYV+xapmiFzvXlR9exDFsj7xnBccVEeU7Fm8sxc596fm9Qk4sAoZOZ96
sA855qS2qfZhGC5ScnGhclE6VpkZIN6ME1sDT+26PQK18Cv0lv0czC10fDDW
Q8fr49tsGg8Lsd796UmVvkEsKLRTsWquh7vpxjyLSAHU9j/9YyVXiTcDi5M3
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
/wcYz9IZ
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707720554587*^9},
 CellLabel->
  "Out[1193]=",ExpressionUUID->"1fc51a78-c37c-4a50-b415-1aa8e98082e3"],

Cell[BoxData["\<\"------------------------8/32-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.7657077205754766`*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"53a6e763-8d52-457b-8af8-f9c290b619e6"],

Cell[BoxData["0.2763146179316979`"], "Output",
 CellChangeTimes->{3.7657077206379614`*^9},
 CellLabel->
  "Out[1197]=",ExpressionUUID->"d773eeb5-9729-401f-915a-a681f0ae9cad"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     RowBox[{"epoch", " ", "number"}], TraditionalForm], 
    FormBox["\"average square error\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 500.}, {0, 0.09574747859725952}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707720700448*^9},
 CellLabel->
  "Out[1198]=",ExpressionUUID->"529521a8-ab8f-43ff-afa9-c5f8871d0af5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1m0tuW8kVhoUgG0nS06xBszymWUKAjPLaSqIlaOoZkXiiSXBhCDCIAGzK
YUeWbImiaVlWQnEF6bR5/Z3C/5WuYKD833qeOs86VfzJb//8m9/96Ojo6Oc/
Pjr6Uvrv5Jtf//Bvdpx4KHz18o8//Jurfln4UH21Kvx2/FD4f99/+bsp/NdD
/7vCP/sCTz4U/vuh+8fCvzxM+FD48jD+Y+HfHxb438Lj31640fl8ORSG3qxf
FoZeMPSCoRcMvWDoBUMvGHrB0AuG3uTbXrjx8Xk6W5n0DqJ3EL2D6B1E7yB6
B9E7iN5B9A6idxC9g+jt5fR5PjY6XUIvGHrB0AuGXjD0gqEXDL1g6AVDLxh6
U+/2wk0Pn5fToaMr61uZ/F2Kv0vxdyn+LsXfpfi7FH+X4u9S/F2Kv72deV4P
h45vpgvsEnrB0AuGXjD0gqEXDL1g6AVDb9rNvXCzo8/bmaGTS/PNdIFdQi8Y
esHQC4ZeMPSCoRcMvekX9sdTfuJ5Ozp0eme5NN9MF9gl9IKhFwy9YOgFQy8Y
etPv7Y+n/CD02m7arljvLJfmm+kCu4ReMPSCoRcMvWDoTb++P57y89Brv2C7
abtivbNcmm+mC+wSesHQC4ZeMPRm3LI/nopjoNd+z37BdtN2xXpnuTTfTBfY
JfSCoRcMvRmX7Y+n4jTotV+337NfsN20XbHeWS7NN9MFdgm9YOjNuHN/PBWH
Qq/jFvt1+z37BdtN2xXrneXSfDNdYJfQm3H1/ngqzoZex2WOW+zX7ffsF2w3
bVesd5ZL8810gV1C79Q5AnqfjzsdlzlusV+337NfsN20XbHeWS7NN9O178px
vadVjss7Lzy2WxQ+FCdvCo/0n1VJfzD9wfQH/+ow0GXhcT/uC//l0OFzYa/T
8zI+mPHBfzh0eFeY8cE/PfT/T+Gx3E3ui0vmAzNf1q+7fqzbJf3B9AeP8rRR
+203Dut6vlwXZjww44HhD5j9A7N/YNOR476r+cDMl3zadf1Zd35fa/1rrX89
Me92ch0exyX74fZ8d8n4uU/rbt9MN5j2Wb8tnPLJufis0/PUT86T/XfsW/Zf
TtiHWfGb/tDzvP2YSV/cflb00x+c9mNd9WDq4Sv1YOrZvxx/29kj6hPPSv6p
Tzyb4Etvd/ErlLar+X3e2b20T8vO/ma7VWePGT/3f5B8nRf9tp+0R44ZH0w9
+5Hr34n+WWdv08+SDzjXuFN+Z97tU8rtstsfcJ6jm39I+73v/IX1YsqPHsVf
7yez3UL+e1H9k4/Lzu7bX0Bn8ndV/KV98ntV/KY+/WfLq9hfoLe0tx183s41
O+h8RtrpVhIvpd/dT9pRxrV/8LnRdj39+H7Sj2a+ZdP5KcazP/J5lu/Ef1N+
KPe3+dH0QzfdvOA8V7bxpvy++Qp9rs/zzaZrTz3r9rxgl4472G/7U58vLHd5
Htl0/pl61kc96wOzrrR7p7IL2K+d4tWd9Mhyv5O/bOcH6i33qe+7Tm5Tv3fS
513V0576tHu7rkw/N5vwd87jnsrfz+TfZ/LnM/nv2cQ+Nz+RdnhQ/0H+3ee8
M5Vz+Z25/N+81gNO+pfy7y0vn3571dlj5AJ+WO59zky7dNXZQ+eR0t7d1L5n
HmrT2SXOo3zPPOS98jg9HcwHpj+YecCM5/bsA+3BtLd+sk+ZV90pD7dTnmrX
6UHmpU+Vtz2tevieed4z5UHPlCc8Ux7tTOs71/rOlWc6Vx7mXPHfUvmChezT
Sn655WFpx3rArMfxiPN6fGe9tts+t6ZffNfJqfNIPtex744bkPv0v/ddvf2k
9Sbzl5tOL6wHbm9/mPnA+64+/dt94cOyv/n2q7y8OD4s8+W/Co/914VpP/L/
H9UePOrZx8KjHn0q/ItDf/j1uvpTjuvbFGY8MOMZj/x6e/y3Q8XnwswHphz5
8b7mAzMfdLsd87mdv4OnStYJZp3MN+730/GfDv/5Z+3/WF581ceTwtTTflSf
l8UvMPXwg/7Us69g6ml/2Ibvv6t6MPWjfN5X/bg/D9144/Jf1XxgxgPDLzDj
gUe+PBYe939XmH3KfbyokvGYl3LU5+saD0w5DntbGDkAj/TeFT/B9Bvlf1vy
Amb/wLTnOxi54Xvu+13tN+NYHtiflKeh6E05OToCZ1xwV+v3+pLvd4VpB4YO
t4evtAfT3vXoT+rhrvhPCZ/YD/QaDD0pr0/VH3llv5iP/USvwawr9/tF2T/r
LfNQj16BXbI+Y4+Xdntf9dBj+adk/cg146OXYOr5DmY+16dcXxWGH1m/0bnw
Y6dfyDl+HZx+d6v49L7To7T3j1rXo+zuU/UHu0ROxvJU8bzzWL73Pq39QE7y
3vCs5C3lhPuSufKh7V0T8Vued5Y6F7T7CurzPmqh89hS57HWfty2NxVXgTNf
vVIeqr1TYB0ZZ/V5lOR3u59wveM936P6PiHfT2y6dxJ53lkX3xjH9+15ntkU
H6nPc9qmi8uxy/Zzyddmt20HwPRPf/G6cL4jOiv9pR5+IVfYDcZJ+RjkP191
eVjWm3HMqtrRn/q0H29KX/Fr2Ilc17Yweu965rEfznclTS9z/7kvOZG9eCF/
dFrrB7O/6a/e1biZn4H/t9WedVEP/TneVuNtVf9Q9gQM/7CD1KddHIpO+zvk
dkrOLMfIg+WUeY0Zn++MD6bE31Gf8ex5+Sv706TnSXb7RHJ8oTj6rsPINfpv
+ct1tvw735ET+oHhh+NX6sHIHf3tR30OMc48+Nuye5k/sh1c1/iOl2mHfwen
X+/Pacg/2CX6bZxx51px223hpOOx5s+47rbD7DP9c9/vtY8PkrNb6dFt6Qny
k3rV3gmyX9Snfs9qHvSf9fj8Zr+AvYUO9AOMvuJfKNEHMPRaXo3z3d517Tv7
gTzk+aDJB/zDr4NTX/fKlz3Vd7DtOvxkP5kXnO/0Tkvu4AeY9szHPMgl9jTX
7XdUZyV38A9sewx/0u6/7vLejPN8nmBefKc+7eS89s3zWS58Hs84ZVnYckQ9
GH+HHcvz3Kr2m/o8P7T7SOozDrsujDyyvxkXPRXGPmceYNXZucwnfOiw5Rw9
z/irvecFk9/LuPRe56X+/JR6dCO7+VlxczvHZ16y3ePm+8r31S/zsi0vn/nP
Vvp73k8+Vv+M2x+qPvOo7b0ifKN/5oEfyq7l/cFO+cx9ZzdSX/pzft63nRdG
D+FvnvPX1T7v887lt1/rPm6h93Jz3c8t9H5urjjqjeKcdv9kfeY76+c76wNn
fLrQe8ZF+Uva893v5tCrqXdjWb9W/LWqdfLdv3vIc99b8WXqXdlV6WvGWx87
nHFMfy/ue2i/A8t3+29rH/N9w1rrafdkvnfIe+1P1S/v29q6p+758t5kq/in
xXXYUey44/H0L+uST+xi+o95yav9SuatLqRvS8VTFzofLQrTPuOrC32/rO/p
j26qnvVTDz9Zf74vXZXdon2uq+VdMs9zoXzbnfTiTufwPg8DZl7Wne9Y1srP
rGv8bL+t71N5mXzXct3Fsdht5G+k+6S7p008q/0bp3mpsp3f0u69Kpx247zs
Et/Zf/C4buLS777S1XC+H1jqPHCh93JLnQ/IZ0y/C8FPJd/elByyzryXWBXO
34O817vy95Lntfx7s4t53mt5u4zzN53dzHzcRvZsW3KR58iG8/6/5QH9niDv
ba+7/G/awZvC+V7gU+0DcWK+i2i/z8h7z3YeTP/czoPsO3qEPLPOEQ8lz2kH
X5UdBFOf8dS7mi/34arjd56vPopf7R4n30+0ex32h/o8Xz/U/lAPzjzAZenT
SNe/9V77SnH0dWen2E/skf0w8xHH5bnzlfj+Wnxv9zLYiYz/LkovfL5BX5nP
eko9/Z138XnFeQrLNfQ7L5N27LLmzXw767gUf9bST/wB+VLbi5ZXTT/LuWfb
xYHsY8aBvGdt8azlIM8VlvsPiq83yiOuS99YL/X5+5pF7S/8zd/bLIo/mb/e
KP6+6/rbzrCOfP+ynshDfVYc0O5ZmT/34a74ONK9Kn4jHzl+42/Gyc0u+547
/f9N8Xuk+9viJ+v1ORI+sh7Hw9Dzf9y6ABE=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3AX4LkX1B/B9372UlHTDvdQlJaUEabhSUoIFEgKClDRII4g0giDSnSIo
ICAtDVIGKflXFJHu0P/53Pn+Hnyed545O3tmdnbfmTnf852zO2arXTbcedh1
3esTdV1f+TV1cMmg614sea+SRw9a+dklz1Py/5V8Q8nXV5qvjueu9FKVjao0
puSpKh9d6fKq9HgdL1Rp39JdtPLPVfl0Vb54yZOWfFnlf6t8wkpLlTx55bNW
uqJ0pqh8tkpPVPkXKk1S8obVzrIlL1PpS5X+XmVTV3qwyh+otF6Vjal85cr/
WeXnlrxCyS+XPHvJK5b8j5K/WvJTJS9S6fySz6v0SpUvWceTVT5LpfWr7Ok6
XqzS3SXfVWntkmepvq05aH37a+X/iv4P6/yr6f8GJT9T55aodE2lr1Savcp/
VunwSkdov8q+XGnOkn9dbc5XdTaq4wUq37jyN6r8rSr/VqU3S/5m5WM9p0pT
1cP+fKVNq+zZ0l2t0vxV/rkqG1tlv6vjy6qdb+tDlW9S8gslv13yH0t+rNIm
dbxx5c9VvrrnVvVGV/pqyXNVflCd26Dkr1X+fOVvVd0nK1+40gwlH1Ll73tm
ld4r/WMqbVnp/Urfq/RhlW9X+dKVr1HpxJKXqXxNY6D6OW2lzapshsqnr/Sd
klesNjes9leqdFjJH5TuFyt9w7OqfN1K3yp5xcrXq/SS/hkLJS9Q9b9T8kcl
31T5x5WvUmmzamezOt600hUlb1H5qv6Dkj+pfLVKPy7508pXr/SPOr91pXEl
L11t7mLcGkOV/pv+/67K1/afVNrG/1v51yv9vMrX0t9K3660Tvr8UZWfUmnH
SoO61y3qettVvc1zH1+t9EGdO7nSDpU2Sz3nfqBO6W5Y8vFVb9KStyn5qJKH
/sOSv1A6x9bxqDr+vmeU6++YXHv/qnMTDlo/b6M3aP1/tfKJBq3Pr1Q7T1Q7
R1faKfX08ZMqP6vS7pW2qXO3m4+Vzqjj0z13/1PlO1XZxJVeqTSBZ17lO1e+
lfvwjKru1+v43ZKfM05K3rbkYyrtX+kA/2npfLfSruZaPauZK+1TultV2RtV
tsOg6bo3fdyv0g5du+8fJt8xbTm/c6XfV53PV9qj5AuqrfMr7WZ8Vpu7WXcq
/d6aM2j9nKuueW4dn1NpVMnbl94e1oI6PrHk7UveUyrdH1X6e8n/yTg/Kn3S
l720V2mfkn9Sad+cOzb9O7DS0dF1T7PVtWattF9d50uV9qm6e1c6qG/rxsnu
z1pUZVNXOrnkfSs/pMqXK53f1PEOlZaqdKe12Jit8oMr7Tdo88U8MEY3H7R5
ZYyelv7p+y+S69cZ+W/0d6Lq147V7v5V5/Scd+4S4z5tMAKH17WmtUaX7gGV
T1fpnkrTVzqpVOYpnUtK5+JKF+SerIsXJj+l0v117keedckXVzo117g019HH
63NtZQ+X7kOVziz5spzXx8uTu49D6/rnVP6rSiuV7iF1fLBnO2h9ON9aUH0+
rI4PrPTbXNs1rulaX/XxR4Om++tKv0k953atuvfVuRkrXVfHF6W+fh+Z53tD
+quP95fe4dakkt+o/qxR6YE6frDSjytd6b6rzZ8MWp//UPnRla4qeVyVP1Ty
MZXuS7s3Vjq+jo+r9DtjPv3T97sqXdu1fh07aH2/vdI9XbtPz/Le5Nq643/u
717rfaWzS/5BXffEkmeq9Hjqq3dalZ9UZbeU/EjlP6t0a8lrV/mjJZ9S6dRB
u+YjlR7N9e9Ivy/Lf/VW6T9cejNX+nP6fXelvyR3vcdSz/2dXnq/yDM4w3pR
6X7PfNDq/qnSWSXPWumBkt+r9v9Y8mzGQqU/VNkz/sNB69dzXbP57PZ8Ja9b
+n8u+TzjoeTrKs1Z8vP/cx9/qeOLBq1fcBO8BAN9OGz4B3aBc2Cl6ap85mHD
THDUrMFUMBCsBUfBM7AV3DS9OdU3LAFnfDxseAiWgqPglZm7hoNGd+26cBG8
M6ZrOAoegatgszkq/3zX8BP8AmN9Omz4DCabI3gJRoKPYB+YAz5i9+cpec7g
KPhq7mAt2Al+g4PgJzgBtpq3a/MZ3vmx/3zYMBOcNFmtA5NWmrD6eFWlb9S5
dQcNa8Apy3UNa8FOC3UNL8EFi5nDVX5P8NjVJf8h2O/IvuGH17uGi+AamANO
gpvcC2wFT8EtsBVcBWM8Um1cGAwGW8FUsMvvhw3bwXywEhy0rLFV8uyVHuoa
boKV4JI/le7mlb45aLYOnoJdLgtegklgq/cqX8nf2zds9k7XMBXMA5/ARLAN
bAEnwR3uBbaCq2AVmIrN0U94CeaCZ6YNnhqXeXNd5jnsBFfoz7fr/IHD9ixg
N7gJDoGdYKQNuoaR4KKNKv152PAVXAWXwAXwwV+GDT+xfzAS7LRJ13AUbAQD
XBGsBcPATrAGG8T2wCfwypPDZkdhrHXTtnPw0ObpG6yxU679g+CpLbuGm7pB
wyF93fuw0jPBMTDRd7uGv+AlWAROg4M8W7gJVtkm19T+jukTLAFbTNw3/AQn
PTtsmAl+mqhvWAeuGsFb6uxeOqcN2joEI8FEcMjn+oadYCJYCtbQH9gKxoRJ
Xhg2zAnnwXswEtyyYN3TAqMaboJNYBb4YclgGNhFX+GLfbvP8JBjmAVu2iv3
B3vAG/ANWd9gq8kq7d01bNn7L7uGi+Clg1MPFmD3J6y+TFDp5WHDV/DQYV3D
ajARbDRzsAzsAtfAQtaC54cNK8KQ8NiUg4Zh9BeuOCr9OybH7of9ZEfhIX1w
7/8YNowE5+yXevQm7Rv+gY1ODiY6ocpfGTaMBDvpE7zB9r8eu892w0rw1klp
C95gw/X7lNQ5MmWndp9hJnqHB7ewlTDONIOGSdwHDAKLwD1n5DkenTL1J6nn
M3GlV6sv/9c3LAFrjK2yeUc1TARHwSvn5XqwxCWpf1mOR7DUBemj8yMYSg6X
vBZsBpON4CT14R5Y45xKXxo2jMT2w1aX5x5gLbjpijw714GB4AQY68rMg/3z
fzoHR8ATsAlbfWP6Yk26LufZ8zvSP2XXpk90b8h9XJ86l6bMMQx1Y+7h733D
RTAO7AQvwSRvDhu2gqvgK5jq5q5hsCMGDS/BV/DUrbmna/6n3/p1e6XJ+oa9
YekRzHRP+mudvSv9uyfH8BisdH/6e1/qXBvdOyu9E0wF87gOHAFX/KNv2Alu
gq9gKnhlnWHDWDAVrAR3PZj+qQeXnJz2lPPJrdcrpl9wGzwFNz2e/sBOMNKT
XcNHsNHTXcNXMNUTJW/CHwlGYffgJv35IBhpBEM93zUcBXfBWU+VvF7pzDFo
nNKlyWGV94fNjsJXZ5R8eto/q/Izhw0jzVP5FwcN/wxKnn/Q8FJX8ryDpjNL
yWNTfs6w9RMG2nvYsJFrwWjP5xldNWjn56y06qDhF9hmVOmvMmjYpi/56kHD
QqNzXeWz5brK5yp5wdQfwalw64TWmfR5/5LXGDTMc3/Jy5X875I3LXmdyPeW
vHzJr5X8zZKvjTw2/YFnFip53KBho4lK/m3kb1jDh40vurjyi2LTH678gmGr
u2D6ALu8U/pb9E2ef9juX13X96zGVFq4ytcaNEyyvfU72OIL6TP//YbksMSl
VX5JMM0E1ofIP0nf4J55K186z+HbJV+f9re1Zgb3HF3yUX271jaVH5q6x6ZN
GOU3JX8/eOXyYcMw6i5S+YuDhk8mNnYiH5f24Y+dSz4ymObzns2g2d1fDts9
Kj+pdH7aNxxyQuXH9w3bTFLntxw0+XMlbzVoOh/X+T2CLXar/J+Dxtc8XTo/
GXbjccmWlf8t5T/rW9+Un5r+qHt15ccNm92/tsoXqnRlHf8q14JjJi/5lkHD
G7+o86f1DZNcVeXfHTQcs2jJ20ZnspJvTvmepXtM7PoUld86aHXPTrnnsNiw
9Z9dPrNv/Yddbi35luCYvfrWT/2ZsvJ/R/+ujH0+196lc0LuZdnK34mtOa9v
+rDLpcbgoNnIF0vnjkHDH3ex3ZV2N7er/KfDpr9E5a8NGs65sG//HdxwUclv
DppNX9VaMWx1fz1sfcD7TDVsOuS/l3zSsNWdetj6AD8sXvKO6cN9/sc6/mHJ
H8KcfRs/D/LR+1a+dJ1/e9C4jiOq7N3I0xj7ud9/l3z3oHEg/yr5lGG73+WG
TZ9t/XPV3a2Ojyr5yEGzF+zR8mkHJpne2I88rTmRum97PqljjbRW8gefiWz9
cd7azgbNVGVn5/jcQVufrfPPZE3/K/vgXobNhliH+aq4/cv6tjdgHf9a39ZW
vq71nG/Jr/zPoLXDLlw7bOs+f5neXIO2jzBXjoexKdqfJus5X3ha83rQ/E3+
7+xZb6fNOk9ngq750fOmrjV4vuizAWyBPYXl0rfRXfO15/+f9vnXeOzzs4ar
a19jAfOia+0p57OPSV3yjcNWl86CfVt3+EXWXX3m8w5LvmLQfP+PIvOHpx7V
cn7oLebmsPny+1X+y0GTV4jM914y/6v/1H9J5mNPb20YNJ/9y8Mm4yze5Nf0
rS4/XP1JU2/J1L3N3B+2ugvkuXlWOIKlUu/vsQejU7Z06lq7yTiFXw0ajzCy
T0OePfmykW+q6/xu2J6DekulrvbxFGNir8l4D/+V/wxP8UBsIh22Gi/BXt8V
Gzo6tniFjIGHhs2u21P5VsnXRWbDV0pd9nfdtM+mr5jxwI6vnP+XHaO/ePCA
8rlLXmnYuA/2eNA3+45f+PWgcQX4orljT+kvEBmu2GjY9nfU5avTXya2Hm+x
aMlv83P71ubMfdt3WSPPEQfiGbPJ5IWN577hgfF7UX3b43F857BxFuQ7ho1z
WSP11MelzN43Lp4thz3WzvO0L7RW2t805YuUfGXp/7Jv17pv2LgadScYtvs3
9h7Kvfi/+PW45fH7NcPG3eBtHh0222/v6cZB40bg0ner7a3CoXj26+f/+mvf
/seR8g3zv8A+uBEcEfyD08HnwDz4myWCbTbKfwFHqTtX1zDSxvlfhn3DWvqB
C9AmXqLP2JgrOl/Pc3AOf27vB/ZRDv+sMmzYCOcDF7n3Fap85WHDOZvmfr8V
/Wv6hmO+k3Obpc35+obZ7NvBMvJVus/2vdbLc9087f930LAzDuoJOKTqXlDH
jw8bLwOvXFflC/dtX2eRvu0VwROTBjPga54aNv5FObyAc8CHOEcHn3Nj1buh
b5wOfCHHoVxfZb/tm+6EOad8zlrrdukbDpog7eCCFu0bHrL/hddwLVzBMn3D
QLiPvwaf4Cwmr3ae7xvu+bTyffu2/7J17DUe5j9sct/0R/rnWs8NG19D7/a+
YT7t/7vkV/vGw9zWN3yDj1iqbxiIvGTf9qHUhTvo4mvgOPwYLuuOvmEXe1X4
AfwGnvNvw4Zd8DLfGzbsQl4y2OSgru3RkA+2btQ9HtA3bLJ83zAMXuP1kl/r
G4+xQt84lh/lOnvlWsv2DevYn7qn5Lv7xpHc27fjffJ898zzvrnKburbc/tZ
MMx4nqRr3ALe45C+YTZ+7ivBQfZilon8U2O1+nxo33DNTsOGh+wNwXH6h0f6
ct/6rR04CL9wTpVPV7of5vgPfcNJ+IhV+taH80vnkb7hJVyDAIVlo/OoNbJv
5Y/17RhPsXLfcBX5j327Bk4H53DCoPneHwwaR4HjGNc3foV/v8uw4S36q/at
H87hOPALuAU8AXwGm60eDIZPmLKewxSjWp8m75sO3RtTl/6fqvyNYLxZ0h94
zH4K/ZtK/nnJHw8aN7HmsOE9fMQMJX8a+a20gbv4ZND4DXzFh5Hd1xrDdp/a
+Urf7hMfAiMen/6ckOeiD+vk/O1dO3dc+v5mrnVTyo6PPp9si6xLf+kbBj0x
94VHwCHAl3CnPZfHBo0H5RfMlHLt4D1Ojs5Xcu+4jB9Xm78YNvm96OAx1u8b
F4JjmHHY1j4cCMyJG7EGrpVnpfyTlON/1u3bfaq/dvC2PvNZ9A0PY1waG7g7
3AjuA+9xX47xJI9HfiL3eEbuZZbo35f2Tkubys+MPqwNc+ND3N85uS9Y+6w8
B22enWc4U8rpw+j0n8l/N0uutUHfnsv5+f8/yf2+HzsAz+OTcB+PJr940HiQ
J/vG3VzoGn3br4JTX+zaPhbOxH4XfA/bw2aXpnzPYWtHe/Cj/S0YEi6GrWFp
GF87pToeFyuHt6fpW/yNa8Ek4mPgjf8M214ULPvJsO11wcHT9i0WhwwHwnhj
Kp+hb3E29PFC+gC/wXx04IeZ+hbjAqvBXLCKOBlxJnAh+75EyuG3OVKu7tOc
leA8frt135r/TN/2nuCGZ/u29wSjzN23uBny28EoywVTkMWojOrbfg9MME/f
YlPI5tNNmVNsJRvM/sIlcMOXY//J8JL9JTgDBpi/b7hBzA/eQzsbBCfckLr/
HbbYKZj9e2l/29gE3D27sHjf4hvY2Un6tufBBi/Rt9gLMpsrdmT70n+hb/6/
/Yw5+xY/5JlMlDa2jZ1iD8Q/8MFd67Cu2V/1tiz5xb754fh69k7OJk6WuuzI
S33zx3GvK/bNrpDx4uzKObFd+HH26/PBQnhJ/rjy89jlvvnSuHV+NM76ysz7
ezP3V+ubDaBjLX0wOmv2bd3HI1vvccfswxRZ95Vb75VbR99IXWv1hn2bq3/O
PMU1W7df7tv6jrO2dj2S8n/2bY3D/+JxH85aYT2j81DWzIfTPnuhTbEB6/Vt
vVMXNvxT9K0ff0w7U/Ztj8raPFvKrTFr9c1m6M/sqWsNmb/ud+u+cXtT9W3+
2/fGQ76Qsc3ntTc9Y9fmmv1XPg4f0D74xF3zhZ/MOnBL9CfJ+qCc78w/tvfM
R8aj2i9eoGu+xjOZv/zcpzNn+b/kmbrmOz+VPswT/ZmzLj2e686bNvmz4j2M
n3O7xos+nznLF7PXa58Xd/pc+rBw7pcPhY+lv2DX/MFn0zf72bD7yl2b13/L
fLR/ivdbP2uCWBz+BB/hpTxDfOWLWQe2iL66bIg1n12wXlvvcex4SHuu8Dkc
TrZPDKvbf7X/K17rn5lrML9y2NheJFy7a9d4wlcyZ3GM9jq36xrHSIbnn0k7
W3QNQ9oDtY9rLw+nt0vXuMdX0v52Kdc+zs614Ge81buZa3D7G5nj+Eecnj1Q
8Vbk3bsW7/Rm1g0cHf3vdY3DfDWyfUA83nFd2z/T/lld26+BY+FVe4Kw7vFd
N57QItsT3DF1lePs3skagge2H21/3X7ZexknXwr2+2XX8N/7/7OGfBD5J5Hh
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
C6fP/w/cAJK3
        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077208254585`*^9},
 CellLabel->
  "Out[1199]=",ExpressionUUID->"684f65cd-7004-43be-9731-99321a52b01e"],

Cell[BoxData["\<\"------------------------2/64-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.7657077208410397`*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"cbca6e3d-9484-41b7-9dce-950032ae0fe8"],

Cell[BoxData["0.23476484964578215`"], "Output",
 CellChangeTimes->{3.765707720903572*^9},
 CellLabel->
  "Out[1204]=",ExpressionUUID->"c3e6c745-15fb-4f53-915d-2e6454ede2d3"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
qf6p2J4d2d2oS/xUPD3AY5XEXHX5G/as0FU=
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     RowBox[{"epoch", " ", "number"}], TraditionalForm], 
    FormBox["\"average square error\"", TraditionalForm]},
  AxesOrigin->{0., 0.18432256532230035`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 250.}, {0.18432256532230035`, 0.24337470228815727`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077209660425`*^9},
 CellLabel->
  "Out[1205]=",ExpressionUUID->"f06745c5-0ceb-4bef-b5b5-4beab8a432a5"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJx1l21MlWUYx0/MMbeEzMUHPxgjGbhGC3KSbcVV9mKooBFtVs4Ws0+8nImx
XsBlpSGkgCf7YJYIDoVg2lAQYYV7FAQOL8cHAnktyzBezuF8qNX4QO0czv9m
9//hnC/XfvdzPw/X/76u+7ouojLsae+F2Gy2uAdsNp9d+M/3+0Vsgd+J6GRH
dPJvitf70HFPcUP2aGP26KTirb7H0VOKhxt9G2YUZ/q2N7oVL/68iv3bRwfF
/5nkehlZXFAM/8DwDwz/wPAPDP/A8A8M/8DwD7xozYA1RPfXIH8N8tcgfw3y
1yB/DfLXIH8N8tcgfw1l/duynRYLPWDoAUMPGHrA0AOGHjD0gKEHDD1g6AFD
j842mx4Ha1xYl/58yerxMyl+JsXPpPiZFD+T4mdS/EyKn0nxMyl+ZtB7wXnH
cWNdYLbQC4ZeMPSCoRcMvWDoBUMvGHrB0Kuzzcb3nu8V5yXHjXWB2UIvGHrB
0AuGXjD0gqEXDL1g6NV5qe4uX+cMy73jvOS4sS4wW+gFQy8YesHQC4ZeMPTq
fcQrwfrK8nXcsNQVvneclxw31gVmC71g6AVDLxh6wdCr90mvBOub0Mt1n+sm
1xW+d5yXHDfWBWYLvWDoBUMvGHr1OcArweYC6OW+xn2B6ybXFb53nJccN9YF
Zgu9YOgFQ68+53gl2NwDvdy3ue9xX+C6yXWF7x3nJceNdYHZQi8YevU5zivB
5jro5bmE+zr3Pe4LXDe5rvC947zkuLEuMFvoDTanQh/PWTyncB/nPsd9gOsk
1xG+Z5yHHCfWEWzOhh6eE5efs3gO4T7NfYzrPNdBrhN8jzjPvPKqn4cDflRK
lt/BccV+4xgI+N0S8K9d2cXvuBRjH9b5O/ocUan+Pt5b5LsWf/i57o9H7dfP
tZLmVPaL57oW5Sf0wD9dnzPoOeDv8br+vN5yPnhPzxdXUL/AfI7IRH2/R8r8
C9PymH99Vlm8j314H6znB89NnC/1FL96y3d1vw36vmE5Z/0cnOo8+Jz186tU
ceW8WHx/LrDuUBbrsPAXz/G+nl8OtQ/vbZ269nxu0s+Wubpt/u+hp0sOS8Lm
gczQj8cs/2e9/njGnsPz12RF8t4j1b+2WP6PTEy9vSWl31DfbVp/dvtfNb3q
O8/FTxwN37hUR4q31b6bGTat6tTZf4vC1iTNqvo1GGmUR9o9YtSs3na/Z6ke
fHpx9+TR9EFpjU3adeKJH2RVs/2yvd0lD5bH1eQV/iT5C0boxonrcrPs/s62
kC75YLdjMLf8vByMKeroLHZJXW/O9qodc/LFkbGYPc3T0rQp58zKf2aVvVuR
XPtn/rSEzoz2JYTPSelDzpyK0GFxhh9s/e7NCjlz/PuQDtew3PzqqWPu3lNy
fIO7dGJsVNqzxiLdnflSnJVXIl/3y/svzX9W9tFVaTtwctXpHe3KHti0cMq9
pkvmq5r63eduyJB95HSU0ykl4w1ppecNid811XDj5f3y2if7Pw9bYcqHnSMR
6y40SmpR4rrL3/aovDn0TtfaV7rrZF/r0GBa5x1LHftx51pP0aNXVP49cuuN
wsKBNsnJnhhPunRb5WnSUELz3s3dlnud8czDsVkh19V6+kT61Ut9HVLbN1SQ
Httmqaep9353TZ50SnXiCxHxV2ot9aMzLkb29bhkZUreW64oj+RtiOuovTMj
40VV8yndM2K/6DmWG+GR4YLp1G+qPTQfeORWXX7TH8/OyNupF1YfenFW5Q3q
xJdbCkqfzHTL/7WYB6A=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmHnYllURh8+DUX6CyU6IKCAEH+JHIrmBhLilKOKXJKC44JKCgLmUhBji
AohLpiWgIGWaKISFIqCllRWKmSJQkgKmuOKWCy6VzX2d+1wvf/yuec5z5pz5
nZnzzMz7dhkzsXFCk5TSqiqlHUK+FVgdiGHaOcAc77+s/ELgK4Hmzj+rDuNd
1dtFoNs00DLwxcCXAh1ch94617UPfBL4e2B9oIXrWFMf6BjYLfBVbbNHd9cx
7qSNVoFNgacCrQNDAv0DA1zfQr1/BtoEugSeD7QNdA3s6XO7QA/tcKa1gWa+
7+jZ2Kub7+DRU13mNwSeDNQF1gR2ct9j5HJwYB/tY/fpQG+5bgk0qPO1QGf1
NvvcJ9B3O777KuHycmBvbbwU+Ftg98CB+rFXoJ+6+O/rSvx6rDYHBo4M7B84
IPBNJXscIm/sbwzsIdde+pc4DJI3et+QL+PBroPvocp+2mtQ74jAftp+RX8c
HThMXfgerkRvVmBy4NLAJYFzAucGvh/4juNhcoL78Uq4nJTy/SAmx8kVvUbn
4fgtJfZPUGJ/ZOAouY3Wd0MDJ7sf4+HqcqZR6mLv277Dx+PkwbqznTsxcJq8
4Xu6slF/DHGvU+WN3hjn4XuGEr5nKofrl5FywS8jHJ8id/Y6S114jFUXfsSf
+10vP7hzL86TOz44X97w/a5yjPEZp+5EeaN3gfPwvVAJ34uUcJkkb7hMCYwP
TEg53uc5vlhd/PcDdcd5poHGdbwcOev0lO8H92WqvOF7ufICbZwi1x/KG71p
zsP3CiV8r1TCZaa84TJDO4wvc1/2ujrwPXlcoy5+Wh5YGLgn5fvNd0ke4nvm
XhH7G+QE9x8p4X6jEo4/VsLx1pS/k2sDN/kOvj+VB/6YI2+43KbudYG5vmP9
TwJXuWae89cH7tUG6+4OzHa/2+UKxwVKOP5MCcefK+H1i8DN2rlTCce7lLcE
fqmcrZyujxdqc66+myun+XK8wTUzPOczKdc48vIiuXOmJfKG731K+P4mcIcc
lyrheL8Sjg8o4bhMiT8eVMLxIe0tDqyQK/5bqWTuYed/lXItpr5Se37rOziu
cg37/V5OcPmD8gF153ueRz0Den90Ho6PKeH4JyV38C/yWymXee71uDbh+Gd1
0XvD/R9J+V7wrXLfubvk8nKXkeRu+gJqKD0Adb7FdmNqKHW39Bz0CvQBLdVb
7zO9xD9SrrPUevoIeoH26lGPSq3u6L7UZepxG/ft4BrqO/V5J9dRz+qdgzc1
kr6CvqFzyneK8/Ed8q1c6plfSLn3oC7SV3TRFntTo6nZ9AvdHMOpZ6r1Gj20
x/k6yaW99rt5jnrX7K8+z+vcl3vSIRq3vfBZlblSe/vIZR/Hr6bccxyUcl/R
IGf49VWv9BZ9td3PMfYO0D69CrmJnoPeg/rUO9V6i37yPdA1TfQ7sXox5f4E
fe4FNfFw+Q1KOW/D4xDH9DMbtdXH+YHyG6xe6S0Ga/swx6WPKX3NkdprcI+D
U623YA29x1H65yPtlp6M2k4upr8gf5PHqQ1TU74PpZYwpoaQ86k/E53n3lBD
pqlXaglj6gD5dqb7kmvJuaXGoEe9pfZR47h33L9ZnonaXPoL5HD9RG0fqh+H
OS790DD91eh4ghynpFoP1Khv2O8EfUPvMEJfwIk+gb5klHOlZ2L9EOeZm+T5
Sm1EksfJK+SXVcZkqL4+Rz183azKPfXngb8G3k+5v+Vb+3fK3xnf3wcp3+eN
6vC8Rp02vtvo2nPldIl+xafU4rHGY5K+nux4vL5Bb7Rj1pW+53y5Tjd+p/mO
+I8x9ujRs1ycav0OsvRBF6p3qusm6IvR2/l6nBxH6CPuI7mY3E1uJseT60tN
QFIrqAvUEnL4cnXJ/aUesGax88RknmNqU6kT6C11v0dTzv1I8v/r7k+d2rHK
dbRHle8pdZa6zB2nRs/RR9R36v1M31GrS11coS9vUY+7Sf6lznwaeDPl+jPf
sy3WziL3mJFq/cJrKfOhpi/wudT8Ja5vNE7E8zhjwHc8zFgyLn02eqVHZ670
3MyNMj7cL77Fs435SN8Rs6HuTVyHO8/6zSnf4c4p37tZ+gx/rDLGpf8o/cjS
VOtTkL9Otb4EvSn6jDjco19Lv7k81foUZOlflrm+9JQ36teH5HKVcaNvI5d/
mHI+p06+l6yzVf7Odqjyuyd936nKz22Zr/L33K7Ke7AXeX5bynWqv/54Sp/w
/aLPd92tyvq7hmwdeCKeW4XcmvIzNf3tlPs96uO/3JMa+U7KtZP35A76gHbq
r3Ut/Qb/S/DfQg/vc712nlGnnftQqzuao8hV9J3cLe7mu+5F39LSZ/bsEnrP
cS79sUH/kJ+oefhuje/r9Cv+ba0veKa2k9uedy2+2qx/yn8cXfXZC77Hl5vc
o0H9Pu63yf27GjtiiK/oRZunWh+/IOVaQL082vi/7B14Wl/3Np4vGdP+6gyQ
w3Paos5uUYffBa9pY5v7H+Serxq78rvidvdiLfV5q/6q0ydrjG0T+VfKt3xe
a7y5A5+l/D8UsVrte+Lbu8p5rUXI/6Scdz5O+b7i0z2rXNuJ9/Wu/8QYY+sd
91+t3Wby2ur+T/hcZ9w/SrWe6kOft/i+QX9s05dT9QW2uT/v6U/4kRcfUZIn
yQk9q5yf96pynnjD9+vk2Vw/b9Pn5bclNppUuefeo6r91lrombnj8/TN/7RX
fr/dqT/+m/K3VH7jkbfK70Bi3avKcd/F7wyfk5fr5Az3m113h7aIx++0+anP
H/vM2cj95DXyGbXnXnlfJ19qRdMq96Pdq9rvTHjP8Xx3y50z7Kj8zOdZ7os/
6M9u8kytzBG7hWzvPSHP/R9/0XND
         "]], PolygonBox[CompressedData["
1:eJwtkMeNAlEQBX8PizBCGAHCm8FJmGgIgQAgJyIgADaAXdaIGxw4wAmigHpq
DqWpOXS/1z9ebZbrKIRQgw8oWQh7vp+QwQtwx7eQwofwi3dhgCfM/R9GuAn8
ABVkbr7rAQs8C1/BM5TVgxNehhz+VC78QIf/MVw1C3l8Ajd8Dg28Dd/vmRY+
hV3wzjO8D2f8D+rmyC+6F6+aZ6lDhDfNb1FmUofAMXhG2byjumpnbL5Du/Qm
NfObdbtmNKvO6q7O6l40fwt1TOMvbU0k2Q==
         "]]}]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
tx4=
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707721059738*^9},
 CellLabel->
  "Out[1207]=",ExpressionUUID->"079e2c1b-59af-406b-ad1a-9dfc6acff0f6"],

Cell[BoxData["\<\"------------------------4/64-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.7657077210754037`*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"7d73cb7a-8485-419b-a934-cde266845698"],

Cell[BoxData["0.24984137284778046`"], "Output",
 CellChangeTimes->{3.765707721122222*^9},
 CellLabel->
  "Out[1211]=",ExpressionUUID->"9ce2e3f6-021a-416b-ad5b-df514191b0fb"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[{{2.8965237045515626`, 0.2099930081762716}, {3., 
       0.20828538279541597`}, {4., 0.19601149711576338`}, {5., 
       0.18623765083025862`}, {6., 0.180505758274831}, {7., 
       0.17544940134632725`}, {8., 0.18505300657743814`}, {8.780457037474418, 
       0.2099930081762716}}], 
      LineBox[{{10.771585675902543`, 0.2099930081762716}, {11., 
       0.19302571812184424`}, {12., 0.15772019311284213`}, {13., 
       0.14968747198540155`}, {14., 0.18442978419012585`}, {15., 
       0.1584025884906255}, {16., 0.14652696796522968`}, {17., 
       0.1621754015299463}, {17.647286504808168`, 0.2099930081762716}}], 
      LineBox[{{18.515345792856504`, 0.2099930081762716}, {19., 
       0.18548846496404722`}, {20., 0.15577054765379195`}, {21., 
       0.1327579829355327}, {22., 0.15024906791053264`}, {23., 
       0.18808874142840715`}, {23.45851227233798, 0.2099930081762716}}], 
      LineBox[{{24.36239591844045, 0.2099930081762716}, {25., 
       0.16448014428602575`}, {26., 0.13617661395663694`}, {27., 
       0.12621360746284183`}, {28., 0.12786822192930525`}, {29., 
       0.14714865804324356`}, {29.81708829833581, 0.2099930081762716}}], 
      LineBox[CompressedData["
1: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
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     RowBox[{"epoch", " ", "number"}], TraditionalForm], 
    FormBox["\"average square error\"", TraditionalForm]},
  AxesOrigin->{0., 0.11731718346005726`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 250.}, {0.11731718346005726`, 0.2099930081762716}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707721200333*^9},
 CellLabel->
  "Out[1212]=",ExpressionUUID->"6d95684b-071b-4686-bb85-7754ea74ba11"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJyFms1uJEkVhS14EmDeo3b8bHkEJFbAzKuAt+x6650FlpA1kpX0WLJKI5l0
U8htjNtdVHuaZrLqCRimK/3d1PmiUm21FH3yRkbEuXH/IrJ+9KsvfvnrHxwd
Hf3xh0dHH1v/HX/2i+//nS4Sd4Xvzn73/b+l5H3hvfhuVfj1+KDw/777+PdQ
+A/7998W/slHePzvwn/ev/6u8M/2E74vfLsf/0Ph3+wX+G3h8W8nPPE83HaF
4ZvyvjB8wfAFwxcMXzB8wfAFwxcMXzB8c992wtM+HuY5tcm3E99OfDvx7cS3
E99OfDvx7cS3E99OfDvxbe308D5OPN3CFwxfMHzB8AXDFwxfMHzB8AXDFwzf
9Lud8OSHh+20a3ilfGpzf3vtb6/97bW/vfa31/722t9e+9trf3vtbxtnDvth
1+ybeYHdwhcMXzB8wfAFwxcMXzB8wfDNuLkTnuLo4TjTNXbpfTMvsFv4guEL
hi8YvmD4guELhm/mhd1iLk8cjqNd43e2S++beYHdwhcMXzB8wfAFwxcM38x7
u8VcHoSv46bjiv3Odul9My+wW/iC4QuGLxi+YPhmXt8t5vI8fJ0XHDcdV+x3
tkvvm3mB3cIXDF8wfMHwzbplt5irY+DrvOe84LjpuGK/s11638wL7Ba+YPiC
4Zt12W4xV6fB13ndec95wXHTccV+Z7v0vpkX2C18wfDNunO3mKtD4eu6xXnd
ec95wXHTccV+Z7v0vpkX2C18s67eLebqbPi6LnPd4rzuvOe84LjpuGK/s116
38wL7Ba+c+cI+B6uO12XuW5xXnfec15w3HRcsd/ZLr1v5rVr2nG9L6odl3dZ
+Of7/9wW/u1+vHvJHwuP+jivdpznuvC+2/GrwowPZnyw18VzsFvGBzM+mPH9
HuvkfTDvg3nfct4Dj/u8rv5g9JX49rnfpvqD6Q/OcTc172hHTzUemPHArPv3
+xf/U++Dkf94//y/JQczPpjxU/5YmPWCGX/U+6D9GbQ/Q+3/kf5sb7aT7H2t
ca5LDj/kuf+uw+0PrlPtH6eljxxv3fgPPJDTn31OftZL68epl9NGTxnHOD+f
q18363f5/rX8adX4O/3z3HIufbrOP5c+u9KP+TlueZ/NI+2ib+KA4wFxPs9V
l4pfy9pPx5vME7bLXnpcNfM7vvAe4zvuOY6lfNWM5zjpuDcX5xgv49j9bNxl
PK/b72UcvG/igrH1nn53XTjX/yj+j1rHJCcvIwdnv6nN81gb9x3H5+J8xvXH
wsiJ28jBjrtzcZn4kfobSo4+s/91YfRpnLxuq45Bf2DmzfPcWv031WZe2xRf
cOaljequtexnI/vcyD438rMp31KHwQ8Mv5RP+8Z8zsdg5rOcOo/5wcyPHnjP
LXL383P0hxyMHP0ln0Hyy8LEPTD8XG9Qt8IPjD5zn+9LbrsH53lq3fhFjj9v
R3N6ALvF3qwv5OgHjH7A6Mf1ks9P6cd3TX3m85TrNZ+vHCdYN37ouHHYjz5l
F0PpJ/m+kJx8PaiuGHS/Oyhv75TnBuXz6TyGPPPkTvl9UB6czmvOQzn+0LTI
s/7wd4sXtf/gvPfzecv3aK0es87wveK56sWlzm/L0h84+V+qvpvqETDvzdUN
yPPcdNfUVZnvVzpX3TX1gO+LU2+98vFdk58z3290n/pUGPu2H+X97NDc5+Y5
oG/yp/Nf3m8+FWZ++2nelw7N/arrDt9H+jyZ929PhZkfzPx5nzcUZt6833oq
zHhgxsv7sqGJ/3mftC7MfBkPnwozX95X+VzVN34Mxg/Tf7sG26/S//pGnnFv
pTg3nRMy3q1Un901fpX1xoPuCx5KnvdQ1819e9anD43fuI4D5z32Wve86yZv
e19Zj+/Dsz58aPzWfgTOum0za6e2o6zT71RvPTR2Nue3zG8/sh/YTv1+xp3X
z3Z08iz/V+FRfxfV7sVnfy/M+8ajnVwVdss8+2V89rdn/TwWHvmvC/9p3586
6pvCbun/0337bc1nPPLbFs/Rr46f/eNlYXik/E3h/TK/+8ezP50979c/C3vc
cb6bwujTcuZlfDDj+/3P9+3X1R+MXsf1vK31o1/2YRx/U/3B9B/t5129h5z1
ju+91/59qHWgf/pbPo4/1PrB8AWnXR4doZesj25K7zxHX3N6Yh6eg5Fbb+iT
lufoiefoCTn2i3yMB08lx45z3A+F0aPlOf9QmPXTn/WxLuTG9AOzTvYXDB/2
n+fw4Dntp57Dj+fwQw4/MOtO+bt6j/jPuNiF/RI7gS9yMHL45zh9Yewv7XEr
+RRXwawj7fmi8FxcYj0p7wsjd/+0i1Vh4gk88AcwfIgTYOyL8cFZ/7zVejaK
dxO2vWEP8Ev7mPwGzP5jD7YP8iR2gRw98D7zgYmXvAfGLtGL7Q09sQ9g8hHv
Ux+AM7/ulLe2VS+Or102dsPzsf/0O7asCy9lx33Viegfu0BOHYicdeb+3Jcc
PWGXbjPPdk1dmnXm68Yv0TPz8Zz9QE5eRk+ZJy7k11Ndzjp5P+PGRcPHzxkP
f8/9OWtw7stxs0/0Z18yTrySnd0oj71q/B294e/e1/TbW+l5+i7BuMzL+LSM
D8auXf/hp4wDRk7eQQ5mfmPiBesF8779H0x/52FwrneqV/B/+ILz/nUov3B8
ye+pb+p9MP2ZL88ZjyUH531iW0fk/eVa69002PUb8Sj9clf6QY4+wZlvtso3
2+JnPK57qheZL++Btpp3yu/pp9eFsx66Kmy7Tl431eJf9jvbPy3+5XrUeYF9
YlzX4XkOfqr9wV4YJ+PdrskrKfd94/Re5rUTxe2L5juw4yL9D8f9qa5PPS+b
uJZ57Ub3hDe1Dp77XMX7YN8TZb06Yf/OiP5Zvz7q3Pm29AzGXlJ+U/tNXDVm
38E+R/j3XPnd4ZuyD7B/50X/rKumOty/k6I/fOkPzvu4S+n5qvqzH46H/v6A
/6Nn11/+fRZ6Z/7ctyudL5eFsx6fvhfwPn6dfrrSeFvFp6umxc4dh/xd1/di
zEedwnrwT9YLzntt6pxT+e2Z/PMvzzz++ryuLwvj//Yz+FC/pZ2/LjvPeH2j
eDH9DgSMfuzvybuvegGMnRPvwcid78G+d8S/qB98r4+f+hzve0F/l857vHc1
PvaR9yfL5j4lzxt9Yfj4fOF6xPWF64H83rdpvkemf60K5+93tqpjTxXPT1RP
nirvnizyfP5C8mVzbnGdTD8w9ghGH8bkB9af9+VXsutlYddh4LSbNo759/vs
A3E+7em95nmv7yVtm9/P31Q8w79H/l8pTt0WTnu4qniM3sC+F8O/kePf4PTv
rexruifJeHupeHtTGHvI+nz6Lma9+hyW9ceJ6tfpHEddmvXMZN+f+h1b/l7q
peqTc33/7nQ+eFn7+n8LqbGh
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3Hkcp1P1B/Dn+X4R8rNGCDF2CtmNMMZOyTbZImPNvo8lxNiHsYsiIVuW
lK29UGRtES1UthYtslWU6Hfecz/f1/jjvu753ufc9bn3nM855z7fxXY/eJuD
Bl3XPTJT1w0rX7F+/KvvuueKfk/lv6/8XZWWq7RgpfdV+nAxrl1p7np+S/F/
p/I/5tm7K81WaaG+0eosn2cLVZqvyv9Q+cyVvlf0ApVmLfr1ymfv2xg+VG1+
q+jniz6s6G8XPWff6mv7/yotW7//or1KSxf958rnrfRG0X+qfG79Fv3Xyt9b
6QPpf2F1Ky2Qsd1TPAtWmj/PtD17pSOr30WqfOFKi1Z6f6W5qvyDfau7TKXz
arD/rt9LVPpg6i9S6Yaq+6EqW6nosVk7a/DpKl+5ypeqtEHVPap+r1D0GpX/
t/KXiue+yl+pfKlKa6Yf412tyl+ufMlKaxS9dOWro7tG45uh2ry92rqs0jGV
3iy+v1f5WmnDONbOWKzHh5Mb+wnFP7b4V6m0olRl6+Kv8rXr92tFX1H0q95P
pX8aU6UNK238jrHsULyHVz650o3F/+VK/yh6o/Dj2yS85rdJjfmk4lmn6v2n
0gv2XaXNMm7rd2I9X7+efbjSXvV7QqWPV7qyysdV2frG2rexbJtnG6efCenb
7y0yf/PeuPrdqNK/it4u88D30UrrZO6b1fNNK61X9KyVP1B9rFdp+7S9qXbq
90aVti766hrPhkVvVfQnKn0k7b1e5Q9X+fhKe2d82tgzfRvjJn0b++7WMG1b
gx2Tb15pp+TmsUfmul1418x6fSr11Tu20n6V9q90TY1hs+rjk0Xvk/7xXVjz
eqTKN63040pbVJrYtXe4R8Z4WMa1R/ofm3V8tHg3r7SbufaN59BK+6b/ndL3
zlmPA5LvUumItO19/syaVTqo6J9W/rFKB1q7vrV1dKWtiz7YPq306bSrvY/3
bXwnVXqs6G0qHVL0kWnbek9Kbt5HJbdO2/ZtvCcaa9/GdHKlOWtNdu1bvS9X
fmmlHxT968r3rHRc0eNqPed0bouekrU2rr37Nsap9lE9f1elfxc9U+VvpK/x
Rc9V6a2iT6n8Sfu60oxFv15ln6k0T41ht76Nd/fKt+zbOpxZ6Zj0t03xz1xp
x3r2rHWodFaVfy58xrVTPZ+t0sR6dlrlRziflXYteu5KB9jTlc9BXlibvo39
cnurymaptHOVfbzyWSvtUvQOlb+70ifJ7Mr/U7znWLuiD6myPSrNU/SBlV9Y
5fMXfXLR1xR9bs3rnEprVbq+fl9S6dJK7ymeg4rnoqJvSJl57F7ln67yYyu9
l6Kq/IrKnq/8mEqfL/rtjPemSvMVz/8q/0KleYs+uHguti8r/2zl19pPRX+x
8q/YPzWOqyr/qnWv8qsr/1qluypd17UxnlTlX6r8tkpfT5kxntq39u6w3tXX
mfW79/4r3Vxl37bf+7YXT6l0RtGnV/py0YO+jfdblc6mRyv/TuZ9Rt7fttaq
b+PcpugFqo/zrGnld9Kvle6rZ3dmvHtX+UKVJluX4v/csI13QzqBbq30q6J/
WenKoifX86Urfb7oL1SaoW/jucJe7Nv4P1W8C1c6pX5fYg/1bb6/rbLfVLqa
vKg2zi76mqJvzJger7RYlS9a6WI6svLFK33WGlR+WqX7i2ePqve+SidW+clV
tmKlW4o+pfJVKn2t6APo4koXFr1IlS1c6aKif063VD6LsRV9e+WzVlq+ni9X
6UtFX0euGW/XdDsdDQdcW+WPVv6bSv8s+uuVHvNuK/9J5b/D3zccNKf3XfRP
K3+6a1gFNoExYBM4iM7aofpcsMZxQd8wFDwDM+xX5fsOG6aBm2AqWOUS61Fp
y6Kf6Vr7P+saRoKn4Bb4w5hhEngKjoJbZss8/L61+hzTN4wCs8FXcNFXBg27
wENwCt06pmt4De6CeWAwWA2muWPQ8BM8QxfDVIvb/zXG2Ss91DesBXct0TUM
Bl8tmXWFI+CJV4MlXssYlcEc36jyrwfzrBksBPO8HKwCF9Gh9Ck99c2ij620
Uv2+PrgGnjFWeGaZrMVy+f2+9OP3WsFUL3fTsc4I+8jHpj69CYus1TfcQ/ff
HcwDt8A8MNG4rmE6uAA2gsfgtFW7htlgMvhm6bQH59wQvLRexrdW+sMHa4yw
EzwwIWOiX+l7uAnG2iD1lNHzxgdTwBb/HDRMAgPBKrCJvUQPkJ1TMtct0i4s
o+66Gd/GGYfxbpLfa6Yfv+ErmGurbjoWGWET+fapb+zbddMxyo6pv33mZp9v
0De9b9wwAExwf3AdDAaLwXDbZF20B984H5/InJfLGlmPNwZtP8JbMBhstVvX
sAM9fED6pvf3Slvwy+4Z1z55ZqwwBjwAA6m3S+b3qfAZK7yxXzcdx+yfMe6Z
diekH7/hKVgLhoG7YKSD8pwuOCLjgFsOTf3D83uEV/DBjHDhxG46dpmUcdD/
cAAMBrPBRvAbHAb/wE5HZQ7G+unUga9gLRgGVoJV1N02WAWWgMfgreO7hosm
Z3zwFcwEn9BrJ2cuMNiJmcuRw4afYBfjo8dG+syepN9gq1Myx6OGDevAN8dm
z+LdbdAwDazCpjgp6wODwUpwzoTgH/hkxuArOGTdQcNbcNf2wTBwC+w2JWsx
a/ALfPKJYCS45T/BY3AcLAYLWaOdg3ngqDMyD9jlkBr7wZUerPIHg69gqPcX
PW/fZP08wTawxVzBXFd2DV/Q23emretTBrfAK/DSe4Jh4A/YgT6/IbxfT/25
g7Wu6homhSvhG7js8sxh9uA7uGj94D3YFeaBfdSFy+ChW7uGz76SduA3WOd2
+2fQcAycA9PBRMb2cHDa21mb0RhhtBvy7h8ZNNwGy8FUcJY1gdduylgfHzT8
MVOlnYcNt8Al2w0bHoJ/4Jr7Mnf4CG6Cn/YcNP0LS+wX3AKv7BtcBMPwCbD3
2df7Dxqmoq/3CQ6BnX4SLAejwXLfyvjgNJjo5rwzY/hhpaeL/3fBQhsNGp6C
tXarcf46WAt+gVlgkScGDW/BWDAR+4LeXzhYCf6Yht/6hpH4KPgd6Jbdq/zZ
YK1Fg6fghvmCjY0NToZxrcnFRd/UN1wGE8E9T1X53X3DA/Q7LAkrPdk1/AMr
GSdM9EzXxqYPNPzz/KBhNLgLvoKhYCkYCW4yfrjs1kq/LPqFQcNxsNlfiv5z
sBrH02x9w1jr1thWrt/zm1fl7+0bjuF7coZmqvTdvuEiuAV+gk/grk8N21zm
6Romg3fgLrjtudAr2fN9w237FP/ew0YvVuWL963OKjmz8M0a9fyL0d9rFv2F
0HdVfm/x/K3oMUUv07dxfK3o1SotVr8vr/wHlb9ofYteLm2uHn6Y57qil+wb
noGFH89+OmPY8PHN9Wz9ymesdFvxrp4x4Oc7G63NqlkrOOw7RX+70qr0WPF/
v+j7i/5e5d9N+Zp9wy0wyIe12zec84G04Vz8qG/Ygx6+t3juGTT/jHnAU7Df
Eqnr99hBq6/dNVMXLqIL6Qe6Y7vI0xNyZs/NuT1Q3UqXO7N9k9nnVZrQN3lO
13yqb7KMHNu3b3KMnH+ubzKMjJoUHvLtqPCwE/cLz7mp+0bo7dPXieRA32Sm
fk+tdRs7bL+dpS7nSPv/i4z6fWjPf1xjf7TScVW2ceVnRV5tVW0sW7+n9K1s
EDlyRpUdGTl5fHKyZYNB+43vZ0Wfl7rmYgzmtfKwtf1g9jT7wn5/ctDW812V
Plk8H6zfXyx6auQombVZlV3VN5vxIvso/M8U/VLlM1fapepuknfxx8r/UOmr
Rf+i8k3T5gVpR7t/K3qFSncUfVfaJkPgS1gZ7t1i0Py5zt5Ng3bm2VXf7Nv4
ia3NB83vPFvGOmPW6pAqm6tvvl8+53n6JgcuKPr8YTv361T6yKA9IwvYYmTD
zYPmO1b/scrPzxzpZTbSfJEr84Z/fLUzU/yn03zGfbO/yKL5Qt8S+TRLZBAb
aoHk7+ubH1u+QHjIqwVT17lCk+Erp83ROX5vxsO+WyjtLBCafbNejWvSoNly
7EF+6UWyB9h8c0bmea7sL5mXNr86aPYhuYR3TPi/n7bYlWy3hdPmMH5p/OOG
zYZcPLLYupE5ZOcS2XvmQzexpY6OTPOMbGQrkhXvGjZ/tGerpNyarxF5uETG
vFxo8lT54pGf7MwlI+uWzbxesocHTY8dX/kP+2Y/vpx28HuP9L21J7fZnWy3
VyLvlso6G7/3eVt4Fi36zkGzh42ZvGcbrlDlH42cXynvdvm837+mTf2y0fA7
B/TAh9IvPxsZRP58a9DGzQZ+JeNnZx5Ya/V/seXIWHYmWfqDQXu+fuTtaunr
xsjhVbvp8he9VspXyTtaI/NdLTT7b83ohJW75udfNfz/TDurZR5rZe73Fc/b
fbMJN4x+YSd/ZtB0Cfru6Irxxf/DQRs3+5S/XTl7lo3H1mOTmdPYzIuOGpvx
0EHrhn/z6GJr8o/KX4teu6ryt/rW/rVF94Nmd12aNWRzzpb4AjvzUP7+QcPq
+mZbGcvhVX5Y+L9Uz//XN7vSXPki2L/8Eejdkm8cekkCbNDsT20rFwuYmPZ3
r/y4QdP9K6cOe1B77Eg2JzvxY+nX+I1FOTt0i2Fbd+M/KHXZa2xWNh77bquM
YYv0xwbU/yGh2WVL1fNBeH7St7r8yWi2F1txcj3/VX7rY+v0yV5iV7MZt846
syEf75vtNZkMGzZ++p2uZ1vS3fpmMxoLnY4+sWvPtwv/0tXeMG2+nvqfSb0J
od9IfXXpbjbnSV3Lt085f/v2KYc52I1sRvPeJnP6ed/Kjdn42bfs2MPSlvHC
A+zg87uGX/Acnro7pv0Dsybe4W+yDhcU/UTfbGP27Vy1Jr/om72rfJf09dvQ
bE82MH79sO3xKlPvk2nn6b7ZnfzYv0s5P/l7qv1f9s3W3nHQ6Il5l8q0N+kd
sv9Hg/aOxROe6Zu9yyfOJmYbs6l3ybtgYy9T+Qyh5x+2d8wu/nf2ifpP9a0M
NoO/YDXY7Li0ae/AO2xi2On18OA/fdDqe+b97ttPt9/hNnJyKTZg/NjW7cCs
M3wHG8FFV3bNpr4q63NQ1pZdyna+Jmt4cNYNnlIXPlRHm1d3LamrHn+IfQAT
jg99ft71AaHN/5Cs4YLDNh/2/0eKfiA0u5c/TpziwWC/y7qGXY/OGGDJSZnL
21kva+UdHZr3bg5o8Yaz0uaUrPmk8H8y74vPBGbVPht+uSr7S9/sYriKTQtn
bcmnO2jY1fiOyXg/mnL2/CN5PopZwKjw6vuGDcviOTM8N3bND3B86BvSproT
4b5Bs/3h5xPSjjX/TN7dH/pG8wv8sW8+gttSbuz8FHsN2rPJeU8n5d1Zn5NT
9qe+2frqwsbsb7bG8rBd6uLBz6dxbpX/LXUeyDgPz1qfmv3zQt9osY+p9fzP
ffMbwP5nZI4SH415fyz4nx+BzwSW/0bX8PtZeQ9TBg3349kwPN/smv/hrND2
/+mpKz8jtPfLH8EGgfPPzhzFZNgC3+3auz8ne0HZOSnfOn4Uz1/sm4/kB/ZV
cLJnCw1bTOf8tD01e0bsaGr6mjBsfhk82w/bevAdPZf1Ea/5b/Ye34e583uw
X17Oc36G44dt/fkyXgkvHwKfgzL+h08P27vjHzFmPpN7uyYbloqv5IXMxTuV
X5J5qY9ffGfH4l0h/OMiZ5zxV9O2PpcZNvuLH2fGjNn74tthG/2oa7En9ANk
dmwufqudhq0PddlIV2TdxKfYTw+R98Nm8/JtnT9odiP6ifBYnwuybx+OvCQ3
ycanBs1HxgaDPfiIJ2bN+YS+Z/8XfVvf/C/PpJx/ht+H/4e/xjpfn/X3mx+H
3+f3g+bfYfexC/E/kvd1XdphT12dvfTWoNmSI/+RXD/a0j5/0GeL5yt982mc
VXOfknfA38EvxYe2x7Dx8SvtOWxz4DOaah8Om+27UuxTPN7XDf30WB366bzn
L+dd86Xo94miX+tbX/wsqw6bPat9/iTxMPj/zGHzDYnT/XXQ/FZ3ZB2tJ18W
G/fOzJUfi9376675yr7RNx+ZNbkz7+6xPLMHPz9oPH7vNWy2Mz/YpYNmn6PZ
xGzjITU1bDaw8bB3xRrZuMbMtmR3HD5o9q9n7JHv9tNtU/Nih7IjxfnYlfxk
bKYxlS87bLFke2mB8LCHXhy0+09sRHeW8C+ed3VT3pe++CVH9t896Rfe/HH2
5CzDdq+IbSPuxxYa2V9iZuyLV4Pl1+8a3of7+Z3YKHjYLCeGZ3zXbBM87AJ2
lTbds9p/2OKI+jpo2OwosbF3D5sdgobHnReY/4hhw/1iSHNUvuWg0XC3+A18
x/a5N2OGz5Xv2jW8Le6yW9diWOwJmP/10NqH0/HAnLC3NRnFZWBuGA1+FI+B
leYbtvsTI/yNBz6HW8VdYGDY+6cZ27Yp1yb8LGYjXuNOCJwK37q/AePCnOKo
5sKOg3/xnNQ1bPt4+OHQJ8J/Uc64sw/Xa58tAJ/CpnApfCceA4/MO2x3TWDQ
o4ctrmMu8OSvM0d3SJ5I3WOGDV+KtfwnOPDsKp972O6X6GPSsMWTtLnAsGFQ
/PAifhhSDAgmg8d2DQ0fivv8NvQ5g3aHgE6CAWFBmAqOhhdHMaBnUg5biT3B
RDAUrMbHCH/hgfdgrWczd/EUPLDcQWkTzhQzejo0HCT2McJCz6f9vYNnYBXY
B9aBc9yLQMNCcMqfwnPssMU56FR3M5SP9B39B5/AkzAWfAVnoeGEU8OD/81B
i39YExjqj+nr/cN2x0L7/H/8+OSeeAq9S+eOGba7HfTxCcMWX6G/6W165ceR
w/jp3w8M250MekKc5KXsK7oFTaeIabwceslhuy+iTTrn5bR5fdr/SdZZXM27
ox+M84HoAbqBHn970OIfZP/FKVf3uGGL9xj//wZNLrsDIhbg/sNiXYsbuMMx
8rO688HfJY6AHqYcz8C7G7ZYjznyf70RfvLW3QuxCTaOuCS7hp/e/QT+Fv4u
9y3Idv4r5fxgfBD8G/wP4t38A+SPuL/yj3XNF/N2eDYKTRaJF7hT4a4mPxma
zOdf0A7/A5+FwZNjbG9233Gh2fjOO38B+5kcc1cNz/GZlzHTC+xDdoezAKeI
xZ6TutqfmH61SXa5h4b/7KwJfvKN//DfGefoztyJXfPfi2t+MeXi1DAbG1ps
l7xil4sFn5/yWbM3nHFxW2eQ3SrOe1rK8ZBFbGc8p3bNfsZDDuycNieH1hd5
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

        "]]]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
P1d2Ylum4YtT5Bwt0nsU00vOUVvT0RUHyDkq1vnQ1GZJrvceTo+7loM+O8r0
icXkvUIPnExcUgkX606fiGUlqBI6EvTqGxf7BINF19KrsKnu81W2Ch0t9Xcj
Mg17IbZX7NwH4g+uITOfl1mW4VFxeXxybh9kI2zfeFrxMbvfSbivpRaq172S
cqgkVwlcULEL5UNyod1Um3ojQr6N3XebVwT9NR+uNZPcWpiTnCArXAntqpMF
lkN0PFGiKogXkH00M0blbWGBa21wALk0WMZYqDj79GHWxsELHvu4uOolpKB1
pRIO6XtPPjbkw2Vsveordg0szM7H91sVoOGVT6DKbcIPxy+29nvQwPujuVB/
A8lnOmVn/Uld9g5DqvYODeOufo88N1ERer16RyThveKsJ3FOf1oQk7Ejafhp
MZYrmIf+///cVs+YOCltb8VjV9l7lrHFeHDA/bZLOx/XC+JsVePa0dn/XXNL
QAlcLhnK8gmPpRiVmbV4d2AyxD47WYYJpcNnRf6G8bDE+GMavaEABZ6fpu3Y
VHisD5v4SvLCCl2v2P0NHVhR8X0iy5qJTtFfe8wf8pBSphl6z4OOrOOTb4dO
UUH/Lb+hmvDkfSHfbZXSHDQo394V+IiJt5o0Sybxq4+a10t7ztFw7vaDClNd
KtI3Rwolkvf/NXX6mjXJZSLfhuWZJJeZC8+OuEXus6f+1UfWWg6WL0zsrQ5j
YvF2oVTX3zy0phtsGM2vgO6jlU2qdXScMy3ZcfQ6D7mZX4bGW6go/lrfNrOU
ippzpS5KLTwcnLim5SpehvQQz9keW+lwy529cgXhvWKjx5vWPuOg3+ky1YPD
hI26lXISyY9fv7ML28gc84xGQ6+FszB81OP3fKIbO0RwLD6fcEqS5ZY/xkwc
lxb+pUP6IvMu2UtytAU22Y+H6p4UE959/0vRl3D1nGeTLbca0Ou7PmSsuBDz
ZUPl5p/mw1u/YdGqSyRfxwVeTZ4qwFGekv3KsySHShtm7Iysw4tTbD/neYXY
s3D+lSqyl+8dEypR9KfiicdY/cZ5VLzU+JZiwyZ7tnjQ9KwCGx4uC19v7KEh
1EAz5DXh3ug5Wv/SRmvAuFLjGkO412tF6a6PTqRfSYGSBe96kHDEeP/usDKI
K21rKvjJg2be9eXvsrtxRpVxQ/l1KXyWjsg/9OSj6O9v1o6rXZDSMKXWXGZj
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
PjSnd9MhzTCt29NHx/8BBFGlyg==
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.765707721294095*^9},
 CellLabel->
  "Out[1214]=",ExpressionUUID->"a3cc7934-37e6-4607-a0fc-21c1cf879411"],

Cell[BoxData["\<\"------------------------8/64-----------------------\"\>"], \
"Print",
 CellChangeTimes->{3.7657077213097153`*^9},
 CellLabel->
  "During evaluation of \
In[1123]:=",ExpressionUUID->"3d828aab-2e33-4687-8d24-4e95d0cfa72d"],

Cell[BoxData["0.27416594754123425`"], "Output",
 CellChangeTimes->{3.765707721356544*^9},
 CellLabel->
  "Out[1218]=",ExpressionUUID->"d7a3e737-e923-44e1-8405-c9ff6a9ae055"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
      LineBox[{{2.989466500157263, 0.26652870469809936`}, {3., 
       0.2652873862468307}, {4., 0.19608224686507053`}, {5., 
       0.22011825118165174`}, {6., 0.19977092924750736`}, {7., 
       0.1936570873312093}, {7.764176800106703, 0.26652870469809936`}}], 
      LineBox[CompressedData["
1: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
qnEotZ30l4Q7FpzWDVQ/bhJyDvGnaYoZRhK+b5A6dR0m/SXBOqKKNzSN9JeE
V6f8M915pP8kcOp6sp7mEn8STvV2rBtaTvpLgtPvboWCANKfHBMOFf5mOYb5
c+W4964tv3EN7VM5xMcCpv9xgfQnh6FP8ItnjsQvR57zndPmQuq/HLVpD15P
/7Wa8cux0yh75/lm6r8clXoq5S1TpjeOAuvnqGPbW9i+5SowUnpUXxVP96kC
Rlv8TGPtSX8KpJtlrz8+m/qvgNn7M45/PiZ+BUxNUoOd9xK/Au+Kn077aimL
t1OBAatrrhve0fuwEmO+MJlx4zDxKyG1fuo9/1umFyhhV3/qVPVJxidSwrii
t8zJhPJXYnxLaYaugvFplbhkm64dm0v6V+LhjJJ1BfR/oVMJztm7eppCen9T
QTb5zZAfvf9xVRg5l67NX03zr8Iv0nl1u/So/ipUjzE9PrmS8WWpIAy0b43f
SfwqOLa7ZpTMpv2rgv7JScO5EsbXqYLlumcPthfT/aXGzNX3fAqcSP9qfGkR
I1lC+wNq3C/dyPVzZueL1PgzpjLLxpTmXw1rG9n+SSOkfzXec+6nXA5lfDo1
LA/cT3bdQvmrcaXJYMhgN81/Mm413bf7eC3t32TU13GryySMD8lwlAoM66ZQ
/slQcR+F7rlD7wfJ+EdeRk7uUcanTcb+v+75C/po/yZjcNo320y8aP6Skfo8
bm6MjuZPA8ttn7nPFdL9o8HqnKRekQfpX4O3r/PaB2fR/GugnFq3cPYb6r8G
IQ0bSnNoX2g12FVfZLTzE7rvNdjqmsldlEn7V4MLFm4DR7tZfpwULPbeuKVB
wzA3Bft7+K72a6j+KVB/dySTt6TW4z8r6KcY
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     RowBox[{"epoch", " ", "number"}], TraditionalForm], 
    FormBox["\"average square error\"", TraditionalForm]},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 250.}, {0, 0.26652870469809936`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077214503107`*^9},
 CellLabel->
  "Out[1219]=",ExpressionUUID->"fec85081-5b3f-4bae-a2c0-7b6e8d2f5842"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJyFmglwldUVxyMVVLbKYGyxQEFhxAVQETe0FwoVohXqhtZOcQdEIYp1o7VD
LY6iaMgTxBkXagRSwGp4g7E0IuEVUxGo4YWlYBJIIuRle0lHqHWDwnv5nW/u
/8ubvmG4/L9zt/85555z7vcx8K7cG+7tlJWV9e9jfx1vi2d+duzPLpfV/tub
fmD4yNHjv32G8wflRAbl1Bo+6ziMfG74vdTwg4bHHxcPajC8JzV/k+H7j3cv
bjGc/rUJzspKTZMTdR23McOp6WZuEXncMHzB8AXDFwxfMHzB8AXDFwxfMHzB
8PUxfGMZeAatzzcmfGPCNyZ8Y8I3JnxjwjcmfGPCNyZ8Y8I3JnxjxlftprzA
2sIXDF8wfMHwBcMXDF8wfMHwBcMXDF8wfH2MfeNi33jIjspTW9++cbFvXOwb
F/vGxb5xsW9c7BsX+8bFvnGxb9z46rlTv1S7KS+wtvAFwxcMXzB8wfAFwxcM
XzB8/bjZJjiIox3HmVjIL9VuygusLXzB8AXDFwxfMHzB8AXD188LbS5Tnug4
jsZC5079Uu2mvMDawhcMXzB8wfAFwxcMXz/vtblMeRC+Gjc1rui5U79Uuykv
sLbwBcMXDF8wfMHw9fN6m8uU5+GreUHjpsYVPXfql2o35QXWFr5g+ILhC4av
X7e0uUx1DHw172le0LipcUXPnfql2k15gbWFLxi+YPj6dVmby1SnwVfzuuY9
zQsaNzWu6LlTv8xUJ7IfrSs072pe0ritcU3Pfaa6lPW1jtE8r3lQ84TG0Ux1
L+t1XCdpHaF5VvNQm5uQ6rCnvV9B+/gSa9P9ywynukV2GGa89qdNr1NumPFg
xitm3AOpiatsXFo/ddam+9e09ztgz8HaLkxN1Gg4vW5S+lW1273e5gczvy/f
I/NWGWY8GB5nptpmGw9mPNjXV1L0lTS7aYs9/HoyeN4xjpodfLzL+rMf5L69
srLYP/19/4oaP/qjH79/jdSFAU/frwO+vr9xXyix85HJr/Ezfe6fq/IMdWiJ
6CNm/PR8IIef2kfPh/q/ng/OuZ4DMHFTn4P9/FpnONM58vNv+Bzo+UIOZjx+
jdz3++A8Igf7+6uy/sRnPb+aL5HDX/On8kbOczB84E2cph98kOOvyk/jh6/X
z0JyzY++3qtC+VLjl9Y9uj8w/gdP/F3jl+ZLP97tCeVPjY9aZyLH79Ej+QvM
fjQ+av7U+Orn3wKzg8YZP18lbX2Vaz5F7p9fjVN6zyuQe054X/74mMRrfe9R
IvfGErlXaf4O7pXEF/xAz6vWw3r+9XyAGe/Xu0mpd+ukXtQ4H7Xnfn4J3vP5
eomHMPx8e5WF4qCee/YFxm/B/n2wvn3d1dampiveaTjt73tD/dJ8S0Nt2n83
G2Y+MPMpZlx6n9Qf3CfqDGubtlfC8NrUgo2G0/qptn7MD2Z+MPthHsaD4XN1
ar8t1h/s66/VpaY/urvdrhHrD0aOXtN2LrYWPWV6jt54np52k8nT81YYZj36
sx8wcrUf8zIf69IfOfOBkdMffafXq7U2LT9gcjBy7Mlz2v/3PG3vBnuOHcHI
6Z/e9/7281Vv/gJGjr+wP+TMC06f10pbB38CI2dfzI8c/aX10mT6BSPH/5gP
OfZK80uaPcHI1V99+WrzV+KU+g/xn/X9cbFQnGCeWal/bLPnfj4qtXyI/6ie
sYPq3Y8fTeJfTeI3gX3xP7/+OiD1UG0o7vrr7QvFG79e2W9xmvXpj/60PmHf
+I9fp1ZKnK8yfyJ/4B/YV+sR7I09kdOfvMF+mM+PL22Sr1slv682O/r5LiL+
FcRBfQ5fnoPxP9bVefGnFBq0PYSJV8zH+vDED5gfPwEjJz9rPMO/mA9/ASNH
j7oe/X291ps/+P67LyTXelvjG/EG+4Oxn8q1XkZOfMFf8T+wf19oEvu2mj3A
jNf4hZ6ob9PzBN/Z0uPKQnWb1hXEJ/oTj/x8Viv3u1ob79e9EfObjv04avag
v18fBv7asf+X2L6Qoy/N/7TwgSfn1e+3w3CmPIxfYweeE8/Un/24mJS6LXh/
hR3Vv/17fGUoPvrvZ2tD+Vjvk+q/xE/iG/ESjH8T77T+Iz6iT3in9Rw3Hr5d
o3JvKrZ++BH2Qq55ya8rgvuN788Re+7n4ajEydWSjwNMf//+F5F7TsTm0/yO
P/nzxSz++/622eT4M9i/7xWbn+j3Ef/9TLiu1+8n9Meu9Afr9xX6Y2f6+3XX
52ZP/71FXeh7Bv7JetjVv3cE58n/PtMq9UdN6H2Lf4+tDtUP+n3A98Ny4409
OLf4N9jPp21iv+D9LPOCidM81xa5//613M4jccv/bhvI2Sfnn/7M59dV+0Jy
8g779fPBXourfvwOvnMzn18PV5j+s+Sn8VvjPeeBdXw9VTg/buwyOfEMObzB
mb4baJ1AXCWO+nVyQyg/+Pf2pNRFwf2edfw6vsb8k/yi9yN9P4d/o3e9Dyn2
3+sSX5KSH4LvF4rxd/Trx/vA79Wu6B37+v4Tk3q21HihT7D/HrhB8kRTCBMv
/HohafGXFrli9o1+eO6/Hwr8WzF5U+M+GH2hT/an58A/TyXy/r4+FFdYR88r
/ZgPOevDD8x8xFv/PUJN6H2RXwdVhd4X4S/+95FWiQ+lEv9KbT2fX43FBc4H
+keu8Q7Mer7ey0T/WwyjJ//9QInEoxIbx/rEJfbn67U0VAf4+aBU6tioG9j5
vIJz5i5yPat/tO7Z7XWh/zfwYuTqE1YW1NvzH995OHp7eb27bmF+/mW5QXz5
Z+TwqSu+Cc7zh2fNOZT960/crUfu3FR7dpH7xx1PbD/xnLibmt01b/nHa9zY
x4fO3jHiczdt44aX+5Ul3DubZ73Q95ZG13f54G++7JFwnfvN2lryy1Z33buR
7Im/T7gx43MWPFtb4+bvmbnzjJOa3EWrn5+zvbLanbjm23PHDW5xm5aedPSa
Z/a6Rw5t7fXJglbX6bHlFU+8fsAtejV57xsH693F+wYP+qrygLvk24U5tXvq
3SNH5v514lv73aT3ki917tXsKo7+ceCg+ZUucXTjqZFxSde86u5Do4esc/f1
mfHsQ7971dXcUzond+cHrkf++MKpX7zhLv3dmGG5jZvcwsaitf17rDJ7X/2r
t0/IznnbPTR5+vr/xIP/93XFwMte/SZ3Z+h76lNDtnTvPXGV1elHrxly3tzP
6t2Gix55rnBp0H698pbRp01KuE6T/7yhqajeVc8bmX3m6EZXtLT3k51OSbhD
K3f0nDe62Z2/dH32R9cnXE7/gy2jpiXd/ZMOf3zhb4K6refAF14e+njClTQM
v/L82QcsT939zPCxT35X6/oc7vp1478azI6zevW9KW9WwvLLtS893/fcFY2u
51N5b80vDL7fwOvwlnE9t41/0fx3zM1bqz9953Vb579XnND9usLgO+Lwa6f+
cNkfGqxO+lu027DJx/Z31flrF1Vm73RTrrq1d+m9K9zpF2xt6//g267fRQum
3TRuoTvj7IqxH/Vc5c7sOqTsqdPzrO7u88V3wyZvy3Nli/N/tqPzfGtPPO17
leOWLnGjZ/TPP/ngfDsXbZtmnDvqwqjlsSkD8pquvDNhdpu47fIjDY/Ot3P4
ypfT500oLHIrByw5eWSXctf8ZnPuLy6Iuq5PXFs5+8W4Wxt3M5pGrHHvX5KI
3LijwpW8N2bJawXvuKLbPvnqnM273B1devdaP/YGt/KuBY17T93lJr/y5u19
G5aYHv/+0J+2zeyWsHvB6a/1Kp4+YL6d54snNe6LNC93dbufOWXFgFLT+1U/
zb2/z7sbXeIvRUOvX7PMzmXOohWucVTC4lVr9c+L71nZ7JaOyH5sSZ/9oe9t
G55e935d4RqL23OXH6oaOS7qLu//6PDXjjS77J11XW98IOFGxRafNH18ixvW
Z+DUh3ODeuO3Dyde+HhNk+syeFRZ9etV8p20yn20eNHFi1e3uLkFfQsXrKpy
hz+8r+vaouD73ftNs+esbUq6iTO/P+XWp4N64sGN6799eEKN63SwS94r+U1u
RPefDO3Wfb+bfHP59Te90ezW9Zh25O4JDW7BvPXXDKusdyOrNjz3XL+tbt/u
ZSOebChya257fvbWLz51h/bc/tj6Y/b68K4JJdEPqt3GHyTLWke0uCmxZbuL
ugXfd6kHzttcdOkFbfXuf/z9fyM=
    "], {
     {GrayLevel[0.8], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNm3kcllMWx5/nRpZs2caSXVSKhslSVEQUUiIxJDWUpIhkKRVKmxayLxFj
H2NfxtgZS3bGFDP2bezLWIcx59v5vp/8cT73vPc5997z3Ocsv3ue591o0Mh9
R5Sqqj5fqqqaRHteXVU9gl4L/jdBywQtG7RG0NJBTYOOj+s7Bj0S/Gsx+PVo
b412Ta8z5qi4vm3QA8H/I669Fe2d0X4QbSxVrRZ0b1w/JqhT0BdBewV9Hv07
BLUOahO0bdBmQZsHfRX0cNAqQQ+F7EfR/jtoLXVcLuji6B8R9Gnw90W7Z9A/
gx8UtG9Q36DV1YH72Smu/yfaVYMeDX7voMeCXxedg380+BOi7RX0t+A3dfwa
6rWm+7S5Lbq09DrXPo5x2wW9G/w2QZs4x+9skf3W/djY66u5Rgevs84PQRsF
tQ86KebrEvR48Fv/atxvleH3/kG7BXUPOiBo96A9gi6L+7o06IKgbuqELjs7
nvn2CtqRvQk6LeQmBnUM2sXrjOkTv7+Pdkv2J/h9gnYM6lxSxy5BPXyWHYN6
2nYKuiPoxqA/Bd0edIO/9/T6jurewee/qzp28B62d97uXt8uaFZJ/btyr8F3
DXoi+BOj7RHUJai/49Grt7Lc94H2oWMf+3bRVrq5/n62u2lHu3jtIMeh+6FB
+zj3Yc6F7Emx9q5BTzKu5LrIHexe7x00N/rP4ZkE/d75uNZKm1o7aKBzM+/Z
JecYENQ6bKFV0E3uxeaOOzJkPo52XfYhaCh9QSPVlflGBx0edETQ0UGHOCey
/d2bEfYxZoj21N+5DnQPxniNcccFDQ76g8TeYY+bhT5NQ8+J2IxrMmbD6C/R
Pz74UVX6KuOPUUf28lhbrrUN+S2CVo0xR1W5X+zlMHXh92TXQK9J3ie/348x
P0c7NuiMoOO99l/vc1zQqfIjlRvu3gx3Hfbo7ZinqlN2WtDJQafwrN2XYfbR
ouMpIbtP0FPKHeV8Ux2D7Jnqy7OaYsu1p2Nc36DVg3YJWjbotOj/C74c7fxo
r8KGgs4N+mNcHxe0Mvca9ETQGkHNgpavU9+53j97s2L0LYh2etA5Qad77Vyv
s5dXeo1xPxALg1arc13s7k8+s74+7/lBZzuG59xPuzk9xuwb9GzwE6LtHfRM
8JdH2yeoSdD57gV7cIEt+3SeunCNmHGF6zwXYzYIWrPOODJffZ+P3+sEPR/8
U9GuH/Qi+sZ+XcL4aK+PvslBLYL+HDQ9qGXQbXH9etd5OX5vHvR39tZ9QZer
bdF3rbj+mzr1ZT+uUnaj6NuwTtm1Y713g/8s+CbB/z34TercuysdM0QbwFaH
agNjtNFJPpdzYsw2QYuCvyPaWUFtg+4P+leVuXtr4mHQwuC39H7+gr7Rd27J
GHx4tH8IejX446LdljF15nByVyPn05KP3jI3tg26LWRXjPbVkvmNvE4OHV5n
rifvXygGIPct5Rzktn+LMcANY8y55NZ7q9STnEA+J+6RU8nR5Ehy22fBPxz0
iXOR98h3I831DwZ/FM9XXDFKXAFu2Dv6jxUbLOPca6rXps41NmRO8Tk1sMVy
ypGHycffVRlXW1dLcv9myrbyN7GX59zG/WvpGieLJcjdjbxI7iHnEe+J++Tm
HRzLXMR08hy5l7yzs3tBvmuvHshv7z1sUy3BBVsrx/rkT/JoV/N05yrzZhfn
eST0+rJKDIbfDNJ3fuuaXavEAuR58vSl4gLuY3K0k0rign3EBju6L9u6dgP3
oB/4BUyzVZW5mXvfSVnyOnmWnEm+7OW9kbt39157+LuTe7Z4H82xe7sO+frX
+buv44lD/dSjm3vaobGm90qO7e21ff3d1b59XLu/czFuf9fo5jqMGR/6HF0S
K4+uE78+ou4HOp4x5MjBjiG/kefIMY2cw96Qd37v3IOVAy+AA5AFNxzsvaPj
wCrzNfmQHHSk44/yN/GFWEpMIQcSV053neHKcW/Eo0b8pj1c3ZmvgRGGKtdH
3Qe6R6w/QBrh/TCOnHZitSSvH1MtyZcneW+jvMZ6o9XxCPUe7R4cp9zi/Op4
5ppQLcES5MmJ6jJSPQYqx2/y/lh14xr5fJx7MNZ5l4m9XRTPr02dOk10jf1K
yo+UP8Z1yXnEc/IQsftM95qD1iZioJVKYohiTiZvTK2W5H7GHFASGy1V571N
q5bghanKfVAnpnnKNchH5zr+fH/31A54bntqBwdVS/Lr+T579CZnH1gSq4Ez
JjlfAy/MVe4b8UwlnprmXn0vzljgOHIgee0Kcz35vZE7uXaGeR888N9ofxRX
nO3+keOvFDMsY469Wp25Rn6+3v0mj5L/T60T0zzNOtFOFAudKR54AbU59JbM
+/+rM38/7/1d9avnd6NrXCFmuEfMMNh5JmhLx2pro7TLQ0NuQEksgX7ktVtp
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
lCfmHOI98A07fZcpc6E8sv8HiHPlVQ==
         "]], PolygonBox[CompressedData["
1:eJwtkkkvBFEQx7tfXBHScSRODn1ynLODuBJHl47EDd9iMubuRIh9bEOILWMX
a0jElhjG2MZIrN/Ar1Qdfql/9Xtdr+r/Xm3U1dzpPM8LoQR2Sep8z0uht9D7
0EDeT76GvoIndDlcoh8hBnn2XBBPoBedZX0PXYAeSMA3pKCK9RrYRt9CKXsD
4h0sSU3yVtaP0POQI28iH0CPQhl5HhbRm1DNWgJmnO6RvdLDMXoCKtEh8R4O
ocXXHtbR14D8P/PG6cwyeyMfD9C/0G01fmR2CHyt8YxehT5PPRKvBp3+2w7j
TnuUXmXGBfSXeSUzfDqdUWYVT5fRr7CCjohvkBYPyNuIL7IGFb6eOevUY/E6
w7cz9KlTXYRzqxHZHRTMg9BmyDj1TLyTmlJbepbexdMN9JjTu47ZXQ877SUO
kzACHZCEaXiX/22GOeID1NsMabvjwO40S5yytyF7cjDk9K2J5x92Rtze5I6d
kbQzivAHbzRpmg==
         "]]}]}, {}, {}, {}, {}},
    VertexColors->CompressedData["
1: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
4f/D/4f/D/8f/v8B/v8A7DTsrg==
     "]], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7657077216276274`*^9},
 CellLabel->
  "Out[1220]=",ExpressionUUID->"aafb7f72-e7db-41c9-85fb-68aef3f18f32"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]], 
        LineBox[CompressedData["
1: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
45cs+6+E2eMaS992/j8pG+MS
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]], 
        LineBox[CompressedData["
1:eJw903lczAn8BvAvsSyibEnO2XLGauRIqB6SRDRFl67pvmtmmo5ppmmQHJHy
Q7ln1zrWtR2WHJtx5VprLJa12GGtRWyhzbry83v9PM0/vd4983w/3+fVqy+j
M/zj2guC0NxOEP7v5/9/mty7fXt7m9/AOvdPv0D9cMMzZ5cfP7kzJvt8WHGk
4tgnW6CP0n3KkK9oK6R+dvyPO81HP7k39NvyF3S7QfdDuxVNiTEnaBG2VSl/
ElXSdmhvtqSx4Wt6EI7cynv6di09BMra+ksXiulh2JHg+s2bhbQDdmb+kuql
pkdiTmifKq2SHoWi4iDrvHRaDLcPEbf7JtGj8WF6zWKfWNoJsls/OLyOpMfA
c7s6uGcYPRYVL/SuxcH0OJgdv2kZEkCPx6P5t7cr/Gln7Pu5k4XRl56AIY4b
0pJn0y7QilqrJ82iJ8Im7Mslbt70JEzq1W5ouhc9Gf3sQnzrPWlXHLZ/7uAx
jXbDqIWJ0+5Npd1xKnRP3uYpNBC4R/ZKiU/WAdU13kPj3JlPwV3to+oUN+ZT
4LEwRFXkynwqDo19v7xmMvOpWPm+z+Dnk5h7QB/VtM+V1nnANntIVflE5tPQ
8nbT7fcuzKfh7WLt+3Ra8MQbszXvH09g7gmZu9GURgvT4So3P/Xamfl03Jn2
3/UVtOCF7VmDIoe05V4Iv+x18Mx45jPgd7HCI5nWzcCFuXO0X7Tl3ghWuDUY
xjH3xoeb6/sqaGEmnged3DOkLZ+J6akTp94dy3wW7o3YW1JB62ah7mFH74C2
3Ae6J7vFVm25D+r+Ptj1+hjms3Gs2H9HOa2bjZ3NNr+EtuVzkH14cdyXbfkc
+PsVTHrkxNwXTkd+c6qkdb5YJ3n5laotl6DqdkBPDxoS7G2IOmfe9n0JXDe1
n/Tb6E82SDDYJiloOy34IfXtz90UNPzgY+3u407r/NDzTExn87a+HyRL54/7
Xcy+PxwGrTj3HQ1/DHy7tDaX1vkj3P7xOy/a4I/y244lNm39uVCbV8f97cj+
XHRQFeQfonVzMT12jnEJbZiL4SlJIcG0MA/zZm61Gt7WnwfHpLGtr0exPw9n
m6/3vEgb5sEuqsR3Ey0E4LbD0ao0GgFYetDM2b2tH4BiR787Fm39AGyZefab
+1+xHwjN1R8XH6ARiF8ajxQW0bpArDRL3xJMGwJhPXjPFYe2fhBqLBP6vx/J
fhAmr6nRXaZ1H+137M3XtCEIx56dWq6khWAUF30p9mrrB8Mtw+2JbVs/GE/F
a2qfjmA/GNtP7N5wnBZCkPdPr9LVNEIw50VuRRytC4F+rLpmQls/BD+PuGLq
2tafjw6R40V/OLA/H5aFafJqWjcf8w+6X1tMG+bjxin1jBBaCIVZyb+XRrb1
Q9FdszhWaOuH4ta7Tt2uDWc/FKd7hZ/eSQthOGuWuFJNIwxLb3ZP8KV1YRgy
bqKffVs/DHWt12a9GsZ+OFaLfgq8SCMc1vO6K7bSunCYNxZvzqQN4Rh8aPxv
Xm39CEw50m5wv7Z+BBxH3NM1DWU/AoOmXnh6mjZEYL2oJnE9LURiWO3q5jQa
kXA5IC2d2taPxKM468k2bf1IjK7+7lXDEPaleNXO5pSBFkmxf0zQlrU0pPi6
JHZZMi2VYsEhl0J3WifF8B1XSqxovRSKTUO/ezyY96Ro7e98tY42SXH70dtu
a2ghCmaN8sAkWhSFKZK137vRiIJ5QHRvK1oahZqk66WPB/F+FLr0aeh9nNZH
YZe5vnINbYhCYIfnQcm0KQrC1VvdQQvRaJDOv25Ni6IxYHvqngZ73o+G47fd
y07Q0mj0TnctKqd10Vjcr2V5Gq2PRscr47Z60IZolNe8PmlLm6Ix57lbS6Md
78fA6mh7l3paFIPF06YWb6IRg/an3jxV0NIY7EsdHuFN62KwM+fi3YG0PgZB
tnfTW77k/RjsXRzR/RJtikHxP94/bqOFWExftFmdR4ti0UsW6O1HIxb6O/Ih
w2hpLHY1Pe35QcT7sSg9f7r7r7Q+Fv0LW2z30YZYDHEuGFtIm2IxqTk0IpQW
4rDs7LJyJ1oUh+WHOpo+pxGH66d/cr43kPfj8OHx71tqaV0c0vuKrUtpfRwc
vOo3JNCGOFyat9HRnTbFIW7w3qu9aCEewf/zb9E/A3g/HgEKpXc9jXi4rhrc
dwstjUf/yo7vsmhdPHqvsXw6m9bHI+ylZ8Ng2hAPh4Ktr9/35/141N3rY/Mr
LSQgou6Ax35alIBJVUkFRTQSsMF3/IUIWpqAbUNtBjnTugSsNnRe2YPWJ6B8
Q6eOj/rxfgJejbJYYaBNCWhpHGC3nhYS8XKG+KycFiUiagvUM2kk4s/ZPm72
tDQR2O9r8a4v7ycirYfX82u0PhHfHxl1bx9tSMTSF+1NRbQpEQ9fHH8WSQtJ
EJ5HdXGhRUko7fvXuJ40knBhg6esoQ/vJyGttODwaVqXhF9sVlluofVJeO0p
y82hDUlYN3zgPxLalIThF8sVDrSQjNaRv3bsQIuSET7r1513bHk/GWH91gQf
oqXJmFDatXcZrUvGmLIJD5NpfTIOmtmcmkYbkhFV/83+AbQpGbbVN3b915v3
U9B3Q1XVL7QoBZY+I8/vpZECm1KPxiJamoLLw17aR9G6FKy4Oj5hEq1PwZgZ
XQ5b04YUyF2SbJtseD8F5+b5Lr1AC6momFrbcTstSsXgHVvLCmik4uf+7UbO
p6WpaJx689pYWpcKq92iFT1ofSo6/Hnd70kv3k9Ffe7LwWdoUyqOPld21tNC
GvZdDnidR4vS8HJV2X8BNNLgu8f+s9G0NA2T13Wy60br0vCHYYLP39a8nwbL
8urCk7QhDUU62cXNtCkN501pIhUtpCPOZseiebQoHTcLrP51pJGO4/IDyq60
NB2XsKD931a8n443k7O3nKT16UitLpmxhTakY//jM0IebUrHrqE2ZwNoIQOH
9+VvHE2LMnDicHO+OY0MjCjKSX/8Be9nwHZmu7QztC4Dvi4rVV/T+gwEFfZa
k08bMlAaXHEshDZlwMlk/nIcLciQNVXh3JO2+OhthmX/9OT7yKAY1Pz4Ai2W
4cSfnYJ30pDh7ruWq4toiQyFS4+FS2mpDAc2zf13Mi2T4bTPoQ22tE6GpO/u
z26x/ORSGW4YjN2v0noZDm7R3PmerpTB0+fe4RW0QYZA4+ttSbRRhhTHExun
0yYZDClOX9vTTTJ4LZ5xQKAFOS6rWq/dseB+OT7z9DU7SovkyDGNc6+gxXL8
6LFvaRYNOeJjK//wpyVyWI2fOE1MS+Uo2e150JyWyXGk6tK4hh7cL8c5l0sn
z9Glctg6uofvoPVyRGkGdCykK+Wo6hJ/JIo2yLHshEW+O22U43yR7ez+tEmO
B25qh7fduf/jvZ/E1r/RggItluPMD9EWCmz5Z2HPtbRIgdIp1oMzabECgY8e
TvOjoYDL8RdyR1qigP/XY/aa01IFlid++7LBnPsVOPDMfcYFWvcx79xu9y66
VIEjq+73XkLrFfgv+I81cXSlAu8mvOg/jTYosNGs1wE72qjAqWLPoHa0SYGS
bepOpm7cr4B7v5rTdbSQiYj6hyWbaYtMHJVbxmtoUSaSn301M5QWZ+JeJ+dJ
E2lkoqlkqIstLcnETd83Hv915f5MeNjsDr1Byz4+r2q07iCty8Srx8VVa+nS
TDiuqGlU0vpMPIzeNnEeXZmJigmBq8fQhkyE36hv6UkbM9Hl86aEF124PxP2
5T/9dYVuysSzmUGyKlpQIvfZ8k5ltIUSu7yi98hokRKj7W6GSmixEns8/+4t
pqHE1rzl93vQEiWylx2rbfyc+5XYMDF342VapkRGYO3y72mdEnHbc4pW0aVK
vGisLMmg9R+f3xqxzZeuVKL/Bs1pR9qgxKTiDi960EYlHmx4PqKpM/crMWO1
m8JINylRN/Hh6UpayML98D/ty2iLLFScEa+S06IsdJ58/jN/WpyFvcU7lzvR
yEJUQX2fL2hJFgLuiw697MT9WbDXVUVeo2VZuDAo0+oHWpeFuk3S62vp0iw0
HlB+k03rs3B64m51EF2ZhS/fvZVOoA1Z0J6N9beljVkwpfzh++Yz7s/C1dr4
kN/ppiz8j/bf9GO0kI1HK4tKN9MW2UCtVZ2WFmXj5OUNryJpcTbG7fzCdQqN
bAzsmVdiR0uycfjBuQYzWpqNty/fzPurI/dn4xvrrhfqaV02XEXNM3fRpdno
01B5Yxmtz0b8nMmyFLoyGwPsy6xm04Zs2HnsPj2KNmZjxLKFOgvalI17RqsZ
LzpwfzautIT2vUYLOVDe9H/zA22RA7d5zQ/KaVEOyrwn/a6ixTm4WWF3J5RG
DrLttz9xpSU5uHLxRzMRLc3BvKyEYe1pWQ6KO2wOfmDG/Tl4HxGypp4uzYFf
Svnvu2h9Dtwt/UcV05U52O5SuCKNNuRgwc/DWnxpYw6eHJmY4kSbcuDQcKDB
im7KwUGf1Tmv2nN/Lsb8fKn7LdoiF0mR0VXHaFEu5M9nRm6lxbkoy17YeyGN
XHjdN7sTS0tyETL8wl4vWpoL4xTjEgdalou3dpbp5rQuFwVnlkQ2teP+XIy3
dwy7SutzEePcPvYgXZmLita32etpQy4OZtus1dDGXLRu8a2LpE256J679cVU
uikXj83aOw2hBRWeeCo0n9MWKtye2nDlqcD9KjwXEp2MtFiF80v+3FxDQwWp
KdiqnJaoMN361No8WqpCsFN/uwhapkInz+jDU2idCl+FrQwdTJeqMGTp+s6f
03oVzt5aYHj64cin/SrIEqYsMtIGFZqnXpUcoI0qHFzkNLyCNqmgnzK/m4Zu
UmHAOs83kbSQB6dNjS88aIs8JMrmtgylRXn4TZzaoRstzsOY92P7N7V+MvLw
Y8suXKMleZDgVHotLc1DRKt25yZaloc3gTee6GhdHk7Kz06Io0vzPv69ZpZ5
0/o8HFsT2vwVXZmH6OZ/o3rSho/vc8bqVst77s/D6/E1Yb/TpjxMUf/0+Djd
lIeRZ0IXfEsL6o//32H2y2gLNZrdzl9Oo0VqFN3ZXORPi9UYFHndy5mGGvEf
kr/oR0s+Pu9tyGOBlqrxzerN5/96x/1qzOo4+sAFWqfGq7U9vvueLlXDuHTs
rjW0Xo299hurVHSlGuP2u52JoA1qHJb3+dODNqoRcnh41+G0SY2mKwmu3ekm
Nay7GFUv33K/BiOqww03aQsNgvt1s6yjRRpoN/2aso0WaxC4tNa4lIYG/s77
3NNpiQaH2lfWzqWlGqzyPDbJhZZpUBl26dwAWqdB3Y67kR3oUg3EhQ3Ckzfc
r4FLUOOey3SlBs8X/SX9gTZoMEF2fuBG2qhB7aJ1j3S0SYPXQ2ccjaebNJCc
+63chxby8ejKdK0TbZGP4zXL03vTonzsv6tPbH3N/fmIOlOY+oBGPgJuj867
QEvy8Wz9trJKWpqPyOzr1etoWT6qG07e0dC6fFzLSugZQ5fmY+XqOok3rc+H
5sSpCke6Mh99ChVPrGlDPurD6z3f/cf9H59/9cju+7QpH2Zps2zP0035WF+d
WfY9LWghdXT8Yh1toUVrhmqLhhZpYWk2Z0wMLdaih2rXFW8aWvjEFqrEtEQL
85A7Dja0VIu0Z/v/ev+K+7WIP9z83QNap8XDwN05F+lSLaqjLs6ppvVaqHPm
Oq6nK7UwOrvZ6miDFsOnLemWQBu1uOfu8Pkc2qSFq9Guxzi6SYvYTakD+tFC
AeJnmzmb0RYFmFxyP/hJC/cX4HjXzwqv0OICVCmTamtpFOCsqnPL1o/+X9T5
Y2o=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qf6p2J4d2d2oS/xUPD3AY5XEXHX5G/as0FU=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"epoch", " ", "number"}], TraditionalForm], 
       FormBox["\"average square error\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1000.}, {0, 0.2872102521359366}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N = 16\"", "\"N = 32\"", "\"N =64\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7657077217838745`*^9},
 CellLabel->
  "Out[1221]=",ExpressionUUID->"400f1ff7-7076-45bd-a09b-12b94fb79da2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]], 
        LineBox[CompressedData["
1:eJw113dczv/+x/FUEknZ2UWUkbJD8kTRQElLGe1d2ntcXXV1dbWF+EpkJ6Nk
FSEqsrMzi0R2Q7L9+v1+r9f559zut09vL88et3PO96g5rbdwlZaSknolIyX1
v/8+67/u9o8HDMeQY5OUbh+4OV/q//6livLIeRPefL5BHg3PRr+j3ovY6tAa
ZLj0VuF18jhkbTPtfXgMWxM2Gr2P3Si8Rp6ApvxVgmo99iREGvw+1vTwKnky
FGK6hc8NY+tA3ctOOmA4ewqcNFz3bayuIU9FTe0/t78B7GkQaK2Sm6fGno6w
teVzZO9dIc/ArwlJlmpi9kwMWtuiEjKPPQsK3uvef+y4TNaFa8Nvk+hi9mzs
XtmtcZQvew587zd9vTORPRePN3+M2vKxmqyH4QUPnvgUsech+Pen3quD2fqI
Kjr4z3Euez7Gzg90kciyAdk9wjG3b1f9vwXA2Y1qj2fmkaUW4IjZvhnnffj7
AjipK2Vb6/P3hbjqO3SndD/+vhAuOj5GOW8r6fsiDLVrMB19gSxYBKsbt77Z
bOXvBhgmvqThGMTfDWDfzzv6rhl/N4TTsQDZr1r83RA9v0faLlfk74sRsED/
r/7nS/R9MT5VzBNa15KllsB+pnli23H+vgQur6u0y7bydyNcNi960hrL340w
+4mKjr0bfzfG0PNSJsPM+LsxDrlvWys7m7+bYEvJ+2cj1fm7CWZuKr1irMzf
TWG093Bs1J+L9N0UpqEp/XI/kKWW4uKED6pbn/D3pWj0XrBi3TX+vgwffC8t
bjjD35ehsunfc4XD/H05Tmv9mnE/j78vR26/5Uu0svi7GRoWtl5WSODvZhBm
xda5hvJ3c4z4qzRuqhcZ5nBMPGfqsZZ/3hxGlmXLpVaSK8yRGN9+p20Jv1+B
4dEyt3Xn8fsVmGrtcPj6VH6/AtJblIbu0+T3K9BvjsyQCyP5vQXMvJa96z+Q
31tgfqCUwg4Ffm8BJ5my6bbS/N4C3yy1Leb9qKD3K/Eu/F2sUQsZK6FaHSIb
8pYsWIlzd8Jszr8gV6yEzHDPQaoP+b0l5obry+fc5PeWGJ0lN3x4Nb+3RJTu
PY+j5fzeEt4OZpONT/B7K5S6nn/QfIjfWyF6Q3y7ZA+/t4Jypqzx+Fx+b4Uz
ffpeqczm99aoGRqUZZ3C760h/ln/+0U8v7eGU3WP7XYR/N4a70PP6F7x5/c2
8IuVfTbag9/b4HzF2FrvdfzeBls+LNqTb83vbXD3Wen4imX83hYbbF7EXTXg
97ZwNpmjUD6X39ti4bC2yC1T+b0tlGX9r9iP5/er4Gc4cUpPVX6/Ch9Opejn
D+L3qxBX1FCqpsjvu35+oLggQ4bf2yF/rWV+bfsFem+Hc5bFyx0ayAI7DNrS
WHD7BrnCDndG6S0dXUaWskdc4Q2V1fv4vT0Scw3HxG/g9/Z4+uL8/s0x/N4e
FzdXfMvz5PerUXblbsAOK36/Goo97wfnLuD3q+FStdTsPy1+vxrr9d7pbh/C
79eg5zhdo4Lu/H4NBm284HWx9Ty9XwNDF7+1H56TK9bgxQC3w+OvkaXW4shl
pX1xp8hYC9cZHmtadvP7tdhU6nEkNpPfr4XHifXaWtH8fh28Difjrwe/Xwdl
96BuX634/TqU/TG2VV7E79fBZuCBNksdfu+A0Ru0jSpHkFUd8G+Pa95qBf7z
HBAtfVRu9I9z/28HB5xtD/Qe8JYscID6z5WS6Q/I+Q6oL1jZKawkVzhAt7lT
U6qE3OCAufYrAw7nk6UckVLd0j05k6zqiG66ud02xpLhCE+ff243ffm+I16r
qI+ZtYbvO6J0XKlS7VK+74jee2d2bNHj+46Ql3mZljGJ7zviXU2W8Phwvu8E
/zlOoXKKfN8Jsi9n/036U073nWDUMe7A9M9kBycEPt37rU89WeAE5ffnvAfW
kvOdID7RV7DkIrnCCXnyFwv2lpAbnLCvfIHNpL1kKWfctxz+8/lmsqozHnpv
/lMq5vvO0D9icKM8gu87Y0q/3NvN3nzfGbZtq/z11vL9rp9f/XvQaXO+74zx
CgMm2S7i+85In5arMmom33eBkqHeYoXxfN8FufuzRg0fzvdd0LnKRnmFEt93
wY81e0UHpfm+C+o39Pys/u0s3XfBiatlZZfekStcoFWy3074nNzggr79txk4
3yFLucKyxeSTSzVZ1RWOf/xuJJWR4QrvazX2NUfIDq4wlJ82ePxussAVZjMP
Rhfk8H1X9O2+vPfiVL7vitai9UbdBHzfFWNSUk4+Dub7bnjfbvzkliffd0Pv
ZvH8hrV83w0Dlpr6K1ryfTc4ja/+YWXM991g3LrUu0yf77vB5L299azpfN8N
b1+Kl98ez/fdcG9OzDvBKL7vjhDf7+dNB/J9dzxXvOChrcD33THdY6twYje+
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
94fhwZFg9Ton3h+GfpJFUy1X8/4wjHPsc6zaiveHIe96fMokM94fhqVqXgeT
jXh/1578Gz8eL+D94ej3T8pTdS7vD8dUg+tN9tN5fzgEN0Ic0rR4fziOm364
dmwc7w/HnEO1KjdG8f5w5O7YMf+pCu8PR8+rZ2bW9+X94ThtltX5qBfvD0fj
iQMx1TK8Pxxhj89dPvD7JO0Ph5rMk7uxHeTicIiuOO01+UyuCMeVc1Og8JZc
G47hT/YdqagnN4Qj3/bEN686cks4MOq7Rq87ZKkIWAkumO+4SlaOwBoTlQSN
S2TVCGj0f3Jv3xmyTgSai47aDTlORgSqbqpMFR4im0eg567wsIY9ZIcIaO3t
Yzp9O9k/Avscf9+O2UQWRKDfkkWTzqWRsyKwI/5iclsi749A9ZtJfUfG8P4I
bPms8HV+CO+PwKnLh51sfXl/BPLFQze4u/L+CJzdonzKdw3vj4C18cde3la8
PxJHL22/vm4Z74/s+ie6DTOXGvL+SLRX7UvTmcf7I9FrSZ++ijN4fySWhqDn
q0m8PxJXRz8rL1Ln/ZE4HZQdEjqc90dC+aVC3MwBvD8SzhNujmtR4P1d95cP
K98jw/sj4bD7ReaKXydofySOqIq+/mgjV0RivvzreXnvybWRuPFa5eLcV+SG
SEgN8br/4DG5JRLzZDRue98hS0XB/4G4598asnIUmmalP0urIKtGod/t+l0q
pWSdKKSeLTq+q4iMKMyfuMlH8wDZPAqP+nprHNlBdojC8pGz5+vkkP2jUCLd
S6kknSyIwtjRd1qnishZUWgtNVl4PJqcH4XJG57bTQvm/VEYaB2z+bg374/C
hZx00+nOvD8KnsnVD07a8f4ubxmQpmvB+6Nw/764utyY90ejcJlO3cIFvD8a
D2x6Dbmuy/ujkVbf9NRKh/dHo9cFs6BGDd4fjTXjo3WCR/H+aGRqT3WWH8z7
o/HZrXRVfh/eH42Ek5cc9OR4fzTUjR0rn/05TvujoVreci2+g5wfjW2eChcm
fiIXd71vi2p68ppcEY1l7TrCzGfk2miMfjflkfF9ckM0agw2q/e6QW6JxoyC
sILaSrJUDGRMv+7IO0tWjsGk+JELA46TVWNwa+3vq6aHyDoxyAsU+mjtISMG
yMpaMyiXbB4Dhz1fbsltJDvEYGqCecvfFLJ/DNTPm375KyQLYrDL0qlTLor3
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
dkq95PlvcnEKSq49+zblJ7k0BeXyy50lneSKFJyLfdXW+JVc0/XnqyvsWtBG
rk1ByIP5nru/kOtS4Gn6b7HcJ3JDCkoH357h+57cnILQvLlTHr0lt6TgR6+6
6QZN5O8p8F2pr3fiFVkqFVM1lRZpNJDlUzGprdUg7zlZORWy1zfNG/SUrJIK
tdDDmtl1ZNVU3F71tVvfh2TNVLSETa7OvkfWScVo9zF+g++QdVPR03T39x23
yEiF5U2Bw/gbZKNUjBmUu+vUVbJ5KkKq7p1efIVsm4oLb/rvfFxFdkjFsHaT
lesvkT1SceKCX22PCrJ/Khojo/rtOUcOT4XVnqCBC86SBalwlnJ48LKUnJyK
yv/MlotOkbNScafIJnriCfLWVPgc32h//xg5v2vvvLHNcUXcPxXt8tNHTj7C
/VOBN59+vCjk/qlIPZ0Ull3A/VPh6aa70Wg/90/F2acLjbvt5f6p2N/5YXP5
Lu6fCg1JXEjkTu6fimpDs9dz8rh/Kgwvlrz4s437p2Kkaw/Hyq3cPxWLPIrd
U3O4fxp2Xh70xWoT90/Dcd2D7aOzuX8aNCY+C2jL5P5pcDs13q0qnfunQT6n
782tqdw/DQmqQ/asl3D/rj9P//prIzH3T8Ni59IMdRH3T0OUMDRPOoH7pyG8
5y7FRgH3T8O3B3VPq2O5fxrua1XJHorm/mnYcKqPKDuS+3f9vI/nquhw7p+G
xO0psR6h3D8NSx5ptVoHc/80TP7U/+iSQO6fhoeN0iVz/Ll/GtQ+V//Q9uP+
abjqrCXU8OH+adAp62Ok5sX909AcamA0woP7p8FpytG4YW7cPw2vBTofhrlw
/zT8+n5CPNKJ+6fBWXWCxRgH7p+GZx4JSyas5f5paBpX5jJtNfdPwxZJzX59
O+6fhujs472W2nL/NIgV49Ptrbl/GjqS9Sb5WnL/dExa9q1RYMH901FnWXks
x5z7p6PW4Fz20eXcPx0TXaQTa5Zy/3Q4bTopfG3C/dMxw/hvqrQx909Hv3j5
vNFLuH86lM7JHjcw5P7p0P2hcd1jEfdPx/G9h15lLOD+XX+/bTe/nZrP/dPx
YnCt7Mt53D8dxqU/eirqcf90LPHaLDN3DvdPx3+ebZ+9dLl/OixnuVzdPpP7
p8Mje2FW7XTunw51/3eQm8b901HwtbRu3hTun45S74FWYdrcPx0GC9yPl2hx
/66/78+hrV8mcv90VE3apaA9gfun43WEn5S/JvdPR7bo142Scdw/HY++VPl1
qnP/dBxZZto4bwz3T8dftf6aSWrcPx2xD/fOqR3F/dNx80SayvCR3D8d4fV2
FzyHc/90jDTdM6lsKPfPQM7pP2t6DeH+GVA82H3FmsHcPwPGjnYyJQO5fwZU
Hu8IlB/A/TOwvixiu0M/7p+Bq5abY88oc/8M3MnfOWiQEvfPQIC2iVOQIvfP
wH5Nk3V3Fbh/Bj4sslWY1ov7Z2DvRR2XzfLcPwNzXDe6/5Dj/hkY6reo/7ru
3D8DCtk9XC/LcP8MZHw7aKctzf0zcG/C99b/pLh/BlLUKjXl/hVS/wxUTaj/
HfSHnJWBzk9jfBp/kbdm4IKzT7DlT3J+Bgxrc/pf+U4uyMCn8sQlczvJxRk4
2Da0z7EOcmkGtIIXuGp+JVd0/XxYo8muNnJNBiKdvpQPayXXZqCpwrpsyxdy
XQbqFvbRH/iZ3JCByScVjTd9JDdnYNZvs7oBH8gtGTDqc+9dzjvy9wwM+bwl
amgzWSoTkn27U3e+Ictnon3+z8HjmsjKmWipKhh5tJGskgnNaWfzZr0iq2bi
fOSCjZcayJqZmBq+/M/yerJOJpZ96Xz87DlZNxO1ImsNn2dkZMLjvKjx95PC
+f8DW8S2QQ==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]], 
        LineBox[CompressedData["
1:eJw9lmk81XnchqW9pCikVERJi1CkiDsVKcnWggjHTsc5nIXjHGmjUpOa9kWa
mtRoUtG+atEwLZoW00QrRSQKpfXp+Tznfrzpc/V1/6/f9Y5JWIJPhKaGhkZL
Bw2N//33/36anJVtHl8rYk87q/8DJlc8Bj1vP6Xmbmh4N8BxdhG5DxK++6wf
vITcDz4fRqpqfMn94Ylzit2WZCPIZ822KdQiG+PJ+Qz92IaTah6KTMXtd8qb
ZDMI6lakPs4nD8c4w6+WwtXkEVBdHbn0noA8EkUnrzoZTiSPRkjQ5qrVXciW
mLy8Yfvdv06o2QqX7bILbVRka4wUjxGdNiPboPht5r9/lxSpeRzmv24z2R9P
Ho+XRRZCdyOyLQRXTYz+qShUsx0y9u2asiyHPAFr5+6x3SYk22NpodYTa1fy
RIh01vYuMiVPgvbVoj8edCY74MLxw8059cfV7AiTDUMW+d4nT4bHoAO/R18i
OyG57WxfyWGyM7LmLu1vvpMMeLuv83TJUnM6kLS+tGWLkvcp6FtRMvKbkPcp
OGl75vSCMN5dkKW7f1X2PN5dEDJ08Pgts3ifiiOVy5oXTuF9KnJm/Kb3agLv
06CvOmxlPZb3aRC8aPMONOd9Op7v8pNEG/M+HeuG1X84OYB3V1wvfOGir8+7
K5SGJb9u7su7G26mtcW81uHdDYV77L527Mf7DOSllI6qJqfPwOSWFeujjHh3
R2Bt2eRT5HR3VFzcZ+A2gveZGDBIW1wwlPeZGKb92/Ap7NGYhf/kD9cU///7
Z+HAtrl7Bo/m3QMtfvaV2////R44U+D60oS/rzEbA1Yt6rCqK++zYeW86/CU
3rx74sq/Wdu2tR1T3z1RandTufermjXmYHf05kxZDe9zMGOQz/03dbx7Yey9
Y1r376sZXngk3lFaXsHf90JNl4iA+mtqvuwFy4o1idkl3Hvj9R8ZbSUnuPfG
+OWXVRNOcu+NHF3LJ6F53Htjh+nMjKsHuPeB6Ffb9sLt3PtgSZcvNpbbuPeB
UPLa/uRa7n1Q0jLfSryGe19EKOYoBOnc+8KmrE+HTBX3vrjmONLxtIR7X+SH
98qPFXPvB/2P5o3HYrj3w8GXVzobRHLvh/du1UM8F3Hvh6HHq1tWBnI/F/sO
RB9ePZf7udie1lhY4M39XJwzyfm4yIP7udA7+9ZzzQzu56F2w955ZVO5n4e7
BzYKuoP7eThedeTiJQfu52H5xT+dB9tzPx9htrK748dzPx8JMzYJTltxPx9V
numeRmO4n4/iBGP/EgvuF6DKIuq/qOHcL4Du+vozdqbcL8A/JfdbuxlzvwDN
gzvZtBtx74/Ovwxvbjbk3h+C46M8f+hz74/HM/Ye1u/HvT+maCa2OupwHwA3
92ldF2tzHwCXTiUZB3tyH4ByQ/HHhm7cB6C9/fWhSV24D4TR1djg7I7cB6Ko
i6LprQb3gfDP0Cv0+X5UvQ9ExznHIi5+UbPGQpwt8s61alczFuLdBG+zQ21q
Tl+IHfJ1+eYt3C/EJV0XjcPN3AfhRG33Rtt33AdB7Jnndr2B+yDULql64f+G
+yBYa5hs//Ca+2BUah113VjDfTD61Q0us33JfTA+7Z7T6ckz7oNhNaS2Ys0T
7hfB7ITUwrGS+0V4pdPxafMj7hfBptuEZ/kV3C/Cf2t76Mc+4D4ExxY/ih19
T83GIQj8Zln2vpzfC4GFsMz4wm01h4RAx1SxMOsmvx+C7J0G8UFlas4Nwftu
8c7j/qIvBJvCzG9olaj5WQjMWsta6q7SH4ogp5yzZcX0h8I+c3fPgkv0h+Lb
BOHjLRfoD8WbIK/By87RH4oniX1LRWfoD0WlWY+7YafoD4WGrsboBSfoD8XI
6LHlXoX0h0GvbEKRxzH6w9CUpndnVgH9Ychebdjf80/6w+Bh/SLDN5/+MDQ4
+vVdeIj+MCTkbToRlUd/GMJrNCNlv9MfhqCccYNW7aNfgKlP6+/t2ku/AJtP
GC0v2kO/AM7WT03v7KZfgNIrooKGnfQL8KFp7JBeO+gXIDt4e7zVNvoF6DVw
+oZ5W+gXwNy+OmPJJvrDkbrHyS1/I/3hEJla33yUTX84jG/k9+65nv5w/G1/
tKfzOvrDcSjV66w0i/5wSC/8qVewmv5wwO+jQX0m/eFwexFzziKD/ghs3eX5
OXYF/RGIO/759pFl9Efg4T+3x7Wm0x+Bytt2pk5L6I/A97mHtq5W0R+B+L/z
sipS6Y/AbzYX280V9EdgvvXySkUy/ZEwHb7NslxGfyRqvA+9MZfSHwmnvsKe
y5Loj0SRzaGsJ2L6I7HSySJysoj+SKD1r805Qvoj8e1Cgp7mYvojkT5G91lU
HP1R0N16vOlODP1RkB8MdZkUTX8UPvR2Lj8QSX8UFKMUm/Ui6I+C7WWfdRkC
+qOw9oxhYXso/VHIbLTWTAih/+f3GvrIXgXTH42Bpc49QoLoj0af5sCzjwPp
j8YLzf7L/APoj8bY/Y5BjxbQH40dAYfcAufTH40lgrmTn86lPxqua7wmRfjR
H42HX65OeutDfwzG6X+YJPemPwbvbBwndPSiPwbyOMPRGzzpj8H2uSb6JrPp
j0Hqqa7vj8+iPwZx1jnnXWfS/3NfeT+xcgb9MZBVntWRuNEfi4DqtC29XOmP
xZr8hO8Hp9EfiwG+X11dp9Ifi6IzRYtrptAfi+EX3EUZoD8WW6LXeVg40x+L
UdpJGrcn0x+LTbN6r5E40h8H6aetr40c6I9DzTeBwY2J9MchR7/eIMme/jjM
lF9/bTyB/jh4BeevLLelPw4LsyRNS8fTH4fPuw3MbcfRH4fzgYdGvLGmPx7n
qwJbcq3oj4fpAdVq/7H0x6N4d/Lrvpb0/+TP5b3KR9Mfj7o+Zl/XjaI/HmIt
8+OzR9Ifj9Xbfh/b24L+eOxMTJf8Y07/Ypyrz0/fOpz+xTjsb+kXPIz+xWhP
HvxuuBn9i/GxeK9381D6FwPH36ReMKF/MbK0JgizjOlfjLY+t0cEDqF/MUIK
vuePHky/ECNODvr0w4h+IUb+WN7rwUD6hXi8a21D/gD6hfjW/dfNKwzpF2Je
UHO3Rf3pF+LN8u+uDgb0C9F3uZaXoT79Qvx7LdKsvR/9CahN8Lr2X1/6E/Dj
pqbVRV36EzD9XH7UPh36E2BrGx+3pg/9CbB4Pc8hqTf9CWj/V1gRpE1/AvaO
OuA8sxf9P331lUn2WvSLcOXz06QRPdXcRwRoRTsP6MH3iCC40P9hr+5qthJh
XPGSCR278X0iZA/rJ/jcRc1eIogLbBd86Mz3itDgOVq/sZOaRSJs/cN815uO
fL8IQ6841dVqqjlbhHV5CV9rO7BH9PPv1z3332io+agIMa9snlf+KFD3iaA7
1CTn9Tc1l4vwvdahqvWLmp+JMPDk8p1dP6u5SYTpc248MPqkZg0xZF77V9m2
qbmPGGUVmUe9W9RsLMYqrwJ38Xs1W4nxb4CF16YmNUMMrdsPL51tVLOXGPb3
4jZVN6g5RAxHfXGpTr2aRWLs7DE9wKVOzeli+LoMcpG9VnO2GIn3uyr/rFFz
rhjRdxs0a1+q+agY9VfW3x32gv1iXLTd8CLyGfvFsJslssp/wn4xHnqtPfG+
kv1iOC0cHj/5MfsTUV0X5pn1iP2JKFHOmldZwf5E9HMqV1k9ZH8ibHaWXsy8
z/5EHHnWrvviH/YnIuGutsT5LvsTcdZ+3+M9d9j/cy/D1I632Z+IWs2Q/TE3
2Z+I943xn/4pY38iRPOu2zuXsj8Rx26dCz5yg/2J+HR1m8C4hP2JQOVObL7G
/kScdvjWqHWV/Yk4d6sxKrOY/Un4pty9v9Nl9idhd6hNzoqL7E+CX/W92V0v
sD8JYQ8PHF57jv1JCEi7U9jvLPuTULY9ceGe0+xPwlffk3tGn2J/ErZbX5Wd
P8H+n77ma/95FrE/CS8F9ddeHmd/Eh6Nj7NMPcb+JMgL0vroHWV/EsylkeHH
jrA/CRWjYk29/mR/EqqGPnJtzmd/ErY09vhr0x/slyDgy6LcSYfYL0GpgUvp
izz2S3Crzcxx3QH2S9Dhj4z3E39nvwTa/ZpqavexX4JW39beO35j/8/vW9jF
zt7Lfgkeewc3auayXwK7Z8O2nM1hvwTd13kHSnazX4InHQonWO1ivwTSwRbD
GnewX4JT9rmDjmxnvwS/ztcdKNrGfgkaozMNxm9lvwQtiXq9Pm9mvxSvLj9r
Ld7EfilKexrdzPqV/VK05nRbM38j+6V4l9xmMWwD+6WIiZ52oGU9+6X4Oiyk
/fov7JdCFlsyaPs69kvxsUNHbeFa9kthWnn02rQs9kshMFQ4DlrDfikW6PUX
fVzFfimeCH0D7mWyX4q4Xp3ajmawX4oXpjpO2SvZL8VGa/EY8Qr2S6HUGHnJ
dzn7Zaja69U4YRn7Zdgc3f3koKXsl+GX55k6ndPZL4OqTPvr2zT2y3CgS5Po
XxX7ZRizcW3cNSX7ZZAn+b0+lsp+GdzzS57mKtgvwxRTsdeGFPbL8HhH0/jl
yeyXwf7XplUyOftlEE0cNSNOxn4Zrs+JEYZK2S9Dgt6yjwsk7Jdh+5jAp95J
7Jfh3opaE49E9stRazv6nJuY/XJELbbLmyZivxwxHsNeuCSwX47QMrNoFyH7
5WjbLLSdupj9cvi3urtOj2e/HNm/99w6I479clie0TObHct+OZSyijqfGPbL
cWL8rWr/aPbLoTUxXScsiv1yVG/MiI+LZL8c5z8uey+NYL8cyTlmuUvD2S/H
ugHmib8I2C+Hn51PxK4w9iej6FaKLD+U/cn4O0/127kQ9iejxcv91c1F7E+G
Tcs9p6fB7E/GpvHGh94HsT8Zwi6OQ7uSQ5KxcRXyjBayPxkOVd624wLZn4yh
HfeUzgxgfzLkR0JDBf7sT8YHkyftygXsT0ZZV0H21vnsT0bzTPehhfPYnwz3
pg+H78xlfzI+v7sz5q0f+5PRo7ffbz3JGiloPq3RbZQv+1Ow79GihbN82J+C
tac67Y73Zn8K2m5l3fjFi/0pOJW349GxOexPQdWZp+UPPNmfgsHOuvmfZ7M/
BYZ930cYk9NTMOcXtx+uHuxPgWXYS4lwFvtTsFGac23LTPanIK/Yv+GSO/tT
MGDs97q6GexPwaUk5bl+5GcpSGq6GQw39qegcP27u/Gu7FfAaX+97o7p7Fcg
7K87Q/6axn4Fsi8ca2ubyn4FVB5HNg8nQ4Htw+o+z3NhvwJfi9earZrCfgWu
TivrcxbsV6Bq4aMLDc7sV2Cm+ScLY3K2Ahd04nz9nNivwKsLSvvVk9mvwL1q
VcVFR/Yr0NfhumWrA/sVMJpb4Dia/EwB97U5PwST2K/A4OrP0l0T2Z8K7Sbr
nAf27E/FlTMnZb3Jxqm4mtfhu/sE9qdiWXi2zUo79qei6nqNbrEt+1NhcWL1
7m/j2Z8KsUH3u5PIolS4n2zNTx7H/lR0t3g1+pQN+1MhvCj1abNmfyoyI6cN
tCMf/fn93W0rZVbsT8V9P9sNp8ayPxU3nv/p0G7J/lQcrtFZ4UBuSsV6B4OY
tDHsV8K+Wl5XPJr9StS8b+7YhWyshK/C7dTMUexXYqbCSTN7JPuVWHQr9+UD
C/YrMcDAMcCIHKLEsuPPwwUj2P/z+7mRmvnm7Feib8o+6w/D2a9E9TxJswM5
V4kvZaexchj7lWgt8x18x4z9SrzbO2q1IblciZHPLdLDTdmvxFRvB82jQ9mv
ROzLOdpfTdivgvW+gH0zyH1U8D/ofXmzMftVGNHdMvzlEParUHOzfp01GSps
fLLaMX0w+1Vo+tE94c4g9qtQfV5kNoQsUqEu+HpgghH7Vfj6TKff5YHsV2Hp
yzAPHXKuCgW5NzoKBrBfhS/PvCeeMGS/Cq3v9Bq6kst/vnfDyIGB/dmvQlTr
wetHDNivgtHRw280yRpp+HrYd/V8ffanoXrYxdzDeuxPQ9U2bStNslUaZl+M
sVvQj/1pSFnSdvxIX/anwfpt1f7O5JA0pNvN6hmky/40PNgTV1Okw/409FUI
bXqRs3++x3Blc0Qf9qeh+M4Lk0u92Z+GPU/OX+lPvpyGSsnMe4na7E/DwX3X
fG71Yn8aZPMjMYLclAZ7r/idy7XYvwSfDPUET3uyfwnmdN67xYFsvARhxj62
23qwfwkKx8Y7tXZn/xI45Y0/5vOT/weYtpz+
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{1.8702691982121848`, 0.2316836189360252}, {2., 
         0.2247879583220643}, {3., 0.20828538279541597`}, {4., 
         0.19601149711576338`}, {5., 0.18623765083025862`}, {6., 
         0.180505758274831}, {7., 0.17544940134632725`}, {8., 
         0.18505300657743814`}, {9., 0.2170086433406609}, {9.291748868016276, 
         0.2316836189360252}}], 
        LineBox[{{10.47958582324149, 0.2316836189360252}, {11., 
         0.19302571812184424`}, {12., 0.15772019311284213`}, {13., 
         0.14968747198540155`}, {14., 0.18442978419012585`}, {15., 
         0.1584025884906255}, {16., 0.14652696796522968`}, {17., 
         0.1621754015299463}, {17.94090303249597, 0.2316836189360252}}], 
        LineBox[{{18.086345926620172`, 0.2316836189360252}, {19., 
         0.18548846496404722`}, {20., 0.15577054765379195`}, {21., 
         0.1327579829355327}, {22., 0.15024906791053264`}, {23., 
         0.18808874142840715`}, {23.912552178915675`, 0.2316836189360252}}], 
        LineBox[CompressedData["
1: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

         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"epoch", " ", "number"}], TraditionalForm], 
       FormBox["\"average square error\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1000.}, {0, 0.2316836189360252}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N = 16\"", "\"N = 32\"", "\"N =64\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7657077219244347`*^9},
 CellLabel->
  "Out[1222]=",ExpressionUUID->"dece7603-d09d-4db0-bccd-105b2795cdca"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]], 
        LineBox[{{4.45619010409133, 0.24785837073081002`}, {5., 
         0.23712637063161965`}, {6., 0.22958598723721654`}, {
         6.8414223193829535`, 0.24785837073081002`}}], 
        LineBox[CompressedData["
1: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
n7L+6XiimKIa/IT1T0eUbdv4sIY8q/8BvRiD3w==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{{3.251845681862961, 0.24785837073081002`}, {4., 
         0.19608224686507053`}, {5., 0.22011825118165174`}, {6., 
         0.19977092924750736`}, {7., 0.1936570873312093}, {
         7.5683881435133715`, 0.24785837073081002`}}], 
        LineBox[{{9.099017026128607, 0.24785837073081002`}, {10., 
         0.1763610867801318}, {11., 0.2123044764825006}, {12., 
         0.24248545031885443`}, {13., 0.1629099220564714}, {14., 
         0.16572766965876762`}, {15., 0.23788643688282385`}, {16., 
         0.15386167441463686`}, {17., 0.14863325798902743`}, {18., 
         0.22080756847751853`}, {19., 0.15392536990970296`}, {20., 
         0.13585287175846802`}, {21., 0.16114616609821225`}, {
         21.939321103841568`, 0.24785837073081002`}}], 
        LineBox[{{22.059799405529414`, 0.24785837073081002`}, {23., 
         0.15978847647681466`}, {24., 0.15885912388553008`}, {25., 
         0.23519217183035934`}, {26., 0.14888113616845283`}, {27., 
         0.1663662700573113}, {27.932140220020962`, 0.24785837073081002`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ7el5WtNG0Mbhk6DWtks7z9szgIGtQ9/RyexbTI5C
+XYOdQbsYiL+R6B8e4ewUN1SlulnoHwHh686Nj9VNx+C8BscHAQrdJMTsqB8
BkcHO9sigYcCJ6Dyjg7NNzhqzPYehso7OeT93u02a+txqLyTw1+VFW/s82H6
nR0Y2B4VGKQdg8o7O1SYs+a/fXcQKu/i4LC87oBiP8x+Fwc+oduqVyachsq7
OtjYR8xm9Iba1+Dq8GnVred30mD63RwsT89yUf8D0+/msIh52tHAXTD97g6b
j2+/fPcXTN7dYQ7311K+qzD9Hg7hDgd4fs+DyXs4nFp+R009CeY/T4dVal9N
u+PPQuU9HTJu7ozq+Qvzn5eDhV9TUFoOTL+XA9vVeJ5QDlj4ezsw+QsKfkg8
ar8pVYz3d6Y3PL4A2XeFKQ==
         "]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"epoch", " ", "number"}], TraditionalForm], 
       FormBox["\"average square error\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1000.}, {0, 0.24785837073081002`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"N = 16\"", "\"N = 32\"", "\"N =64\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7657077220494356`*^9},
 CellLabel->
  "Out[1223]=",ExpressionUUID->"0b86ff4e-e7bb-4bb1-80b8-ea1670f62cb6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]], 
        LineBox[CompressedData["
1:eJw1l3c41f3/x4VoSlHaKg2aSklSPSMNLUQ0ZMveex7OwcE52mnT1l6UllSK
Jg0pKtrSTqVuys/3+n2e9z9dj+vt5Xke53Fd3VcDXQKs3RUVFBRKlBQU/vdn
16mnNdTHTEfX1PcrtzTemqbwv/9E07F04b5n6h8FVjBFWFNRtlsV302xVjb6
n8kNvpvBfJaBvryA72Y46NEnZE4u32dgxvVPHzw28X0GFi3YLq6W8t0cfy9f
ebY9iu/m+GJ332KvN99nwu6z0433y/g+E8ZyiZLbfL7PwtSiT4s6T+P7LER1
Tymp0ef7bIwKnDfo0SC+z271qa79oMn3OVhT4mfcT5Xvc3AgNVx75Z+bwrsF
Tl7tPLHkg8AiCzR9fPd48nO+z8XoXtPaFpfzfS5mKq9e4niV7/OgnGugpHaa
7/PQbqz4WHku3+djZ1J4dO5Wvs9HftTH6o2ZfF+AUN249dsT+b4ArpewpTCU
7wtx5d1MleaVfF+I+vXDlOyX8d0S7htHXny4QGBYombfIptQU/68JTwancuN
DAUuskQvfQ2twcN5b4Xu0Y6vJ/bnvRWkQ04Xh3XjvRUGGyh0rVHhvRVSdo75
GNp0Q7i3xq28fqZGXwWGNaS7I0r03ggsskb7tbH/zakSuMgaqzctGry5jPeL
MFKlZKnWNd4vwvnJRknF53i/CBVa+xbmHOf9Ijzbt9fi4D7e2yDq1diyF9t4
bwMT88ldZq7jvQ02Xn+p8SiN9zZ4Ujy/cLWI97YoOKtQGhrBe1uYTzl6ReTP
e1sca+Ohdcqd97aoCu/UtoMD7xfjy9KW7WIb3i+GSti14n7zeL8YHy9mD3tk
xvvF0HheYnxwMu/tcFbSe2yWAe/t8PV51ffNI3hvh52GQ7sd0+G9HW63rLlw
vw/v7ZFtMeeAgibv7eHRfEdxfCfe28PpnOnclcq8t4eyedmk9c2lwv0SpJea
rTr1Q2AsQeeOq2sufBRYtAQNp97O2/da4KIliC/z03d7yvulSLTre6juAe+X
4s73Ei2dW7xfCt/2TrYtl3m/FLvTXjxzK+D9MnzsX7Z1wlHeL8O/AGu/ebt5
vwxKFptMY7J4vwzfyzZdl6bzfjkGrwlNHxXL++XoNdzxqrov75cj+nX9s+Il
vF+O8Z2GS4tn8N4B9+cW+gWN5L0DLhi8PNpDnfcOmOCpWfHtc4lw74ApYof6
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
+tH44xX2T8aoAQkjDMm/k6E2o52B6DL7p2DxlGCrm0XsnwIV09wUTbJ6Ci4F
b7y/4hL7p+DHY70JBwrZPwXlbpZHGy6yfwosP/yeMpWs38qDNV5LL7B/CqS5
q3IenGf/FOz84hjSnzw7BRMWhC/3Osf+KWhsuLYs7yz7p2DTe9OglgL2T0GD
2sttFmTPFGj12vx8wxn2T4H56hWGL06zfwo07+rtGUkWpSCu6fuwyHz2T8Fz
tVOXr+axfwr0broGdSFvSsGTghbDZafYPwU9Rid123+S/VNw1/SdUsMJ9m/9
/h6M6DiNXND6+RPm62YcZ/8UdNhrsazyGPun4L3ToD065PIUTJI9VAw8yv4p
sDvnHHHhCPunoNvEW23ak+tSkKesscv2MPunwKxqsv2uQ+yfgvUD5wz+cpD9
UzHn51QVE3K7VIzUHvRPeoD9U6HT43fHR7nsn4qQ5utjdMgDUlG+fYNX4H72
T4Xcz+fsxX3sn4o7EkvtjmSjVKzLmb/Vfi/7p0JxgO+ofXvYPxXJiqcrGnaz
fyp+vpmwfjrZPhXFyo2eq3axfypmjG9r82wn+6ei6KWv7QhyYCpOdZ/sF5XD
/qno6Bm3tSSb/VMxu51pbXeyNBU3T2dNdtvB/qlouio/cnI7+6dildp4wzbk
nFQUttlasXAb+6ciad2DjB1b2T8VVaZf7D9tYf9UNHZXmGJCLkrFsU09jTI2
s38q4qvmWlRtYv9UtPM7EqJHfpwKQxervMgs9k/FLot5nUo3sn/r92NwKkaL
/DUVNvu2Kq7cwP6prf//7bPz9Hr2lyIhd46dCrmdFD67TIYsXsf+UrRv7Nhx
31r2l6IurqzdrzXsL0VpQnb/mWRdKd7krZ+3cTX7S+FpVrr27Sr2l+LUxUXf
DMmQ4voAK8/UTPaXtv77t6qxUs7+UlzK6ZijS7aXwqzwn1OUjP2lWHelzPhm
BvtLkbd/y6g+5EApjpTGTPJNZ38pWmpWrbiYxv5SKKj82KZGlkrhfezaD0cp
+7f6HRrkcSKV/aWo0NH7pkjOkaLdpsYNNinsL0WHmsM2+5LZXwqTwZ6jfkvY
X4oeb2cPsCAXSVH2w3/UNjH7S3Et8D+bz0ns3/r7bnTMAvmxFC/OXm1Ym8j+
Uiyda+bzRsT+UtwvO/R3IvmrFKEv+x9KT2B/Kd66F4Y8i2f/NBxKOmynT26X
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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]], 
        LineBox[CompressedData["
1:eJw113dczv/+x/FUEknZ2UWUkbJD8kTRQElLGe1d2ntcXXV1dbWF+EpkJ6Nk
FSEqsrMzi0R2Q7L9+v1+r9f559zut09vL88et3PO96g5rbdwlZaSkmqQkZL6
339v8Z033/7vaPQVv3Pf1nl9vtT//UsdWoMMl94qZI9D1jbT3ofHsDVho9H7
2I3Ca+QJaMpfJajWY09CpMHvY00Pr5InQyGmW/jcMLYO1L3spAOGs6fAScN1
38bqGvJU1NT+c/sbwJ4GgdYquXlq7OkIW1s+R/beFfIM/JqQZKkmZs/EoLUt
KiHz2LOg4L3u/ceOy2RduDb8NokuZs/G7pXdGkf5sufA937T1zsT2XPxePPH
qC0fq8l6GF7w4IlPEXsegn9/6r06mK2PqKKD/xznsudj7PxAF4ksG5DdIxxz
+3bV/1sAnN2o9nhmHllqAY6Y7Ztx3oe/L4CTulK2tT5/X4irvkN3Svfj7wvh
ouNjlPO2kr4vwlC7BtPRF8iCRbC6ceubzVb+boBh4ksajkH83QD2/byj75rx
d0M4HQuQ/arF3w3R83uk7XJF/r4YAQv0/+p/vkTfF+NTxTyhdS1ZagnsZ5on
th3n70vg8rpKu2wrfzfCZfOiJ62x/N0Is5+o6Ni78XdjDD0vZTLMjL8b45D7
trWys/m7CbaUvH82Up2/m2DmptIrxsr83RRGew/HRv25SN9NYRqa0i/3A1lq
KS5O+KC69Ql/X4pG7wUr1l3j78vwwffS4oYz/H0ZKpv+PVc4zN+X47TWrxn3
8/j7cuT2W75EK4u/m6FhYetlhQT+bgZhVmydayh/N8eIv0rjpnqRYQ7HxHOm
Hmv5581hZFm2XGolucIcifHtd9qW8PsVGB4tc1t3Hr9fganWDoevT+X3KyC9
RWnoPk1+vwL95sgMuTCS31vAzGvZu/4D+b0F5gdKKexQ4PcWcJIpm24rze8t
8M1S22Lejwp6vxLvwt/FGrWQsRKq1SGyIW/JgpU4dyfM5vwLcsVKyAz3HKT6
kN9bYm64vnzOTX5vidFZcsOHV/N7S0Tp3vM4Ws7vLeHtYDbZ+AS/t0Kp6/kH
zYf4vRWiN8S3S/bweysoZ8oaj8/l91Y406fvlcpsfm+NmqFBWdYp/N4a4p/1
v1/E83trOFX32G4Xwe+t8T70jO4Vf35vA79Y2WejPfi9Dc5XjK31XsfvbbDl
w6I9+db83gZ3n5WOr1jG722xweZF3FUDfm8LZ5M5CuVz+b0tFg5ri9wyld/b
QlnW/4r9eH6/Cn6GE6f0VOX3q/DhVIp+/iB+vwpxRQ2laor8vuvnB4oLMmT4
vR3y11rm17ZfoPd2OGdZvNyhgSyww6AtjQW3b5Ar7HBnlN7S0WVkKXvEFd5Q
Wb2P39sjMddwTPwGfm+Ppy/O798cw+/tcXFzxbc8T36/GmVX7gbssOL3q6HY
835w7gJ+vxouVUvN/tPi96uxXu+d7vYh/H4Neo7TNSrozu/XYNDGC14XW8/T
+zUwdPFb++E5uWINXgxwOzz+GllqLY5cVtoXd4qMtXCd4bGmZTe/X4tNpR5H
YjP5/Vp4nFivrRXN79fB63Ay/nrw+3VQdg/q9tWK369D2R9jW+VF/H4dbAYe
aLPU4fcOGL1B26hyBFnVAf/2uOatVuA/zwHR0kflRv849/92cMDZ9kDvAW/J
Ageo/1wpmf6AnO+A+oKVncJKcoUDdJs7NaVKyA0OmGu/MuBwPlnKESnVLd2T
M8mqjuimm9ttYywZjvD0+ed205fvO+K1ivqYWWv4viNKx5Uq1S7l+47ovXdm
xxY9vu8IeZmXaRmT+L4j3tVkCY8P5/tO8J/jFCqnyPedIPty9t+kP+V03wlG
HeMOTP9MdnBC4NO93/rUkwVOUH5/zntgLTnfCeITfQVLLpIrnJAnf7Fgbwm5
wQn7yhfYTNpLlnLGfcvhP59vJqs646H35j+lYr7vDP0jBjfKI/i+M6b0y73d
7M33nWHbtspfby3f7/r51b8HnTbn+84YrzBgku0ivu+M9Gm5KqNm8n0XKBnq
LVYYz/ddkLs/a9Tw4XzfBZ2rbJRXKPF9F/xYs1d0UJrvu6B+Q8/P6t/O0n0X
nLhaVnbpHbnCBVol++2Ez8kNLujbf5uB8x2ylCssW0w+uVSTVV3h+MfvRlIZ
Ga7wvlZjX3OE7OAKQ/lpg8fvJgtcYTbzYHRBDt93Rd/uy3svTuX7rmgtWm/U
TcD3XTEmJeXk42C+74b37cZPbnnyfTf0bhbPb1jL990wYKmpv6Il33eD0/jq
H1bGfN8Nxq1Lvcv0+b4bTN7bW8+azvfd8PalePnt8XzfDffmxLwTjOL77gjx
/X7edCDfd8dzxQse2gp83x3TPbYKJ3bj++6YUmlYOL/zDN13xxjryDjvT+R8
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
a9t9WH8pRCrSCJEX6y+FrKmXW6Q76y/Fz7/z+UHrWX8pNrwRnPB3Zf2l2HxP
q2vQatZfiuOxEesjHFl/Kd5bDLuctJL1lyK0PWvwVnvWX4oOvR0uh2xZfykS
i8qENxaz/lKYjv4uarJm/aVIifjr0HsB6y9FuvadN9Pmsv5SnH7rY+puyfpL
cWT6M9NtFqy/FE45Ts9vm7L+nb9nWG+DXiasvxRWv/B30XTWv/P3lDpz06ew
/lLUD1LOfTSJ9Zci7f2P7LETWH8pPE23uEcbsf5SzO5uorhrwPpLcXtl1oCJ
o1l/KXJ1k9/I9Vl/KVrNH6h+1mX9pfBZGbZh9TDWX4qS224dN4aw/lLILx29
NFOL9ZdiT0PU/sOarL8UbV4/D44ewPqn4KVG8MX8/qx/Ckb9mflkZF/WPwXj
tp/8e7A369/5nuI6ZIoq65+CuYcvjb6kwvqnwKY5VNuuG+ufgssjDd+/5LD+
Kcicmrkj9m8+9U9BVemmAUM6yDYpWDa8zeHcT7J9CjrcDjuu/UF2TsG2EaX9
Vb6RuSmw9JzML/pC9klBc+546fpWMi8FxknPTAZ8JPNTMP67LKH8HVmQgqJv
iU5Jb8jSFJRGjyyxfE3OSMEEz6c7OU3kzBRUu878dv0FOS8Fx66UXpU3kgs6
75eq/XZ6Si5KgdaYuu0GDeSSFFgFP0trf0RWpiAk41N9VS25PAU7HjZFHHhA
rk6Bw9Fjzkk15LoUREQtiHa7S25Mgbng9P15d8gtnftva7oZVZFbUzBrYJr2
gEpyewq6ZTl+/VNO5qTCROfUh/c3yaqpuHvg+5+n18nqqfiQkaR7/ypZOxWB
S2/a3FaS9To/72AZUXaJbJiKmxpReTcukI1TseN8nys3S8mzUmGD/Lu3Slj/
VISMfVd59wzrnwpe5JHC+tOsfyou7zzt2XKS9U9FuGXj9x9FrH8q/i0Ysqb3
cdY/FZeyHaUjjrL+qbg2OifG5DDrn4o5u39NXFHI+qdCJE3fGXSQ9U9FThdx
Sfp+1j8VVqc1xCf3sv6pUJzl/6zNZ/1TYRneS52Tx/qnwiJtxLVxu1j/VExX
juzrnMP6d953K7lFksX6p6LHykq70kzWPxXet2Nmf9rO+qcifc3kIwbbWP9U
5JdIt3O3sP6d36c780fOJtY/FYYGn8vr01n/VIw6Gd9jeBrrn4q6e8cOceWs
vwznjrgWHUhl/WWwXRc44JOU9Zchp/l+pamE9Zdhqpq8NlnM+stwY06W8UMh
6y/DO4n6vbFJrL8MZht6n40RsP4yNF86+vhuPOsvw+OScbPGxbH+MvgcO39L
FMP6y9Cv/37F8yjWXwYdmxmx4LP+Mjw7fH1TfgTrL4Pf6uKK7uGsvwxDRoeO
2BjK+suQHxOadjeY9Zfh2soZA8x5rL8Myj5WBw4Esv4yOLgYLtQMYP1lmDUl
+YPQj/WX4cz+vzu++bL+Mgx9OsfK14f1l6Hye8erp96svwy93v+Id/Ri/WXQ
FP7oXe3B+ssQNu22aIk76y+DtbpdSzmX9Zfh6Am3KTbrWX8ZonU/ulSsZf1l
WHGm2WOpK+svQ5vOwgV317D+MlTp9O9wWs36y6GRvVTU6MT6y/E4UePxRkfW
Xw7VfP7P7w6svxxRefueilay/p3vby6LNVew/nL4pne83W/P+ssx1HJrb1M7
1l+OR2PKG6tsWX851j9t9PVcyvrLIXKdtKdjMesvx6q6nsnbF7H+cjSfq9SY
asP6y7Fc/MzqzkLWv3P/zeMDAhew/nKM+HNc0G8+6y9HTMoaadFc1l+OcZnG
Bg5WrL8cz/uVOv60ZP3l6B8lHpw3h/WXY+PXse42s1l/OXrqzp75xZz1l8Pi
n3d6rhnrL0fpL9uNi01ZfzmOn8u71m7C+nd+3xDNzIKZrL8cEdoer1bPYP3l
CL++bH+f6ay/HHvG7qpVTmX95aiYqcuPmML6y2F0OV840Zj1l0PfocuPpkms
vxyGc4be2T2R9VdgoE+NqssE1l+BOcsG5muNZ/0VCHlfsfWBEeuvwM0j7xq3
GrL+CsxwDElaNZb1V2D+b9cILQPWXwHtN8fPPR7N+iuwYHvYot2jWP/O79t0
bqTXSNZfgSUhm+dO0Gf9FUi+oXXg6wjWX4GZ/7wXX9Jl/RV457NnQspw1l+B
URqfF60axvorMPl8/O6RQ1l/Ba78FzPu8xDWX4Fc6+EtSm3Wv9P7cx5s0mL9
FbBvMGn1GMz6K6Azb8oMk0GsvwLW4jv5apqsvwJjNq+d9nwA66+AlmLc67Ma
rL8CAy6llKars/4KpCbeO+TTn/VXYIUpt3huP9ZfAaHF5trhfVl/BcLKK/v9
UmP9Fej/OdS5tjfrr4DZpm8ninux/gq0mV/W3qbK+iuQPWFeanhP1j8NDSY/
ujn1YP3TILrgIDRVYf3TYLK1TmV4d9Y/DT7du6V06cb6p2Hhcafer7uw/mnY
LForqeKw/mkoOLnrz+l/edQ/Dck7Cjbm/iUjDbdOqN1O/kO2ScP5TS4jgjvI
9mnwvTXJ3fU32TkNz1/obrb5ReamoWZh+ZEZP8k+aVg169bxUe1kXufvUd7M
HPCDzE/DlHx3r67fyYI0mC9YMLDtK1mahtUntfNetZEzOj8fndKr9gs5Mw1j
Dy+0vfWZnJcG5ZUuvpdayQVpqN8ZuObUJ3JRGqTr540o/EguScN4wazi3R/I
yjTczlbV2fGeXN55XzhvSfo7cnUa/JonWUvfkuvSoFXZXS3pDbkxDc0/Tm+N
bSG3pCHMsPuLyNfk1jQEtpa0hjaT29Pw60j2JV4TmZOOxrCIRYGvyKrpuNFr
ULr/S7J6OlLK5yv8XpC106GXdd/K7zlZLx21L7ce8mskG6ZjNN/phv8zsnE6
eko+pQc+Zf3T8UQxRTX4CeufjiibtvFhDXmW/wPmpXMe
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"epoch", " ", "number"}], TraditionalForm], 
       FormBox["\"average square error\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 1000.}, {0, 0.21849374841536265`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"2 Hidden Neurons\"", "\"4 Hidden Neurons\"", "\"8 Hidden Neurons\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7657077221900544`*^9},
 CellLabel->
  "Out[1224]=",ExpressionUUID->"53ba6905-fa4c-4bb5-9b17-3c72b88e37ce"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]], 
        LineBox[CompressedData["
1:eJw903lczAn8BvAvsSyibEnO2XLGauRIqB6SRDRFl67pvmtmmo5ppmmQHJHy
Q7ln1zrWtR2WHJtx5VprLJa12GGtRWyhzbry83v9PM0/vd4983w/3+fVqy+j
M/zj2guC0NxOEP7v5/9/mty7fXt7m9/AOvdPv0D9cMMzZ5cfP7kzJvt8WHGk
4tgnW6CP0n3KkK9oK6R+dvyPO81HP7k39NvyF3S7QfdDuxVNiTEnaBG2VSl/
ElXSdmhvtqSx4Wt6EI7cynv6di09BMra+ksXiulh2JHg+s2bhbQDdmb+kuql
pkdiTmifKq2SHoWi4iDrvHRaDLcPEbf7JtGj8WF6zWKfWNoJsls/OLyOpMfA
c7s6uGcYPRYVL/SuxcH0OJgdv2kZEkCPx6P5t7cr/Gln7Pu5k4XRl56AIY4b
0pJn0y7QilqrJ82iJ8Im7Mslbt70JEzq1W5ouhc9Gf3sQnzrPWlXHLZ/7uAx
jXbDqIWJ0+5Npd1xKnRP3uYpNBC4R/ZKiU/WAdU13kPj3JlPwV3to+oUN+ZT
4LEwRFXkynwqDo19v7xmMvOpWPm+z+Dnk5h7QB/VtM+V1nnANntIVflE5tPQ
8nbT7fcuzKfh7WLt+3Ra8MQbszXvH09g7gmZu9GURgvT4So3P/Xamfl03Jn2
3/UVtOCF7VmDIoe05V4Iv+x18Mx45jPgd7HCI5nWzcCFuXO0X7Tl3ghWuDUY
xjH3xoeb6/sqaGEmnged3DOkLZ+J6akTp94dy3wW7o3YW1JB62ah7mFH74C2
3Ae6J7vFVm25D+r+Ptj1+hjms3Gs2H9HOa2bjZ3NNr+EtuVzkH14cdyXbfkc
+PsVTHrkxNwXTkd+c6qkdb5YJ3n5laotl6DqdkBPDxoS7G2IOmfe9n0JXDe1
n/Tb6E82SDDYJiloOy34IfXtz90UNPzgY+3u407r/NDzTExn87a+HyRL54/7
Xcy+PxwGrTj3HQ1/DHy7tDaX1vkj3P7xOy/a4I/y244lNm39uVCbV8f97cj+
XHRQFeQfonVzMT12jnEJbZiL4SlJIcG0MA/zZm61Gt7WnwfHpLGtr0exPw9n
m6/3vEgb5sEuqsR3Ey0E4LbD0ao0GgFYetDM2b2tH4BiR787Fm39AGyZefab
+1+xHwjN1R8XH6ARiF8ajxQW0bpArDRL3xJMGwJhPXjPFYe2fhBqLBP6vx/J
fhAmr6nRXaZ1H+137M3XtCEIx56dWq6khWAUF30p9mrrB8Mtw+2JbVs/GE/F
a2qfjmA/GNtP7N5wnBZCkPdPr9LVNEIw50VuRRytC4F+rLpmQls/BD+PuGLq
2tafjw6R40V/OLA/H5aFafJqWjcf8w+6X1tMG+bjxin1jBBaCIVZyb+XRrb1
Q9FdszhWaOuH4ta7Tt2uDWc/FKd7hZ/eSQthOGuWuFJNIwxLb3ZP8KV1YRgy
bqKffVs/DHWt12a9GsZ+OFaLfgq8SCMc1vO6K7bSunCYNxZvzqQN4Rh8aPxv
Xm39CEw50m5wv7Z+BBxH3NM1DWU/AoOmXnh6mjZEYL2oJnE9LURiWO3q5jQa
kXA5IC2d2taPxKM468k2bf1IjK7+7lXDEPaleNXO5pSBFkmxf0zQlrU0pPi6
JHZZMi2VYsEhl0J3WifF8B1XSqxovRSKTUO/ezyY96Ro7e98tY42SXH70dtu
a2ghCmaN8sAkWhSFKZK137vRiIJ5QHRvK1oahZqk66WPB/F+FLr0aeh9nNZH
YZe5vnINbYhCYIfnQcm0KQrC1VvdQQvRaJDOv25Ni6IxYHvqngZ73o+G47fd
y07Q0mj0TnctKqd10Vjcr2V5Gq2PRscr47Z60IZolNe8PmlLm6Ix57lbS6Md
78fA6mh7l3paFIPF06YWb6IRg/an3jxV0NIY7EsdHuFN62KwM+fi3YG0PgZB
tnfTW77k/RjsXRzR/RJtikHxP94/bqOFWExftFmdR4ti0UsW6O1HIxb6O/Ih
w2hpLHY1Pe35QcT7sSg9f7r7r7Q+Fv0LW2z30YZYDHEuGFtIm2IxqTk0IpQW
4rDs7LJyJ1oUh+WHOpo+pxGH66d/cr43kPfj8OHx71tqaV0c0vuKrUtpfRwc
vOo3JNCGOFyat9HRnTbFIW7w3qu9aCEewf/zb9E/A3g/HgEKpXc9jXi4rhrc
dwstjUf/yo7vsmhdPHqvsXw6m9bHI+ylZ8Ng2hAPh4Ktr9/35/141N3rY/Mr
LSQgou6Ax35alIBJVUkFRTQSsMF3/IUIWpqAbUNtBjnTugSsNnRe2YPWJ6B8
Q6eOj/rxfgJejbJYYaBNCWhpHGC3nhYS8XKG+KycFiUiagvUM2kk4s/ZPm72
tDQR2O9r8a4v7ycirYfX82u0PhHfHxl1bx9tSMTSF+1NRbQpEQ9fHH8WSQtJ
EJ5HdXGhRUko7fvXuJ40knBhg6esoQ/vJyGttODwaVqXhF9sVlluofVJeO0p
y82hDUlYN3zgPxLalIThF8sVDrSQjNaRv3bsQIuSET7r1513bHk/GWH91gQf
oqXJmFDatXcZrUvGmLIJD5NpfTIOmtmcmkYbkhFV/83+AbQpGbbVN3b915v3
U9B3Q1XVL7QoBZY+I8/vpZECm1KPxiJamoLLw17aR9G6FKy4Oj5hEq1PwZgZ
XQ5b04YUyF2SbJtseD8F5+b5Lr1AC6momFrbcTstSsXgHVvLCmik4uf+7UbO
p6WpaJx689pYWpcKq92iFT1ofSo6/Hnd70kv3k9Ffe7LwWdoUyqOPld21tNC
GvZdDnidR4vS8HJV2X8BNNLgu8f+s9G0NA2T13Wy60br0vCHYYLP39a8nwbL
8urCk7QhDUU62cXNtCkN501pIhUtpCPOZseiebQoHTcLrP51pJGO4/IDyq60
NB2XsKD931a8n443k7O3nKT16UitLpmxhTakY//jM0IebUrHrqE2ZwNoIQOH
9+VvHE2LMnDicHO+OY0MjCjKSX/8Be9nwHZmu7QztC4Dvi4rVV/T+gwEFfZa
k08bMlAaXHEshDZlwMlk/nIcLciQNVXh3JO2+OhthmX/9OT7yKAY1Pz4Ai2W
4cSfnYJ30pDh7ruWq4toiQyFS4+FS2mpDAc2zf13Mi2T4bTPoQ22tE6GpO/u
z26x/ORSGW4YjN2v0noZDm7R3PmerpTB0+fe4RW0QYZA4+ttSbRRhhTHExun
0yYZDClOX9vTTTJ4LZ5xQKAFOS6rWq/dseB+OT7z9DU7SovkyDGNc6+gxXL8
6LFvaRYNOeJjK//wpyVyWI2fOE1MS+Uo2e150JyWyXGk6tK4hh7cL8c5l0sn
z9Glctg6uofvoPVyRGkGdCykK+Wo6hJ/JIo2yLHshEW+O22U43yR7ez+tEmO
B25qh7fduf/jvZ/E1r/RggItluPMD9EWCmz5Z2HPtbRIgdIp1oMzabECgY8e
TvOjoYDL8RdyR1qigP/XY/aa01IFlid++7LBnPsVOPDMfcYFWvcx79xu9y66
VIEjq+73XkLrFfgv+I81cXSlAu8mvOg/jTYosNGs1wE72qjAqWLPoHa0SYGS
bepOpm7cr4B7v5rTdbSQiYj6hyWbaYtMHJVbxmtoUSaSn301M5QWZ+JeJ+dJ
E2lkoqlkqIstLcnETd83Hv915f5MeNjsDr1Byz4+r2q07iCty8Srx8VVa+nS
TDiuqGlU0vpMPIzeNnEeXZmJigmBq8fQhkyE36hv6UkbM9Hl86aEF124PxP2
5T/9dYVuysSzmUGyKlpQIvfZ8k5ltIUSu7yi98hokRKj7W6GSmixEns8/+4t
pqHE1rzl93vQEiWylx2rbfyc+5XYMDF342VapkRGYO3y72mdEnHbc4pW0aVK
vGisLMmg9R+f3xqxzZeuVKL/Bs1pR9qgxKTiDi960EYlHmx4PqKpM/crMWO1
m8JINylRN/Hh6UpayML98D/ty2iLLFScEa+S06IsdJ58/jN/WpyFvcU7lzvR
yEJUQX2fL2hJFgLuiw697MT9WbDXVUVeo2VZuDAo0+oHWpeFuk3S62vp0iw0
HlB+k03rs3B64m51EF2ZhS/fvZVOoA1Z0J6N9beljVkwpfzh++Yz7s/C1dr4
kN/ppiz8j/bf9GO0kI1HK4tKN9MW2UCtVZ2WFmXj5OUNryJpcTbG7fzCdQqN
bAzsmVdiR0uycfjBuQYzWpqNty/fzPurI/dn4xvrrhfqaV02XEXNM3fRpdno
01B5Yxmtz0b8nMmyFLoyGwPsy6xm04Zs2HnsPj2KNmZjxLKFOgvalI17RqsZ
LzpwfzautIT2vUYLOVDe9H/zA22RA7d5zQ/KaVEOyrwn/a6ixTm4WWF3J5RG
DrLttz9xpSU5uHLxRzMRLc3BvKyEYe1pWQ6KO2wOfmDG/Tl4HxGypp4uzYFf
Svnvu2h9Dtwt/UcV05U52O5SuCKNNuRgwc/DWnxpYw6eHJmY4kSbcuDQcKDB
im7KwUGf1Tmv2nN/Lsb8fKn7LdoiF0mR0VXHaFEu5M9nRm6lxbkoy17YeyGN
XHjdN7sTS0tyETL8wl4vWpoL4xTjEgdalou3dpbp5rQuFwVnlkQ2teP+XIy3
dwy7SutzEePcPvYgXZmLita32etpQy4OZtus1dDGXLRu8a2LpE256J679cVU
uikXj83aOw2hBRWeeCo0n9MWKtye2nDlqcD9KjwXEp2MtFiF80v+3FxDQwWp
KdiqnJaoMN361No8WqpCsFN/uwhapkInz+jDU2idCl+FrQwdTJeqMGTp+s6f
03oVzt5aYHj64cin/SrIEqYsMtIGFZqnXpUcoI0qHFzkNLyCNqmgnzK/m4Zu
UmHAOs83kbSQB6dNjS88aIs8JMrmtgylRXn4TZzaoRstzsOY92P7N7V+MvLw
Y8suXKMleZDgVHotLc1DRKt25yZaloc3gTee6GhdHk7Kz06Io0vzPv69ZpZ5
0/o8HFsT2vwVXZmH6OZ/o3rSho/vc8bqVst77s/D6/E1Yb/TpjxMUf/0+Djd
lIeRZ0IXfEsL6o//32H2y2gLNZrdzl9Oo0VqFN3ZXORPi9UYFHndy5mGGvEf
kr/oR0s+Pu9tyGOBlqrxzerN5/96x/1qzOo4+sAFWqfGq7U9vvueLlXDuHTs
rjW0Xo299hurVHSlGuP2u52JoA1qHJb3+dODNqoRcnh41+G0SY2mKwmu3ekm
Nay7GFUv33K/BiOqww03aQsNgvt1s6yjRRpoN/2aso0WaxC4tNa4lIYG/s77
3NNpiQaH2lfWzqWlGqzyPDbJhZZpUBl26dwAWqdB3Y67kR3oUg3EhQ3Ckzfc
r4FLUOOey3SlBs8X/SX9gTZoMEF2fuBG2qhB7aJ1j3S0SYPXQ2ccjaebNJCc
+63chxby8ejKdK0TbZGP4zXL03vTonzsv6tPbH3N/fmIOlOY+oBGPgJuj867
QEvy8Wz9trJKWpqPyOzr1etoWT6qG07e0dC6fFzLSugZQ5fmY+XqOok3rc+H
5sSpCke6Mh99ChVPrGlDPurD6z3f/cf9H59/9cju+7QpH2Zps2zP0035WF+d
WfY9LWghdXT8Yh1toUVrhmqLhhZpYWk2Z0wMLdaih2rXFW8aWvjEFqrEtEQL
85A7Dja0VIu0Z/v/ev+K+7WIP9z83QNap8XDwN05F+lSLaqjLs6ppvVaqHPm
Oq6nK7UwOrvZ6miDFsOnLemWQBu1uOfu8Pkc2qSFq9Guxzi6SYvYTakD+tFC
AeJnmzmb0RYFmFxyP/hJC/cX4HjXzwqv0OICVCmTamtpFOCsqnPL1o/+X9T5
Y2o=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]], 
        LineBox[CompressedData["
1:eJw9lmk81XnchqW9pCikVERJi1CkiDsVKcnWggjHTsc5nIXjHGmjUpOa9kWa
mtRoUtG+atEwLZoW00QrRSQKpfXp+Tznfrzpc/V1/6/f9Y5JWIJPhKaGhkZL
Bw2N//33/36anJVtHl8rYk87q/8DJlc8Bj1vP6Xmbmh4N8BxdhG5DxK++6wf
vITcDz4fRqpqfMn94Ylzit2WZCPIZ822KdQiG+PJ+Qz92IaTah6KTMXtd8qb
ZDMI6lakPs4nD8c4w6+WwtXkEVBdHbn0noA8EkUnrzoZTiSPRkjQ5qrVXciW
mLy8Yfvdv06o2QqX7bILbVRka4wUjxGdNiPboPht5r9/lxSpeRzmv24z2R9P
Ho+XRRZCdyOyLQRXTYz+qShUsx0y9u2asiyHPAFr5+6x3SYk22NpodYTa1fy
RIh01vYuMiVPgvbVoj8edCY74MLxw8059cfV7AiTDUMW+d4nT4bHoAO/R18i
OyG57WxfyWGyM7LmLu1vvpMMeLuv83TJUnM6kLS+tGWLkvcp6FtRMvKbkPcp
OGl75vSCMN5dkKW7f1X2PN5dEDJ08Pgts3ifiiOVy5oXTuF9KnJm/Kb3agLv
06CvOmxlPZb3aRC8aPMONOd9Op7v8pNEG/M+HeuG1X84OYB3V1wvfOGir8+7
K5SGJb9u7su7G26mtcW81uHdDYV77L527Mf7DOSllI6qJqfPwOSWFeujjHh3
R2Bt2eRT5HR3VFzcZ+A2gveZGDBIW1wwlPeZGKb92/Ap7NGYhf/kD9cU///7
Z+HAtrl7Bo/m3QMtfvaV2////R44U+D60oS/rzEbA1Yt6rCqK++zYeW86/CU
3rx74sq/Wdu2tR1T3z1RandTufermjXmYHf05kxZDe9zMGOQz/03dbx7Yey9
Y1r376sZXngk3lFaXsHf90JNl4iA+mtqvuwFy4o1idkl3Hvj9R8ZbSUnuPfG
+OWXVRNOcu+NHF3LJ6F53Htjh+nMjKsHuPeB6Ffb9sLt3PtgSZcvNpbbuPeB
UPLa/uRa7n1Q0jLfSryGe19EKOYoBOnc+8KmrE+HTBX3vrjmONLxtIR7X+SH
98qPFXPvB/2P5o3HYrj3w8GXVzobRHLvh/du1UM8F3Hvh6HHq1tWBnI/F/sO
RB9ePZf7udie1lhY4M39XJwzyfm4yIP7udA7+9ZzzQzu56F2w955ZVO5n4e7
BzYKuoP7eThedeTiJQfu52H5xT+dB9tzPx9htrK748dzPx8JMzYJTltxPx9V
numeRmO4n4/iBGP/EgvuF6DKIuq/qOHcL4Du+vozdqbcL8A/JfdbuxlzvwDN
gzvZtBtx74/Ovwxvbjbk3h+C46M8f+hz74/HM/Ye1u/HvT+maCa2OupwHwA3
92ldF2tzHwCXTiUZB3tyH4ByQ/HHhm7cB6C9/fWhSV24D4TR1djg7I7cB6Ko
i6LprQb3gfDP0Cv0+X5UvQ9ExznHIi5+UbPGQpwt8s61alczFuLdBG+zQ21q
Tl+IHfJ1+eYt3C/EJV0XjcPN3AfhRG33Rtt33AdB7Jnndr2B+yDULql64f+G
+yBYa5hs//Ca+2BUah113VjDfTD61Q0us33JfTA+7Z7T6ckz7oNhNaS2Ys0T
7hfB7ITUwrGS+0V4pdPxafMj7hfBptuEZ/kV3C/Cf2t76Mc+4D4ExxY/ih19
T83GIQj8Zln2vpzfC4GFsMz4wm01h4RAx1SxMOsmvx+C7J0G8UFlas4Nwftu
8c7j/qIvBJvCzG9olaj5WQjMWsta6q7SH4ogp5yzZcX0h8I+c3fPgkv0h+Lb
BOHjLRfoD8WbIK/By87RH4oniX1LRWfoD0WlWY+7YafoD4WGrsboBSfoD8XI
6LHlXoX0h0GvbEKRxzH6w9CUpndnVgH9Ychebdjf80/6w+Bh/SLDN5/+MDQ4
+vVdeIj+MCTkbToRlUd/GMJrNCNlv9MfhqCccYNW7aNfgKlP6+/t2ku/AJtP
GC0v2kO/AM7WT03v7KZfgNIrooKGnfQL8KFp7JBeO+gXIDt4e7zVNvoF6DVw
+oZ5W+gXwNy+OmPJJvrDkbrHyS1/I/3hEJla33yUTX84jG/k9+65nv5w/G1/
tKfzOvrDcSjV66w0i/5wSC/8qVewmv5wwO+jQX0m/eFwexFzziKD/ghs3eX5
OXYF/RGIO/759pFl9Efg4T+3x7Wm0x+Bytt2pk5L6I/A97mHtq5W0R+B+L/z
sipS6Y/AbzYX280V9EdgvvXySkUy/ZEwHb7NslxGfyRqvA+9MZfSHwmnvsKe
y5Loj0SRzaGsJ2L6I7HSySJysoj+SKD1r805Qvoj8e1Cgp7mYvojkT5G91lU
HP1R0N16vOlODP1RkB8MdZkUTX8UPvR2Lj8QSX8UFKMUm/Ui6I+C7WWfdRkC
+qOw9oxhYXso/VHIbLTWTAih/+f3GvrIXgXTH42Bpc49QoLoj0af5sCzjwPp
j8YLzf7L/APoj8bY/Y5BjxbQH40dAYfcAufTH40lgrmTn86lPxqua7wmRfjR
H42HX65OeutDfwzG6X+YJPemPwbvbBwndPSiPwbyOMPRGzzpj8H2uSb6JrPp
j0Hqqa7vj8+iPwZx1jnnXWfS/3NfeT+xcgb9MZBVntWRuNEfi4DqtC29XOmP
xZr8hO8Hp9EfiwG+X11dp9Ifi6IzRYtrptAfi+EX3EUZoD8WW6LXeVg40x+L
UdpJGrcn0x+LTbN6r5E40h8H6aetr40c6I9DzTeBwY2J9MchR7/eIMme/jjM
lF9/bTyB/jh4BeevLLelPw4LsyRNS8fTH4fPuw3MbcfRH4fzgYdGvLGmPx7n
qwJbcq3oj4fpAdVq/7H0x6N4d/Lrvpb0/+TP5b3KR9Mfj7o+Zl/XjaI/HmIt
8+OzR9Ifj9Xbfh/b24L+eOxMTJf8Y07/Ypyrz0/fOpz+xTjsb+kXPIz+xWhP
HvxuuBn9i/GxeK9381D6FwPH36ReMKF/MbK0JgizjOlfjLY+t0cEDqF/MUIK
vuePHky/ECNODvr0w4h+IUb+WN7rwUD6hXi8a21D/gD6hfjW/dfNKwzpF2Je
UHO3Rf3pF+LN8u+uDgb0C9F3uZaXoT79Qvx7LdKsvR/9CahN8Lr2X1/6E/Dj
pqbVRV36EzD9XH7UPh36E2BrGx+3pg/9CbB4Pc8hqTf9CWj/V1gRpE1/AvaO
OuA8sxf9P331lUn2WvSLcOXz06QRPdXcRwRoRTsP6MH3iCC40P9hr+5qthJh
XPGSCR278X0iZA/rJ/jcRc1eIogLbBd86Mz3itDgOVq/sZOaRSJs/cN815uO
fL8IQ6841dVqqjlbhHV5CV9rO7BH9PPv1z3332io+agIMa9snlf+KFD3iaA7
1CTn9Tc1l4vwvdahqvWLmp+JMPDk8p1dP6u5SYTpc248MPqkZg0xZF77V9m2
qbmPGGUVmUe9W9RsLMYqrwJ38Xs1W4nxb4CF16YmNUMMrdsPL51tVLOXGPb3
4jZVN6g5RAxHfXGpTr2aRWLs7DE9wKVOzeli+LoMcpG9VnO2GIn3uyr/rFFz
rhjRdxs0a1+q+agY9VfW3x32gv1iXLTd8CLyGfvFsJslssp/wn4xHnqtPfG+
kv1iOC0cHj/5MfsTUV0X5pn1iP2JKFHOmldZwf5E9HMqV1k9ZH8ibHaWXsy8
z/5EHHnWrvviH/YnIuGutsT5LvsTcdZ+3+M9d9j/cy/D1I632Z+IWs2Q/TE3
2Z+I943xn/4pY38iRPOu2zuXsj8Rx26dCz5yg/2J+HR1m8C4hP2JQOVObL7G
/kScdvjWqHWV/Yk4d6sxKrOY/Un4pty9v9Nl9idhd6hNzoqL7E+CX/W92V0v
sD8JYQ8PHF57jv1JCEi7U9jvLPuTULY9ceGe0+xPwlffk3tGn2J/ErZbX5Wd
P8H+n77ma/95FrE/CS8F9ddeHmd/Eh6Nj7NMPcb+JMgL0vroHWV/EsylkeHH
jrA/CRWjYk29/mR/EqqGPnJtzmd/ErY09vhr0x/slyDgy6LcSYfYL0GpgUvp
izz2S3Crzcxx3QH2S9Dhj4z3E39nvwTa/ZpqavexX4JW39beO35j/8/vW9jF
zt7Lfgkeewc3auayXwK7Z8O2nM1hvwTd13kHSnazX4InHQonWO1ivwTSwRbD
GnewX4JT9rmDjmxnvwS/ztcdKNrGfgkaozMNxm9lvwQtiXq9Pm9mvxSvLj9r
Ld7EfilKexrdzPqV/VK05nRbM38j+6V4l9xmMWwD+6WIiZ52oGU9+6X4Oiyk
/fov7JdCFlsyaPs69kvxsUNHbeFa9kthWnn02rQs9kshMFQ4DlrDfikW6PUX
fVzFfimeCH0D7mWyX4q4Xp3ajmawX4oXpjpO2SvZL8VGa/EY8Qr2S6HUGHnJ
dzn7Zaja69U4YRn7Zdgc3f3koKXsl+GX55k6ndPZL4OqTPvr2zT2y3CgS5Po
XxX7ZRizcW3cNSX7ZZAn+b0+lsp+GdzzS57mKtgvwxRTsdeGFPbL8HhH0/jl
yeyXwf7XplUyOftlEE0cNSNOxn4Zrs+JEYZK2S9Dgt6yjwsk7Jdh+5jAp95J
7Jfh3opaE49E9stRazv6nJuY/XJELbbLmyZivxwxHsNeuCSwX47QMrNoFyH7
5WjbLLSdupj9cvi3urtOj2e/HNm/99w6I479clie0TObHct+OZSyijqfGPbL
cWL8rWr/aPbLoTUxXScsiv1yVG/MiI+LZL8c5z8uey+NYL8cyTlmuUvD2S/H
ugHmib8I2C+Hn51PxK4w9iej6FaKLD+U/cn4O0/127kQ9iejxcv91c1F7E+G
Tcs9p6fB7E/GpvHGh94HsT8Zwi6OQ7uSQ5KxcRXyjBayPxkOVd624wLZn4yh
HfeUzgxgfzLkR0JDBf7sT8YHkyftygXsT0ZZV0H21vnsT0bzTPehhfPYnwz3
pg+H78xlfzI+v7sz5q0f+5PRo7ffbz3JGiloPq3RbZQv+1Ow79GihbN82J+C
tac67Y73Zn8K2m5l3fjFi/0pOJW349GxOexPQdWZp+UPPNmfgsHOuvmfZ7M/
BYZ930cYk9NTMOcXtx+uHuxPgWXYS4lwFvtTsFGac23LTPanIK/Yv+GSO/tT
MGDs97q6GexPwaUk5bl+5GcpSGq6GQw39qegcP27u/Gu7FfAaX+97o7p7Fcg
7K87Q/6axn4Fsi8ca2ubyn4FVB5HNg8nQ4Htw+o+z3NhvwJfi9earZrCfgWu
TivrcxbsV6Bq4aMLDc7sV2Cm+ScLY3K2Ahd04nz9nNivwKsLSvvVk9mvwL1q
VcVFR/Yr0NfhumWrA/sVMJpb4Dia/EwB97U5PwST2K/A4OrP0l0T2Z8K7Sbr
nAf27E/FlTMnZb3Jxqm4mtfhu/sE9qdiWXi2zUo79qei6nqNbrEt+1NhcWL1
7m/j2Z8KsUH3u5PIolS4n2zNTx7H/lR0t3g1+pQN+1MhvCj1abNmfyoyI6cN
tCMf/fn93W0rZVbsT8V9P9sNp8ayPxU3nv/p0G7J/lQcrtFZ4UBuSsV6B4OY
tDHsV8K+Wl5XPJr9StS8b+7YhWyshK/C7dTMUexXYqbCSTN7JPuVWHQr9+UD
C/YrMcDAMcCIHKLEsuPPwwUj2P/z+7mRmvnm7Feib8o+6w/D2a9E9TxJswM5
V4kvZaexchj7lWgt8x18x4z9SrzbO2q1IblciZHPLdLDTdmvxFRvB82jQ9mv
ROzLOdpfTdivgvW+gH0zyH1U8D/ofXmzMftVGNHdMvzlEParUHOzfp01GSps
fLLaMX0w+1Vo+tE94c4g9qtQfV5kNoQsUqEu+HpgghH7Vfj6TKff5YHsV2Hp
yzAPHXKuCgW5NzoKBrBfhS/PvCeeMGS/Cq3v9Bq6kst/vnfDyIGB/dmvQlTr
wetHDNivgtHRw280yRpp+HrYd/V8ffanoXrYxdzDeuxPQ9U2bStNslUaZl+M
sVvQj/1pSFnSdvxIX/anwfpt1f7O5JA0pNvN6hmky/40PNgTV1Okw/409FUI
bXqRs3++x3Blc0Qf9qeh+M4Lk0u92Z+GPU/OX+lPvpyGSsnMe4na7E/DwX3X
fG71Yn8aZPMjMYLclAZ7r/idy7XYvwSfDPUET3uyfwnmdN67xYFsvARhxj62
23qwfwkKx8Y7tXZn/xI45Y0/5vOT/weYtpz+
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"epoch", " ", "number"}], TraditionalForm], 
       FormBox["\"average square error\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 500.}, {0, 0.11766538858923087`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"2 Hidden Neurons\"", "\"4 Hidden Neurons\"", "\"8 Hidden Neurons\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7657077223149986`*^9},
 CellLabel->
  "Out[1225]=",ExpressionUUID->"58778482-f9c7-49b9-b80c-b407a368bd46"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]], 
        LineBox[CompressedData["
1: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
qf6p2J4d2d2oS/xUPD3AY5XEXHX5G/as0FU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Dashing[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Dashing[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
        RowBox[{"epoch", " ", "number"}], TraditionalForm], 
       FormBox["\"average square error\"", TraditionalForm]}, 
     AxesOrigin -> {0., 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 250.}, {0, 0.3831322117845244}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"2 Hidden Neurons\"", "\"4 Hidden Neurons\"", "\"8 Hidden Neurons\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7657077224243183`*^9},
 CellLabel->
  "Out[1226]=",ExpressionUUID->"bc0b5012-95a3-4465-830d-d97fd00c4404"]
}, Open  ]]
},
WindowSize->{1504, 920},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 82094, 2182, 5389, "Input",ExpressionUUID->"7f5c40c5-df4c-4147-aad5-45e4e3a34d2d"],
Cell[82677, 2206, 238, 5, 22, "Print",ExpressionUUID->"f344ac2e-2580-4433-8851-a09452b57a30"],
Cell[82918, 2213, 170, 3, 32, "Output",ExpressionUUID->"e195445d-ed6f-43ef-9471-61e4198e3537"],
Cell[83091, 2218, 12710, 229, 232, "Output",ExpressionUUID->"8697f28c-4d67-43ee-b86d-aa08aed431f3"],
Cell[95804, 2449, 15032, 264, 375, "Output",ExpressionUUID->"cd0cb5e9-f961-44eb-a418-7fff0446eeba"],
Cell[110839, 2715, 236, 5, 22, "Print",ExpressionUUID->"1fcc4726-92be-4777-becc-ba94fef7267f"],
Cell[111078, 2722, 172, 3, 32, "Output",ExpressionUUID->"85f6ab82-9caf-4b75-bc73-8eaa0b73fe4f"],
Cell[111253, 2727, 14520, 259, 238, "Output",ExpressionUUID->"fd0a8c4b-ab22-42a2-8a9a-583c2a7d90df"],
Cell[125776, 2988, 40937, 689, 375, "Output",ExpressionUUID->"e93656c5-9e10-4f19-ba87-1bf05a720e00"],
Cell[166716, 3679, 236, 5, 22, "Print",ExpressionUUID->"d5100ad5-be58-4967-8013-441cd6036c65"],
Cell[166955, 3686, 173, 3, 32, "Output",ExpressionUUID->"bb926d9a-118a-4dea-aaf3-30645c683bba"],
Cell[167131, 3691, 14509, 259, 238, "Output",ExpressionUUID->"354d9da9-8d0a-4dd3-b6d3-b6c22ccfbdeb"],
Cell[181643, 3952, 43831, 737, 375, "Output",ExpressionUUID->"f56e97ff-2770-42a4-ba47-554f7db451ec"],
Cell[225477, 4691, 238, 5, 22, "Print",ExpressionUUID->"f7cd848c-8b1a-4412-b76c-ef95f7ac1d42"],
Cell[225718, 4698, 173, 3, 32, "Output",ExpressionUUID->"c04bae86-f047-4519-a683-385700504655"],
Cell[225894, 4703, 7548, 144, 227, "Output",ExpressionUUID->"fac95e39-3b6b-4f68-a21c-30a712206c0d"],
Cell[233445, 4849, 13606, 242, 375, "Output",ExpressionUUID->"09e5e763-6d92-4776-9dea-3329541627b8"],
Cell[247054, 5093, 236, 5, 22, "Print",ExpressionUUID->"f76e1545-fc3a-4c6e-8117-40a27ffd8a66"],
Cell[247293, 5100, 175, 3, 32, "Output",ExpressionUUID->"a9878462-7c4b-4655-8819-21f3dcd24ed3"],
Cell[247471, 5105, 7860, 149, 230, "Output",ExpressionUUID->"8a9b3f30-c598-42c3-a7f0-a1c4a2e5c9cc"],
Cell[255334, 5256, 48204, 808, 375, "Output",ExpressionUUID->"1fc51a78-c37c-4a50-b415-1aa8e98082e3"],
Cell[303541, 6066, 238, 5, 22, "Print",ExpressionUUID->"53a6e763-8d52-457b-8af8-f9c290b619e6"],
Cell[303782, 6073, 174, 3, 32, "Output",ExpressionUUID->"d773eeb5-9729-401f-915a-a681f0ae9cad"],
Cell[303959, 6078, 8379, 159, 198, "Output",ExpressionUUID->"529521a8-ab8f-43ff-afa9-c5f8871d0af5"],
Cell[312341, 6239, 53102, 888, 375, "Output",ExpressionUUID->"684f65cd-7004-43be-9731-99321a52b01e"],
Cell[365446, 7129, 238, 5, 22, "Print",ExpressionUUID->"cbca6e3d-9484-41b7-9dce-950032ae0fe8"],
Cell[365687, 7136, 173, 3, 32, "Output",ExpressionUUID->"c3e6c745-15fb-4f53-915d-2e6454ede2d3"],
Cell[365863, 7141, 5289, 108, 193, "Output",ExpressionUUID->"f06745c5-0ceb-4bef-b5b5-4beab8a432a5"],
Cell[371155, 7251, 14218, 252, 375, "Output",ExpressionUUID->"079e2c1b-59af-406b-ad1a-9dfc6acff0f6"],
Cell[385376, 7505, 238, 5, 22, "Print",ExpressionUUID->"7d73cb7a-8485-419b-a934-cde266845698"],
Cell[385617, 7512, 173, 3, 32, "Output",ExpressionUUID->"9ce2e3f6-021a-416b-ad5b-df514191b0fb"],
Cell[385793, 7517, 6099, 120, 193, "Output",ExpressionUUID->"6d95684b-071b-4686-bb85-7754ea74ba11"],
Cell[391895, 7639, 45549, 765, 375, "Output",ExpressionUUID->"a3cc7934-37e6-4607-a0fc-21c1cf879411"],
Cell[437447, 8406, 238, 5, 22, "Print",ExpressionUUID->"3d828aab-2e33-4687-8d24-4e95d0cfa72d"],
Cell[437688, 8413, 173, 3, 32, "Output",ExpressionUUID->"d7a3e737-e923-44e1-8405-c9ff6a9ae055"],
Cell[437864, 8418, 5515, 112, 198, "Output",ExpressionUUID->"fec85081-5b3f-4bae-a2c0-7b6e8d2f5842"],
Cell[443382, 8532, 35281, 597, 375, "Output",ExpressionUUID->"aafb7f72-e7db-41c9-85fb-68aef3f18f32"],
Cell[478666, 9131, 39410, 739, 200, "Output",ExpressionUUID->"400f1ff7-7076-45bd-a09b-12b94fb79da2"],
Cell[518079, 9872, 40812, 761, 200, "Output",ExpressionUUID->"dece7603-d09d-4db0-bccd-105b2795cdca"],
Cell[558894, 10635, 41354, 770, 200, "Output",ExpressionUUID->"0b86ff4e-e7bb-4bb1-80b8-ea1670f62cb6"],
Cell[600251, 11407, 56042, 1025, 200, "Output",ExpressionUUID->"53ba6905-fa4c-4bb5-9b17-3c72b88e37ce"],
Cell[656296, 12434, 36839, 711, 200, "Output",ExpressionUUID->"58778482-f9c7-49b9-b80c-b407a368bd46"],
Cell[693138, 13147, 28346, 572, 200, "Output",ExpressionUUID->"bc0b5012-95a3-4465-830d-d97fd00c4404"]
}, Open  ]]
}
]
*)

